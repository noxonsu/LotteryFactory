{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_cakeTokenAddress",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_OnoutFeeEnabled",
						"type": "bool"
					},
					{
						"internalType": "address",
						"name": "_KycToken",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_KycEnabled",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "AdminTokenRecovery",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "lotteryId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "firstTicketIdNextLottery",
						"type": "uint256"
					}
				],
				"name": "LotteryClose",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "lotteryId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "injectedAmount",
						"type": "uint256"
					}
				],
				"name": "LotteryInjection",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "lotteryId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "finalNumber",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "countWinningTickets",
						"type": "uint256"
					}
				],
				"name": "LotteryNumberDrawn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "lotteryId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "startTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "endTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "priceTicketInCake",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "firstTicketId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "injectedAmount",
						"type": "uint256"
					}
				],
				"name": "LotteryOpen",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "treasury",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "injector",
						"type": "address"
					}
				],
				"name": "NewOperatorAndTreasuryAndInjectorAddresses",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "claimer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "lotteryId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "numberTickets",
						"type": "uint256"
					}
				],
				"name": "TicketsClaim",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "lotteryId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "numberTickets",
						"type": "uint256"
					}
				],
				"name": "TicketsPurchase",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "KYCEnabled",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "KYCToken",
				"outputs": [
					{
						"internalType": "contract IKYCToken",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MAX_LENGTH_LOTTERY",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MAX_TREASURY_FEE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MIN_DISCOUNT_DIVISOR",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MIN_LENGTH_LOTTERY",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "OnoutAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "OnoutFeeEnabled",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lotteryId",
						"type": "uint256"
					},
					{
						"internalType": "uint32[]",
						"name": "_ticketNumbers",
						"type": "uint32[]"
					}
				],
				"name": "buyTickets",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cakeToken",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_discountDivisor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_priceTicket",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_numberTickets",
						"type": "uint256"
					}
				],
				"name": "calculateTotalPriceForBulkTickets",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_wallet",
						"type": "address"
					}
				],
				"name": "checkWalletKYC",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lotteryId",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "_ticketIds",
						"type": "uint256[]"
					},
					{
						"internalType": "uint32[]",
						"name": "_brackets",
						"type": "uint32[]"
					}
				],
				"name": "claimTickets",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lotteryId",
						"type": "uint256"
					}
				],
				"name": "closeLottery",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentLotteryId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentTicketId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lotteryId",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "_seed",
						"type": "bytes32"
					},
					{
						"internalType": "bool",
						"name": "_autoInjection",
						"type": "bool"
					}
				],
				"name": "drawFinalNumberAndMakeLotteryClaimable",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "existKyc",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lotteryId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "injectFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "injectorAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxNumberTicketsPerBuyOrClaim",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxPriceTicketInCake",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minPriceTicketInCake",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "numbersCount",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "operatorAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pendingInjectionNextLottery",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenAmount",
						"type": "uint256"
					}
				],
				"name": "recoverWrongTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_KYCEnabled",
						"type": "bool"
					}
				],
				"name": "setKYCEnabled",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_KYCTokenAddress",
						"type": "address"
					}
				],
				"name": "setKYCToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_maxNumberTicketsPerBuy",
						"type": "uint256"
					}
				],
				"name": "setMaxNumberTicketsPerBuy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_minPriceTicketInCake",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxPriceTicketInCake",
						"type": "uint256"
					}
				],
				"name": "setMinAndMaxTicketPriceInCake",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_numbersCount",
						"type": "uint32"
					}
				],
				"name": "setNumbersCount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newFeeAddress",
						"type": "address"
					}
				],
				"name": "setOnoutAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_value",
						"type": "bool"
					}
				],
				"name": "setOnoutFeeEnabled",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_operatorAddress",
						"type": "address"
					}
				],
				"name": "setOperatorAddresses",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_operatorAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_treasuryAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_injectorAddress",
						"type": "address"
					}
				],
				"name": "setOperatorAndTreasuryAndInjectorAddresses",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_endTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_priceTicketInCake",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_discountDivisor",
						"type": "uint256"
					},
					{
						"internalType": "uint256[6]",
						"name": "_rewardsBreakdown",
						"type": "uint256[6]"
					},
					{
						"internalType": "uint256",
						"name": "_treasuryFee",
						"type": "uint256"
					}
				],
				"name": "startLottery",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "treasuryAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "viewCurrentLotteryId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lotteryId",
						"type": "uint256"
					}
				],
				"name": "viewLottery",
				"outputs": [
					{
						"components": [
							{
								"internalType": "enum PancakeSwapLotteryKYC.Status",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "startTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "endTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "priceTicketInCake",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "discountDivisor",
								"type": "uint256"
							},
							{
								"internalType": "uint256[6]",
								"name": "rewardsBreakdown",
								"type": "uint256[6]"
							},
							{
								"internalType": "uint256",
								"name": "treasuryFee",
								"type": "uint256"
							},
							{
								"internalType": "uint256[6]",
								"name": "cakePerBracket",
								"type": "uint256[6]"
							},
							{
								"internalType": "uint256[6]",
								"name": "countWinnersPerBracket",
								"type": "uint256[6]"
							},
							{
								"internalType": "uint256",
								"name": "firstTicketId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "firstTicketIdNextLottery",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amountCollectedInCake",
								"type": "uint256"
							},
							{
								"internalType": "uint32",
								"name": "finalNumber",
								"type": "uint32"
							}
						],
						"internalType": "struct PancakeSwapLotteryKYC.Lottery",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_ticketIds",
						"type": "uint256[]"
					}
				],
				"name": "viewNumbersAndStatusesForTicketIds",
				"outputs": [
					{
						"internalType": "uint32[]",
						"name": "",
						"type": "uint32[]"
					},
					{
						"internalType": "bool[]",
						"name": "",
						"type": "bool[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_lotteryId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_ticketId",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "_bracket",
						"type": "uint32"
					}
				],
				"name": "viewRewardsForTicketId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_lotteryId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_cursor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_size",
						"type": "uint256"
					}
				],
				"name": "viewUserInfoForLotteryId",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					},
					{
						"internalType": "uint32[]",
						"name": "",
						"type": "uint32[]"
					},
					{
						"internalType": "bool[]",
						"name": "",
						"type": "bool[]"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenAmount",
						"type": "uint256"
					}
				],
				"name": "withdrawBank",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawCooldown",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"buyTickets(uint256,uint32[])": {
					"details": "Callable by users",
					"params": {
						"_lotteryId": ": lotteryId",
						"_ticketNumbers": ": array of ticket numbers between 1,000,000 and 1,999,999"
					}
				},
				"calculateTotalPriceForBulkTickets(uint256,uint256,uint256)": {
					"params": {
						"_discountDivisor": ": divisor for the discount",
						"_numberTickets": "number of tickets to buy",
						"_priceTicket": "price of a ticket (in CAKE)"
					}
				},
				"claimTickets(uint256,uint256[],uint32[])": {
					"details": "Callable by users only, not contract!",
					"params": {
						"_brackets": ": array of brackets for the ticket ids",
						"_lotteryId": ": lottery id",
						"_ticketIds": ": array of ticket ids"
					}
				},
				"closeLottery(uint256)": {
					"details": "Callable by operator",
					"params": {
						"_lotteryId": ": lottery id"
					}
				},
				"constructor": {
					"details": "RandomNumberGenerator must be deployed prior to this contract",
					"params": {
						"_cakeTokenAddress": ": address of the CAKE token"
					}
				},
				"drawFinalNumberAndMakeLotteryClaimable(uint256,bytes32,bool)": {
					"details": "Callable by operator",
					"params": {
						"_autoInjection": ": reinjects funds into next lottery (vs. withdrawing all)",
						"_lotteryId": ": lottery id"
					}
				},
				"injectFunds(uint256,uint256)": {
					"details": "Callable by owner or injector address",
					"params": {
						"_amount": ": amount to inject in CAKE token",
						"_lotteryId": ": lottery id"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"recoverWrongTokens(address,uint256)": {
					"details": "Only callable by owner.",
					"params": {
						"_tokenAddress": ": the address of the token to withdraw",
						"_tokenAmount": ": the number of token amount to withdraw"
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"setMaxNumberTicketsPerBuy(uint256)": {
					"details": "Only callable by owner"
				},
				"setMinAndMaxTicketPriceInCake(uint256,uint256)": {
					"details": "Only callable by owner",
					"params": {
						"_maxPriceTicketInCake": ": maximum price of a ticket in CAKE",
						"_minPriceTicketInCake": ": minimum price of a ticket in CAKE"
					}
				},
				"setOperatorAndTreasuryAndInjectorAddresses(address,address,address)": {
					"details": "Only callable by owner",
					"params": {
						"_injectorAddress": ": address of the injector",
						"_operatorAddress": ": address of the operator",
						"_treasuryAddress": ": address of the treasury"
					}
				},
				"startLottery(uint256,uint256,uint256,uint256[6],uint256)": {
					"details": "Callable by operator",
					"params": {
						"_discountDivisor": ": the divisor to calculate the discount magnitude for bulks",
						"_endTime": ": endTime of the lottery",
						"_priceTicketInCake": ": price of a ticket in CAKE",
						"_rewardsBreakdown": ": breakdown of rewards per bracket (must sum to 10,000)",
						"_treasuryFee": ": treasury fee (10,000 = 100%, 100 = 1%)"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"viewLottery(uint256)": {
					"params": {
						"_lotteryId": ": lottery id"
					}
				},
				"viewNumbersAndStatusesForTicketIds(uint256[])": {
					"params": {
						"_ticketIds": ": array of _ticketId"
					}
				},
				"viewRewardsForTicketId(uint256,uint256,uint32)": {
					"details": "Computations are mostly offchain. This is used to verify a ticket!",
					"params": {
						"_bracket": ": bracket for the ticketId to verify the claim and calculate rewards",
						"_lotteryId": ": lottery id",
						"_ticketId": ": ticket id"
					}
				},
				"viewUserInfoForLotteryId(address,uint256,uint256,uint256)": {
					"params": {
						"_cursor": ": cursor to start where to retrieve the tickets",
						"_lotteryId": ": lottery id",
						"_size": ": the number of tickets to retrieve",
						"_user": ": user address"
					}
				}
			},
			"title": "PancakeSwap Lottery.",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"buyTickets(uint256,uint32[])": {
					"notice": "Buy tickets for the current lottery"
				},
				"calculateTotalPriceForBulkTickets(uint256,uint256,uint256)": {
					"notice": "Calculate price of a set of tickets"
				},
				"claimTickets(uint256,uint256[],uint32[])": {
					"notice": "Claim a set of winning tickets for a lottery"
				},
				"closeLottery(uint256)": {
					"notice": "Close lottery"
				},
				"constructor": {
					"notice": "Constructor"
				},
				"drawFinalNumberAndMakeLotteryClaimable(uint256,bytes32,bool)": {
					"notice": "Draw the final number, calculate reward in CAKE per group, and make lottery claimable"
				},
				"injectFunds(uint256,uint256)": {
					"notice": "Inject funds"
				},
				"recoverWrongTokens(address,uint256)": {
					"notice": "It allows the admin to recover wrong tokens sent to the contract"
				},
				"setMaxNumberTicketsPerBuy(uint256)": {
					"notice": "Set max number of tickets"
				},
				"setMinAndMaxTicketPriceInCake(uint256,uint256)": {
					"notice": "Set CAKE price ticket upper/lower limit"
				},
				"setOperatorAndTreasuryAndInjectorAddresses(address,address,address)": {
					"notice": "Set operator, treasury, and injector addresses"
				},
				"startLottery(uint256,uint256,uint256,uint256[6],uint256)": {
					"notice": "Start the lottery"
				},
				"viewCurrentLotteryId()": {
					"notice": "View current lottery id"
				},
				"viewLottery(uint256)": {
					"notice": "View lottery information"
				},
				"viewNumbersAndStatusesForTicketIds(uint256[])": {
					"notice": "View ticker statuses and numbers for an array of ticket ids"
				},
				"viewRewardsForTicketId(uint256,uint256,uint32)": {
					"notice": "View rewards for a given ticket, providing a bracket, and lottery id"
				},
				"viewUserInfoForLotteryId(address,uint256,uint256,uint256)": {
					"notice": "View user ticket ids, numbers, and statuses of user for a given lottery"
				}
			},
			"notice": "It is a contract for a lottery system using randomness provided externally.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"source/LotteryKYC.sol": "PancakeSwapLotteryKYC"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 99999
		},
		"remappings": []
	},
	"sources": {
		"source/LotteryKYC.sol": {
			"keccak256": "0xb1fd7d4342706c93b0e18592bd1cf109d6ee1c1f0cf32b4dea9151fdbe8fb0d0",
			"license": "MIT",
			"urls": [
				"bzz-raw://0e8d7d0957fc529f1182e45c911f3e4fe3605148d1780072ccf4d212b104cfcd",
				"dweb:/ipfs/QmX6t6e5NyRX1WB7coUKThHMf6u6KGnwEgP7o5eGjddBAv"
			]
		}
	},
	"version": 1
}