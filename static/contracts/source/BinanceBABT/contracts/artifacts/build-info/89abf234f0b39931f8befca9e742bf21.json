{
	"id": "89abf234f0b39931f8befca9e742bf21",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"source/BinanceBABT/contracts/SBT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./interfaces/IERC721.sol\";\nimport \"./interfaces/ISBT721.sol\";\nimport \"./interfaces/IERC721Metadata.sol\";\nimport \"./utils/Context.sol\";\nimport \"./utils/Counters.sol\";\nimport \"./utils/EnumerableMap.sol\";\nimport \"./utils/Strings.sol\";\nimport \"./utils/Initializable.sol\";\n\nimport \"./erc/ERC165.sol\";\nimport \"./access/AccessControl.sol\";\n\n/**\n * An experiment in Soul Bound Tokens (SBT's) following Vitalik's\n * co-authored whitepaper at:\n * https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4105763\n *\n * I propose for a rename to Non-Transferable Tokens NTT's\n */\ncontract SBT is Initializable, AccessControl, ISBT721, IERC721Metadata {\n    using Strings for uint256;\n    using Counters for Counters.Counter;\n    using EnumerableMap for EnumerableMap.AddressToUintMap;\n    using EnumerableMap for EnumerableMap.UintToAddressMap;\n\n    // Mapping from token ID to owner address\n    EnumerableMap.UintToAddressMap private _ownerMap;\n    EnumerableMap.AddressToUintMap private _tokenMap;\n\n    // Token Id\n    Counters.Counter private _tokenId;\n\n    // Token name\n    string public name;\n\n    // Token symbol\n    string public symbol;\n\n    // Token URI\n    string private _baseTokenURI;\n\n    // Operator\n    bytes32 public constant OPERATOR_ROLE = keccak256(\"OPERATOR_ROLE\");\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    function initialize(\n        string memory name_,\n        string memory symbol_,\n        address admin_\n    ) public reinitializer(1) {\n        name = name_;\n        symbol = symbol_;\n\n        // grant DEFAULT_ADMIN_ROLE to contract creator\n        _grantRole(DEFAULT_ADMIN_ROLE, admin_);\n        _grantRole(OPERATOR_ROLE, admin_);\n    }\n\n    function attest(address to) external returns (uint256) {\n        require(\n            hasRole(OPERATOR_ROLE, _msgSender()),\n            \"Only the account with OPERATOR_ROLE can attest the SBT\"\n        );\n        require(to != address(0), \"Address is empty\");\n        require(!_tokenMap.contains(to), \"SBT already exists\");\n\n        _tokenId.increment();\n        uint256 tokenId = _tokenId.current();\n\n        _tokenMap.set(to, tokenId);\n        _ownerMap.set(tokenId, to);\n\n        emit Attest(to, tokenId);\n        emit Transfer(address(0), to, tokenId);\n\n        return tokenId;\n    }\n\n    function batchAttest(address[] calldata addrs) external {\n        uint256 addrLength = addrs.length;\n\n        require(\n            hasRole(OPERATOR_ROLE, _msgSender()),\n            \"Only the account with OPERATOR_ROLE can attest the SBT\"\n        );\n        require(addrLength <= 100, \"The max length of addresses is 100\");\n\n        for (uint8 i = 0; i < addrLength; i++) {\n            address to = addrs[i];\n\n            if (to == address(0) || _tokenMap.contains(to)) {\n                continue;\n            }\n\n            _tokenId.increment();\n            uint256 tokenId = _tokenId.current();\n\n            _tokenMap.set(to, tokenId);\n            _ownerMap.set(tokenId, to);\n\n            emit Attest(to, tokenId);\n            emit Transfer(address(0), to, tokenId);\n        }\n    }\n\n    function revoke(address from) external {\n        require(\n            hasRole(OPERATOR_ROLE, _msgSender()),\n            \"Only the account with OPERATOR_ROLE can revoke the SBT\"\n        );\n        require(from != address(0), \"Address is empty\");\n        require(_tokenMap.contains(from), \"The account does not have any SBT\");\n\n        uint256 tokenId = _tokenMap.get(from);\n\n        _tokenMap.remove(from);\n        _ownerMap.remove(tokenId);\n\n        emit Revoke(from, tokenId);\n        emit Transfer(from, address(0), tokenId);\n    }\n\n    function batchRevoke(address[] calldata addrs) external {\n        uint256 addrLength = addrs.length;\n\n        require(\n            hasRole(OPERATOR_ROLE, _msgSender()),\n            \"Only the account with OPERATOR_ROLE can revoke the SBT\"\n        );\n        require(addrLength <= 100, \"The max length of addresses is 100\");\n\n        for (uint8 i = 0; i < addrLength; i++) {\n            address from = addrs[i];\n\n            if (from == address(0) || !_tokenMap.contains(from)) {\n                continue;\n            }\n\n            uint256 tokenId = _tokenMap.get(from);\n\n            _tokenMap.remove(from);\n            _ownerMap.remove(tokenId);\n\n            emit Revoke(from, tokenId);\n            emit Transfer(from, address(0), tokenId);\n        }\n    }\n\n    function burn() external {\n        address sender = _msgSender();\n\n        require(\n            _tokenMap.contains(sender),\n            \"The account does not have any SBT\"\n        );\n\n        uint256 tokenId = _tokenMap.get(sender);\n\n        _tokenMap.remove(sender);\n        _ownerMap.remove(tokenId);\n\n        emit Burn(sender, tokenId);\n        emit Transfer(sender, address(0), tokenId);\n    }\n\n    /**\n     * @dev Update _baseTokenURI\n     */\n    function setBaseTokenURI(string calldata uri) public {\n        require(\n            hasRole(DEFAULT_ADMIN_ROLE, _msgSender()),\n            \"Only the account with DEFAULT_ADMIN_ROLE can set the base token URI\"\n        );\n\n        _baseTokenURI = uri;\n    }\n\n    function balanceOf(address owner) external view returns (uint256) {\n        (bool success, ) = _tokenMap.tryGet(owner);\n        return success ? 1 : 0;\n    }\n\n    function tokenIdOf(address from) external view returns (uint256) {\n        return _tokenMap.get(from, \"The wallet has not attested any SBT\");\n    }\n\n    function ownerOf(uint256 tokenId) external view returns (address) {\n        return _ownerMap.get(tokenId, \"Invalid tokenId\");\n    }\n\n    function totalSupply() external view returns (uint256) {\n        return _tokenMap.length();\n    }\n\n    function isOperator(address account) external view returns (bool) {\n        return hasRole(OPERATOR_ROLE, account);\n    }\n\n    function isAdmin(address account) external view returns (bool) {\n        return hasRole(DEFAULT_ADMIN_ROLE, account);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory) {\n        return\n            bytes(_baseTokenURI).length > 0\n                ? string(abi.encodePacked(_baseTokenURI, tokenId.toString()))\n                : \"\";\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../erc/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/erc/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"./Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/utils/EnumerableMap.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableMap.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./EnumerableSet.sol\";\n\n/**\n * @dev Library for managing an enumerable variant of Solidity's\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n * type.\n *\n * Maps have the following properties:\n *\n * - Entries are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\n *\n *     // Declare a set state variable\n *     EnumerableMap.UintToAddressMap private myMap;\n * }\n * ```\n *\n * The following map types are supported:\n *\n * - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n * - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n * - `bytes32 -> bytes32` (`Bytes32ToBytes32`) since v4.6.0\n * - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n * - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap.\n * ====\n */\nlibrary EnumerableMap {\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Map type with\n    // bytes32 keys and values.\n    // The Map implementation uses private functions, and user-facing\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\n    // the underlying Map.\n    // This means that we can only create new EnumerableMaps for types that fit\n    // in bytes32.\n\n    struct Bytes32ToBytes32Map {\n        // Storage of keys\n        EnumerableSet.Bytes32Set _keys;\n        mapping(bytes32 => bytes32) _values;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        Bytes32ToBytes32Map storage map,\n        bytes32 key,\n        bytes32 value\n    ) internal returns (bool) {\n        map._values[key] = value;\n        return map._keys.add(key);\n    }\n\n    /**\n     * @dev Removes a key-value pair from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {\n        delete map._values[key];\n        return map._keys.remove(key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {\n        return map._keys.contains(key);\n    }\n\n    /**\n     * @dev Returns the number of key-value pairs in the map. O(1).\n     */\n    function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {\n        return map._keys.length();\n    }\n\n    /**\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\n     *\n     * Note that there are no guarantees on the ordering of entries inside the\n     * array, and it may change when more entries are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToBytes32Map storage map, uint256 index) internal view returns (bytes32, bytes32) {\n        bytes32 key = map._keys.at(index);\n        return (key, map._values[key]);\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {\n        bytes32 value = map._values[key];\n        if (value == bytes32(0)) {\n            return (contains(map, key), bytes32(0));\n        } else {\n            return (true, value);\n        }\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {\n        bytes32 value = map._values[key];\n        require(value != 0 || contains(map, key), \"EnumerableMap: nonexistent key\");\n        return value;\n    }\n\n    /**\n     * @dev Same as {_get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {_tryGet}.\n     */\n    function get(\n        Bytes32ToBytes32Map storage map,\n        bytes32 key,\n        string memory errorMessage\n    ) internal view returns (bytes32) {\n        bytes32 value = map._values[key];\n        require(value != 0 || contains(map, key), errorMessage);\n        return value;\n    }\n\n    // UintToUintMap\n\n    struct UintToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        UintToUintMap storage map,\n        uint256 key,\n        uint256 value\n    ) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToUintMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToUintMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToUintMap storage map, uint256 index) internal view returns (uint256, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(UintToUintMap storage map, uint256 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToUintMap storage map, uint256 key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(key)));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        UintToUintMap storage map,\n        uint256 key,\n        string memory errorMessage\n    ) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(key), errorMessage));\n    }\n\n    // UintToAddressMap\n\n    struct UintToAddressMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        UintToAddressMap storage map,\n        uint256 key,\n        address value\n    ) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     *\n     * _Available since v3.4._\n     */\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\n        return address(uint160(uint256(get(map._inner, bytes32(key)))));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        UintToAddressMap storage map,\n        uint256 key,\n        string memory errorMessage\n    ) internal view returns (address) {\n        return address(uint160(uint256(get(map._inner, bytes32(key), errorMessage))));\n    }\n\n    // AddressToUintMap\n\n    struct AddressToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        AddressToUintMap storage map,\n        address key,\n        uint256 value\n    ) internal returns (bool) {\n        return set(map._inner, bytes32(uint256(uint160(key))), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(AddressToUintMap storage map, address key) internal returns (bool) {\n        return remove(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(AddressToUintMap storage map, address key) internal view returns (bool) {\n        return contains(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(AddressToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressToUintMap storage map, uint256 index) internal view returns (address, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (address(uint160(uint256(key))), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key))));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(AddressToUintMap storage map, address key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(uint256(uint160(key)))));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        AddressToUintMap storage map,\n        address key,\n        string memory errorMessage\n    ) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(uint256(uint160(key))), errorMessage));\n    }\n\n    // Bytes32ToUintMap\n\n    struct Bytes32ToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        Bytes32ToUintMap storage map,\n        bytes32 key,\n        uint256 value\n    ) internal returns (bool) {\n        return set(map._inner, key, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToUintMap storage map, bytes32 key) internal returns (bool) {\n        return remove(map._inner, key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool) {\n        return contains(map._inner, key);\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(Bytes32ToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToUintMap storage map, uint256 index) internal view returns (bytes32, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (key, uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, key);\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToUintMap storage map, bytes32 key) internal view returns (uint256) {\n        return uint256(get(map._inner, key));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        Bytes32ToUintMap storage map,\n        bytes32 key,\n        string memory errorMessage\n    ) internal view returns (uint256) {\n        return uint256(get(map._inner, key, errorMessage));\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ISBT721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is ISBT721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"source/BinanceBABT/contracts/interfaces/ISBT721.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface ISBT721 {\n    /**\n     * @dev This emits when a new token is created and bound to an account by\n     * any mechanism.\n     * Note: For a reliable `to` parameter, retrieve the transaction's\n     * authenticated `to` field.\n     */\n    event Attest(address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev This emits when an existing SBT is revoked from an account and\n     * destroyed by any mechanism.\n     * Note: For a reliable `from` parameter, retrieve the transaction's\n     * authenticated `from` field.\n     */\n    event Revoke(address indexed from, uint256 indexed tokenId);\n\n    /**\n     * @dev This emits when an existing SBT is burned by an account\n     */\n    event Burn(address indexed from, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Mints SBT\n     *\n     * Requirements:\n     *\n     * - `to` must be valid.\n     * - `to` must not exist.\n     *\n     * Emits a {Attest} event.\n     * Emits a {Transfer} event.\n     * @return The tokenId of the minted SBT\n     */\n    function attest(address to) external returns (uint256);\n\n    /**\n     * @dev Revokes SBT\n     *\n     * Requirements:\n     *\n     * - `from` must exist.\n     *\n     * Emits a {Revoke} event.\n     * Emits a {Transfer} event.\n     */\n    function revoke(address from) external;\n\n    /**\n     * @notice At any time, an SBT receiver must be able to\n     *  disassociate themselves from an SBT publicly through calling this\n     *  function.\n     *\n     * Emits a {Burn} event.\n     * Emits a {Transfer} event.\n     */\n    function burn() external;\n\n    /**\n     * @notice Count all SBTs assigned to an owner\n     * @dev SBTs assigned to the zero address is considered invalid, and this\n     * function throws for queries about the zero address.\n     * @param owner An address for whom to query the balance\n     * @return The number of SBTs owned by `owner`, possibly zero\n     */\n    function balanceOf(address owner) external view returns (uint256);\n\n    /**\n     * @param from The address of the SBT owner\n     * @return The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address\n     */\n    function tokenIdOf(address from) external view returns (uint256);\n\n    /**\n     * @notice Find the address bound to a SBT\n     * @dev SBTs assigned to zero address are considered invalid, and queries\n     *  about them do throw.\n     * @param tokenId The identifier for an SBT\n     * @return The address of the owner bound to the SBT\n     */\n    function ownerOf(uint256 tokenId) external view returns (address);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n}\n"
			},
			"source/BinanceBABT/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"source/BinanceBABT/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/utils/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"source/BinanceBABT/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"source/BinanceBABT/contracts/interfaces/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"source/BinanceBABT/contracts/SBT.sol": {
				"SBT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Attest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Revoke",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "OPERATOR_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "attest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "addrs",
									"type": "address[]"
								}
							],
							"name": "batchAttest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "addrs",
									"type": "address[]"
								}
							],
							"name": "batchRevoke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "admin_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "revoke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "setBaseTokenURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "tokenIdOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"attest(address)": {
								"details": "Mints SBT Requirements: - `to` must be valid. - `to` must not exist. Emits a {Attest} event. Emits a {Transfer} event.",
								"returns": {
									"_0": "The tokenId of the minted SBT"
								}
							},
							"balanceOf(address)": {
								"details": "SBTs assigned to the zero address is considered invalid, and this function throws for queries about the zero address.",
								"params": {
									"owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of SBTs owned by `owner`, possibly zero"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"initialize(string,string,address)": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"ownerOf(uint256)": {
								"details": "SBTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"tokenId": "The identifier for an SBT"
								},
								"returns": {
									"_0": "The address of the owner bound to the SBT"
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revoke(address)": {
								"details": "Revokes SBT Requirements: - `from` must exist. Emits a {Revoke} event. Emits a {Transfer} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setBaseTokenURI(string)": {
								"details": "Update _baseTokenURI"
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"tokenIdOf(address)": {
								"params": {
									"from": "The address of the SBT owner"
								},
								"returns": {
									"_0": "The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address"
								}
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"stateVariables": {
							"name": {
								"details": "Returns the token collection name."
							},
							"symbol": {
								"details": "Returns the token collection symbol."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/BinanceBABT/contracts/SBT.sol\":628:6698  contract SBT is Initializable, AccessControl, ISBT721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/BinanceBABT/contracts/SBT.sol\":628:6698  contract SBT is Initializable, AccessControl, ISBT721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c60144a\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xeb31403f\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf5b541a6\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x74a8f103\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x74a8f103\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x773c02d4\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x6c60144a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6d70f7ae\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x24d7806c\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x36568abe\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x44df8e70\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x24d7806c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x30176e13\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x077f224a\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x077f224a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x011002df\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3716:4472  function batchRevoke(address[] calldata addrs) external {... */\n    tag_3:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6369:6696  function supportsInterface(bytes4 interfaceId)... */\n    tag_4:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":1136:1150   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1129:1151   */\n      iszero\n        /* \"#utility.yul\":1111:1152   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1099:1101   */\n      0x20\n        /* \"#utility.yul\":1084:1102   */\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6369:6696  function supportsInterface(bytes4 interfaceId)... */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1127:1145  string public name */\n    tag_5:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1453:1790  function initialize(... */\n    tag_6:\n      tag_34\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5644:5741  function totalSupply() external view returns (uint256) {... */\n    tag_7:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n        /* \"#utility.yul\":3819:3844   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3807:3809   */\n      0x20\n        /* \"#utility.yul\":3792:3810   */\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5644:5741  function totalSupply() external view returns (uint256) {... */\n      tag_42\n        /* \"#utility.yul\":3673:3850   */\n      jump\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4374:4503  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_8:\n      tag_52\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4448:4455  bytes32 */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4486  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4480  _roles */\n      0x01\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4486  _roles[role] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4496  _roles[role].adminRole */\n      add\n      sload\n      swap1\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4374:4503  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5874:5997  function isAdmin(address account) external view returns (bool) {... */\n    tag_9:\n      tag_38\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4799:4944  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_34\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4930:5185  function setBaseTokenURI(string calldata uri) public {... */\n    tag_11:\n      tag_34\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5908:6122  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_76\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4478:4875  function burn() external {... */\n    tag_13:\n      tag_34\n      tag_79\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5507:5638  function ownerOf(uint256 tokenId) external view returns (address) {... */\n    tag_14:\n      tag_80\n      tag_81\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n        /* \"#utility.yul\":5630:5672   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5618:5673   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5600:5674   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5588:5590   */\n      0x20\n        /* \"#utility.yul\":5573:5591   */\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5507:5638  function ownerOf(uint256 tokenId) external view returns (address) {... */\n      tag_42\n        /* \"#utility.yul\":5454:5680   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2388:3171  function batchAttest(address[] calldata addrs) external {... */\n    tag_15:\n      tag_34\n      tag_87\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5747:5868  function isOperator(address account) external view returns (bool) {... */\n    tag_16:\n      tag_38\n      tag_90\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5191:5348  function balanceOf(address owner) external view returns (uint256) {... */\n    tag_17:\n      tag_52\n      tag_94\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3177:3710  function revoke(address from) external {... */\n    tag_18:\n      tag_34\n      tag_98\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5354:5501  function tokenIdOf(address from) external view returns (uint256) {... */\n    tag_19:\n      tag_52\n      tag_101\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2891:3036  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_20:\n      tag_38\n      tag_105\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_105:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2977:2981  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3006  _roles */\n      0x01\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2891:3036  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1172:1192  string public symbol */\n    tag_21:\n      tag_44\n      tag_109\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2023:2072  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_22:\n      tag_52\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2068:2072  0x00 */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2023:2072  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6063:6302  function tokenURI(uint256 tokenId) external view returns (string memory) {... */\n    tag_23:\n      tag_44\n      tag_115\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5224:5371  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_24:\n      tag_34\n      tag_119\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1796:2382  function attest(address to) external returns (uint256) {... */\n    tag_25:\n      tag_52\n      tag_122\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1267:1333  bytes32 public constant OPERATOR_ROLE = keccak256(\"OPERATOR_ROLE\") */\n    tag_26:\n      tag_52\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1307:1333  keccak256(\"OPERATOR_ROLE\") */\n      0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1267:1333  bytes32 public constant OPERATOR_ROLE = keccak256(\"OPERATOR_ROLE\") */\n      dup2\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3716:4472  function batchRevoke(address[] calldata addrs) external {... */\n    tag_37:\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2977:2981  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      swap1\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c2\n      0x20\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x40\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      swap1\n      keccak256\n      sload\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3803:3808  addrs */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      0xff\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3826:3963  require(... */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5887:5889   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3826:3963  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5869:5890   */\n      mstore\n        /* \"#utility.yul\":5926:5928   */\n      0x36\n        /* \"#utility.yul\":5906:5924   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5899:5929   */\n      mstore\n        /* \"#utility.yul\":5965:5999   */\n      0x4f6e6c7920746865206163636f756e742077697468204f50455241544f525f52\n        /* \"#utility.yul\":5945:5963   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5938:6000   */\n      mstore\n        /* \"#utility.yul\":6036:6060   */\n      0x4f4c452063616e207265766f6b65207468652053425400000000000000000000\n        /* \"#utility.yul\":6016:6034   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6009:6061   */\n      mstore\n        /* \"#utility.yul\":6078:6097   */\n      0x84\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3826:3963  require(... */\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3995:3998  100 */\n      0x64\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3981:3991  addrLength */\n      dup2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3981:3998  addrLength <= 100 */\n      gt\n      iszero\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3973:4037  require(addrLength <= 100, \"The max length of addresses is 100\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6310:6312   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3973:4037  require(addrLength <= 100, \"The max length of addresses is 100\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6292:6313   */\n      mstore\n        /* \"#utility.yul\":6349:6351   */\n      0x22\n        /* \"#utility.yul\":6329:6347   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6322:6352   */\n      mstore\n        /* \"#utility.yul\":6388:6422   */\n      0x546865206d6178206c656e677468206f66206164647265737365732069732031\n        /* \"#utility.yul\":6368:6386   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6361:6423   */\n      mstore\n        /* \"#utility.yul\":6459:6463   */\n      0x3030000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6439:6457   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6432:6464   */\n      mstore\n        /* \"#utility.yul\":6481:6500   */\n      0x84\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3973:4037  require(addrLength <= 100, \"The max length of addresses is 100\") */\n      tag_133\n        /* \"#utility.yul\":6108:6506   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3973:4037  require(addrLength <= 100, \"The max length of addresses is 100\") */\n    tag_135:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4053:4060  uint8 i */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4048:4466  for (uint8 i = 0; i < addrLength; i++) {... */\n    tag_138:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4070:4080  addrLength */\n      dup2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4066:4067  i */\n      dup2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4066:4080  i < addrLength */\n      0xff\n      and\n      lt\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4048:4466  for (uint8 i = 0; i < addrLength; i++) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4101:4113  address from */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4116:4121  addrs */\n      dup5\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4122:4123  i */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4116:4124  addrs[i] */\n      0xff\n      and\n      dup2\n      dup2\n      lt\n      tag_142\n      jumpi\n      tag_142\n      tag_143\n      jump\t// in\n    tag_142:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_144:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4101:4124  address from = addrs[i] */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4143:4161  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      iszero\n      dup1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4143:4190  from == address(0) || !_tokenMap.contains(from) */\n      tag_145\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4166:4190  _tokenMap.contains(from) */\n      tag_146\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4166:4175  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4185:4189  from */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4166:4184  _tokenMap.contains */\n      tag_147\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4166:4190  _tokenMap.contains(from) */\n      jump\t// in\n    tag_146:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4165:4190  !_tokenMap.contains(from) */\n      iszero\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4143:4190  from == address(0) || !_tokenMap.contains(from) */\n    tag_145:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4139:4233  if (from == address(0) || !_tokenMap.contains(from)) {... */\n      iszero\n      tag_148\n      jumpi\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4210:4218  continue */\n      pop\n      jump(tag_140)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4139:4233  if (from == address(0) || !_tokenMap.contains(from)) {... */\n    tag_148:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4247:4262  uint256 tokenId */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4265:4284  _tokenMap.get(from) */\n      tag_149\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4265:4274  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4279:4283  from */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4265:4278  _tokenMap.get */\n      tag_150\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4265:4284  _tokenMap.get(from) */\n      jump\t// in\n    tag_149:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4247:4284  uint256 tokenId = _tokenMap.get(from) */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4299:4321  _tokenMap.remove(from) */\n      tag_151\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4299:4308  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4316:4320  from */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4299:4315  _tokenMap.remove */\n      tag_152\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4299:4321  _tokenMap.remove(from) */\n      jump\t// in\n    tag_151:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4335:4360  _ownerMap.remove(tokenId) */\n      tag_153\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4335:4344  _ownerMap */\n      0x02\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4352:4359  tokenId */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4335:4351  _ownerMap.remove */\n      tag_154\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4335:4360  _ownerMap.remove(tokenId) */\n      jump\t// in\n    tag_153:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4380:4401  Revoke(from, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4393:4400  tokenId */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4380:4401  Revoke(from, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      swap1\n      0xec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4420:4455  Transfer(from, address(0), tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4447:4454  tokenId */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4443:4444  0 */\n      0x00\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4420:4455  Transfer(from, address(0), tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4443:4444  0 */\n      dup4\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4420:4455  Transfer(from, address(0), tokenId) */\n      log4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4087:4466  {... */\n      pop\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4048:4466  for (uint8 i = 0; i < addrLength; i++) {... */\n    tag_140:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4082:4085  i++ */\n      dup1\n      tag_155\n      dup2\n      tag_156\n      jump\t// in\n    tag_155:\n      swap2\n      pop\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4048:4466  for (uint8 i = 0; i < addrLength; i++) {... */\n      jump(tag_138)\n    tag_139:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3772:4472  {... */\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3716:4472  function batchRevoke(address[] calldata addrs) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6369:6696  function supportsInterface(bytes4 interfaceId)... */\n    tag_41:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6494:6498  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6533:6573  interfaceId == type(IERC721).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6548:6573  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6533:6573  interfaceId == type(IERC721).interfaceId */\n      eq\n      dup1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6533:6637  interfaceId == type(IERC721).interfaceId ||... */\n      tag_158\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6589:6637  interfaceId == type(IERC721Metadata).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6604:6637  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6589:6637  interfaceId == type(IERC721Metadata).interfaceId */\n      eq\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6533:6637  interfaceId == type(IERC721).interfaceId ||... */\n    tag_158:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6533:6689  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_160\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6653:6689  super.supportsInterface(interfaceId) */\n      tag_160\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6677:6688  interfaceId */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6653:6676  super.supportsInterface */\n      tag_161\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6653:6689  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_160:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6514:6689  return... */\n      swap3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6369:6696  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1127:1145  string public name */\n    tag_45:\n      0x09\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_164\n      swap1\n      tag_163\n      jump\t// in\n    tag_164:\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_166\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_165)\n    tag_166:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_167:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_167\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1453:1790  function initialize(... */\n    tag_51:\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4386:4399  _initializing */\n      sload(0x00)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1584:1585  1 */\n      0x01\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4386:4399  _initializing */\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4385:4399  !_initializing */\n      iszero\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4385:4425  !_initializing && _initialized < version */\n      dup1\n      iszero\n      tag_169\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4403:4415  _initialized */\n      sload(0x00)\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4403:4425  _initialized < version */\n      0xff\n      dup1\n      dup4\n      and\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4403:4415  _initialized */\n      swap2\n      and\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4403:4425  _initialized < version */\n      lt\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4385:4425  !_initializing && _initialized < version */\n    tag_169:\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4377:4476  require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7713:7715   */\n      0x20\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4377:4476  require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7695:7716   */\n      mstore\n        /* \"#utility.yul\":7752:7754   */\n      0x2e\n        /* \"#utility.yul\":7732:7750   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7725:7755   */\n      mstore\n        /* \"#utility.yul\":7791:7825   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":7771:7789   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7764:7826   */\n      mstore\n        /* \"#utility.yul\":7862:7878   */\n      0x647920696e697469616c697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":7842:7860   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7835:7879   */\n      mstore\n        /* \"#utility.yul\":7896:7915   */\n      0x84\n      add\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4377:4476  require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\") */\n      tag_133\n        /* \"#utility.yul\":7511:7921   */\n      jump\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4377:4476  require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\") */\n    tag_170:\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4486:4498  _initialized */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4486:4508  _initialized = version */\n      dup1\n      sload\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4518:4538  _initializing = true */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000\n      and\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4486:4508  _initialized = version */\n      0xff\n      dup4\n      and\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4518:4538  _initializing = true */\n      or\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4486:4508  _initialized = version */\n      0x0100\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4518:4538  _initializing = true */\n      or\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1597:1601  name */\n      0x09\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1597:1609  name = name_ */\n      tag_174\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1604:1609  name_ */\n      dup6\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1597:1601  name */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1597:1609  name = name_ */\n      tag_175\n      jump\t// in\n    tag_174:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1619:1625  symbol */\n      0x0a\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1619:1635  symbol = symbol_ */\n      tag_176\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1628:1635  symbol_ */\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1619:1625  symbol */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1619:1635  symbol = symbol_ */\n      tag_175\n      jump\t// in\n    tag_176:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1702:1740  _grantRole(DEFAULT_ADMIN_ROLE, admin_) */\n      tag_177\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2068:2072  0x00 */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1733:1739  admin_ */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1702:1712  _grantRole */\n      tag_178\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1702:1740  _grantRole(DEFAULT_ADMIN_ROLE, admin_) */\n      jump\t// in\n    tag_177:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1750:1783  _grantRole(OPERATOR_ROLE, admin_) */\n      tag_179\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1307:1333  keccak256(\"OPERATOR_ROLE\") */\n      0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1776:1782  admin_ */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1750:1760  _grantRole */\n      tag_178\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1750:1783  _grantRole(OPERATOR_ROLE, admin_) */\n      jump\t// in\n    tag_179:\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4575:4580  false */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4559:4580  _initializing = false */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff\n      and\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4595:4615  Initialized(version) */\n      mload(0x40)\n        /* \"#utility.yul\":10481:10485   */\n      0xff\n        /* \"#utility.yul\":10469:10486   */\n      dup3\n      and\n        /* \"#utility.yul\":10451:10487   */\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4595:4615  Initialized(version) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":10439:10441   */\n      0x20\n        /* \"#utility.yul\":10424:10442   */\n      add\n        /* \"source/BinanceBABT/contracts/utils/Initializable.sol\":4595:4615  Initialized(version) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1453:1790  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5644:5741  function totalSupply() external view returns (uint256) {... */\n    tag_53:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5690:5697  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5716:5734  _tokenMap.length() */\n      tag_183\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5716:5725  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5716:5732  _tokenMap.length */\n      tag_184\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5716:5734  _tokenMap.length() */\n      jump\t// in\n    tag_183:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5709:5734  return _tokenMap.length() */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5644:5741  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5874:5997  function isAdmin(address account) external view returns (bool) {... */\n    tag_65:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5931:5935  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      swap1\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0xa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49\n      0x20\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x40\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5954:5990  hasRole(DEFAULT_ADMIN_ROLE, account) */\n      tag_160\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2891:3036  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4799:4944  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_70:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4448:4455  bytes32 */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4486  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4480  _roles */\n      0x01\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4486  _roles[role] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4496  _roles[role].adminRole */\n      add\n      sload\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2501:2517  _checkRole(role) */\n      tag_190\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2512:2516  role */\n      dup2\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2501:2511  _checkRole */\n      tag_191\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2501:2517  _checkRole(role) */\n      jump\t// in\n    tag_190:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4912:4937  _grantRole(role, account) */\n      tag_193\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4923:4927  role */\n      dup4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4929:4936  account */\n      dup4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4912:4922  _grantRole */\n      tag_178\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4912:4937  _grantRole(role, account) */\n      jump\t// in\n    tag_193:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4799:4944  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4930:5185  function setBaseTokenURI(string calldata uri) public {... */\n    tag_74:\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2068:2072  0x00 */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      swap1\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0xa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49\n      0x20\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x40\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4993:5148  require(... */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10700:10702   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4993:5148  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10682:10703   */\n      mstore\n        /* \"#utility.yul\":10739:10741   */\n      0x43\n        /* \"#utility.yul\":10719:10737   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10712:10742   */\n      mstore\n        /* \"#utility.yul\":10778:10812   */\n      0x4f6e6c7920746865206163636f756e7420776974682044454641554c545f4144\n        /* \"#utility.yul\":10758:10776   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10751:10813   */\n      mstore\n        /* \"#utility.yul\":10849:10883   */\n      0x4d494e5f524f4c452063616e2073657420746865206261736520746f6b656e20\n        /* \"#utility.yul\":10829:10847   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10822:10884   */\n      mstore\n        /* \"#utility.yul\":10921:10926   */\n      0x5552490000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10900:10919   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":10893:10927   */\n      mstore\n        /* \"#utility.yul\":10944:10963   */\n      0xa4\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4993:5148  require(... */\n      tag_133\n        /* \"#utility.yul\":10498:10969   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4993:5148  require(... */\n    tag_197:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5159:5172  _baseTokenURI */\n      0x0b\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5159:5178  _baseTokenURI = uri */\n      tag_193\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5175:5178  uri */\n      dup3\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5159:5172  _baseTokenURI */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5159:5178  _baseTokenURI = uri */\n      tag_201\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5908:6122  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_77:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":6003:6026  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":6003:6026  account == _msgSender() */\n      eq\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5995:6078  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":12506:12508   */\n      0x20\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5995:6078  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12488:12509   */\n      mstore\n        /* \"#utility.yul\":12545:12547   */\n      0x2f\n        /* \"#utility.yul\":12525:12543   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12518:12548   */\n      mstore\n        /* \"#utility.yul\":12584:12618   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":12564:12582   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12557:12619   */\n      mstore\n        /* \"#utility.yul\":12655:12672   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":12635:12653   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12628:12673   */\n      mstore\n        /* \"#utility.yul\":12690:12709   */\n      0x84\n      add\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5995:6078  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_133\n        /* \"#utility.yul\":12304:12715   */\n      jump\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5995:6078  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_204:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":6089:6115  _revokeRole(role, account) */\n      tag_207\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":6101:6105  role */\n      dup3\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":6107:6114  account */\n      dup3\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":6089:6100  _revokeRole */\n      tag_208\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":6089:6115  _revokeRole(role, account) */\n      jump\t// in\n    tag_207:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5908:6122  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4478:4875  function burn() external {... */\n    tag_79:\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4574:4600  _tokenMap.contains(sender) */\n      tag_211\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4574:4583  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4574:4592  _tokenMap.contains */\n      tag_147\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4574:4600  _tokenMap.contains(sender) */\n      jump\t// in\n    tag_211:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4553:4659  require(... */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":12922:12924   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4553:4659  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12904:12925   */\n      mstore\n        /* \"#utility.yul\":12961:12963   */\n      0x21\n        /* \"#utility.yul\":12941:12959   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12934:12964   */\n      mstore\n        /* \"#utility.yul\":13000:13034   */\n      0x546865206163636f756e7420646f6573206e6f74206861766520616e79205342\n        /* \"#utility.yul\":12980:12998   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12973:13035   */\n      mstore\n        /* \"#utility.yul\":13071:13074   */\n      0x5400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13051:13069   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13044:13075   */\n      mstore\n        /* \"#utility.yul\":13092:13111   */\n      0x84\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4553:4659  require(... */\n      tag_133\n        /* \"#utility.yul\":12720:13117   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4553:4659  require(... */\n    tag_212:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4670:4685  uint256 tokenId */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4688:4709  _tokenMap.get(sender) */\n      tag_215\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4688:4697  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4702:4708  sender */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4688:4701  _tokenMap.get */\n      tag_150\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4688:4709  _tokenMap.get(sender) */\n      jump\t// in\n    tag_215:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4670:4709  uint256 tokenId = _tokenMap.get(sender) */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4720:4744  _tokenMap.remove(sender) */\n      tag_216\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4720:4729  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4737:4743  sender */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4720:4736  _tokenMap.remove */\n      tag_152\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4720:4744  _tokenMap.remove(sender) */\n      jump\t// in\n    tag_216:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4754:4779  _ownerMap.remove(tokenId) */\n      tag_217\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4754:4763  _ownerMap */\n      0x02\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4771:4778  tokenId */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4754:4770  _ownerMap.remove */\n      tag_154\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4754:4779  _ownerMap.remove(tokenId) */\n      jump\t// in\n    tag_217:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4795:4816  Burn(sender, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4808:4815  tokenId */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4795:4816  Burn(sender, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      swap1\n      0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4831:4868  Transfer(sender, address(0), tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4860:4867  tokenId */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4856:4857  0 */\n      0x00\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4831:4868  Transfer(sender, address(0), tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4856:4857  0 */\n      dup4\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4831:4868  Transfer(sender, address(0), tokenId) */\n      log4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4503:4875  {... */\n      pop\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":4478:4875  function burn() external {... */\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5507:5638  function ownerOf(uint256 tokenId) external view returns (address) {... */\n    tag_83:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5564:5571  address */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5590:5631  _ownerMap.get(tokenId, \"Invalid tokenId\") */\n      tag_160\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5604:5611  tokenId */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5590:5631  _ownerMap.get(tokenId, \"Invalid tokenId\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      0x496e76616c696420746f6b656e49640000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5590:5599  _ownerMap */\n      0x02\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5590:5603  _ownerMap.get */\n      tag_220\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5590:5631  _ownerMap.get(tokenId, \"Invalid tokenId\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2388:3171  function batchAttest(address[] calldata addrs) external {... */\n    tag_88:\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2977:2981  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      swap1\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c2\n      0x20\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x40\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      swap1\n      keccak256\n      sload\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2475:2480  addrs */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      0xff\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2498:2635  require(... */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13324:13326   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2498:2635  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13306:13327   */\n      mstore\n        /* \"#utility.yul\":13363:13365   */\n      0x36\n        /* \"#utility.yul\":13343:13361   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13336:13366   */\n      mstore\n        /* \"#utility.yul\":13402:13436   */\n      0x4f6e6c7920746865206163636f756e742077697468204f50455241544f525f52\n        /* \"#utility.yul\":13382:13400   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13375:13437   */\n      mstore\n        /* \"#utility.yul\":13473:13497   */\n      0x4f4c452063616e20617474657374207468652053425400000000000000000000\n        /* \"#utility.yul\":13453:13471   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13446:13498   */\n      mstore\n        /* \"#utility.yul\":13515:13534   */\n      0x84\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2498:2635  require(... */\n      tag_133\n        /* \"#utility.yul\":13122:13540   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2498:2635  require(... */\n    tag_224:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2667:2670  100 */\n      0x64\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2653:2663  addrLength */\n      dup2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2653:2670  addrLength <= 100 */\n      gt\n      iszero\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2645:2709  require(addrLength <= 100, \"The max length of addresses is 100\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6310:6312   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2645:2709  require(addrLength <= 100, \"The max length of addresses is 100\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6292:6313   */\n      mstore\n        /* \"#utility.yul\":6349:6351   */\n      0x22\n        /* \"#utility.yul\":6329:6347   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6322:6352   */\n      mstore\n        /* \"#utility.yul\":6388:6422   */\n      0x546865206d6178206c656e677468206f66206164647265737365732069732031\n        /* \"#utility.yul\":6368:6386   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6361:6423   */\n      mstore\n        /* \"#utility.yul\":6459:6463   */\n      0x3030000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6439:6457   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6432:6464   */\n      mstore\n        /* \"#utility.yul\":6481:6500   */\n      0x84\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2645:2709  require(addrLength <= 100, \"The max length of addresses is 100\") */\n      tag_133\n        /* \"#utility.yul\":6108:6506   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2645:2709  require(addrLength <= 100, \"The max length of addresses is 100\") */\n    tag_227:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2725:2732  uint8 i */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2720:3165  for (uint8 i = 0; i < addrLength; i++) {... */\n    tag_229:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2742:2752  addrLength */\n      dup2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2738:2739  i */\n      dup2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2738:2752  i < addrLength */\n      0xff\n      and\n      lt\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2720:3165  for (uint8 i = 0; i < addrLength; i++) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2773:2783  address to */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2786:2791  addrs */\n      dup5\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2792:2793  i */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2786:2794  addrs[i] */\n      0xff\n      and\n      dup2\n      dup2\n      lt\n      tag_233\n      jumpi\n      tag_233\n      tag_143\n      jump\t// in\n    tag_233:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_234\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_234:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2773:2794  address to = addrs[i] */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2813:2829  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      iszero\n      dup1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2813:2855  to == address(0) || _tokenMap.contains(to) */\n      tag_236\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2833:2855  _tokenMap.contains(to) */\n      tag_236\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2833:2842  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2852:2854  to */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2833:2851  _tokenMap.contains */\n      tag_147\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2833:2855  _tokenMap.contains(to) */\n      jump\t// in\n    tag_236:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2809:2898  if (to == address(0) || _tokenMap.contains(to)) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2875:2883  continue */\n      pop\n      jump(tag_231)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2809:2898  if (to == address(0) || _tokenMap.contains(to)) {... */\n    tag_237:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2912:2932  _tokenId.increment() */\n      tag_238\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2912:2920  _tokenId */\n      0x08\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2912:2932  _tokenId.increment() */\n    tag_238:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2946:2961  uint256 tokenId */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2964:2982  _tokenId.current() */\n      tag_240\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2964:2972  _tokenId */\n      0x08\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2964:2982  _tokenId.current() */\n    tag_240:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2946:2982  uint256 tokenId = _tokenId.current() */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2997:3023  _tokenMap.set(to, tokenId) */\n      tag_242\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2997:3006  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3011:3013  to */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2946:2982  uint256 tokenId = _tokenId.current() */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2997:3010  _tokenMap.set */\n      tag_243\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2997:3023  _tokenMap.set(to, tokenId) */\n      jump\t// in\n    tag_242:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3037:3063  _ownerMap.set(tokenId, to) */\n      tag_244\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3037:3046  _ownerMap */\n      0x02\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3051:3058  tokenId */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3060:3062  to */\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3037:3050  _ownerMap.set */\n      tag_245\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3037:3063  _ownerMap.set(tokenId, to) */\n      jump\t// in\n    tag_244:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3083:3102  Attest(to, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3094:3101  tokenId */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3083:3102  Attest(to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      swap1\n      0xe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a27\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3121:3154  Transfer(address(0), to, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3146:3153  tokenId */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3121:3154  Transfer(address(0), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3138:3139  0 */\n      0x00\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3121:3154  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3138:3139  0 */\n      dup3\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3121:3154  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2759:3165  {... */\n      pop\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2720:3165  for (uint8 i = 0; i < addrLength; i++) {... */\n    tag_231:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2754:2757  i++ */\n      dup1\n      tag_246\n      dup2\n      tag_156\n      jump\t// in\n    tag_246:\n      swap2\n      pop\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2720:3165  for (uint8 i = 0; i < addrLength; i++) {... */\n      jump(tag_229)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5747:5868  function isOperator(address account) external view returns (bool) {... */\n    tag_91:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5807:5811  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      swap1\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c2\n      0x20\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x40\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5830:5861  hasRole(OPERATOR_ROLE, account) */\n      tag_160\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2891:3036  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5191:5348  function balanceOf(address owner) external view returns (uint256) {... */\n    tag_95:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5248:5255  uint256 */\n      0x00\n      dup1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5286:5309  _tokenMap.tryGet(owner) */\n      tag_250\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5286:5295  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5303:5308  owner */\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5286:5302  _tokenMap.tryGet */\n      tag_251\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5286:5309  _tokenMap.tryGet(owner) */\n      jump\t// in\n    tag_250:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5267:5309  (bool success, ) = _tokenMap.tryGet(owner) */\n      pop\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5326:5333  success */\n      dup1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5326:5341  success ? 1 : 0 */\n      tag_252\n      jumpi\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5340:5341  0 */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5326:5341  success ? 1 : 0 */\n      jump(tag_253)\n    tag_252:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5336:5337  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5326:5341  success ? 1 : 0 */\n    tag_253:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5319:5341  return success ? 1 : 0 */\n      0xff\n      and\n      swap4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5191:5348  function balanceOf(address owner) external view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3177:3710  function revoke(address from) external {... */\n    tag_99:\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2977:2981  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      swap1\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c2\n      0x20\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x40\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3226:3363  require(... */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5887:5889   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3226:3363  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5869:5890   */\n      mstore\n        /* \"#utility.yul\":5926:5928   */\n      0x36\n        /* \"#utility.yul\":5906:5924   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5899:5929   */\n      mstore\n        /* \"#utility.yul\":5965:5999   */\n      0x4f6e6c7920746865206163636f756e742077697468204f50455241544f525f52\n        /* \"#utility.yul\":5945:5963   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5938:6000   */\n      mstore\n        /* \"#utility.yul\":6036:6060   */\n      0x4f4c452063616e207265766f6b65207468652053425400000000000000000000\n        /* \"#utility.yul\":6016:6034   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6009:6061   */\n      mstore\n        /* \"#utility.yul\":6078:6097   */\n      0x84\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3226:3363  require(... */\n      tag_133\n        /* \"#utility.yul\":5685:6103   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3226:3363  require(... */\n    tag_257:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3381:3399  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3373:3420  require(from != address(0), \"Address is empty\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13747:13749   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3373:3420  require(from != address(0), \"Address is empty\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13729:13750   */\n      mstore\n        /* \"#utility.yul\":13786:13788   */\n      0x10\n        /* \"#utility.yul\":13766:13784   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13759:13789   */\n      mstore\n        /* \"#utility.yul\":13825:13843   */\n      0x4164647265737320697320656d70747900000000000000000000000000000000\n        /* \"#utility.yul\":13805:13823   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13798:13844   */\n      mstore\n        /* \"#utility.yul\":13861:13879   */\n      0x64\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3373:3420  require(from != address(0), \"Address is empty\") */\n      tag_133\n        /* \"#utility.yul\":13545:13885   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3373:3420  require(from != address(0), \"Address is empty\") */\n    tag_259:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3438:3462  _tokenMap.contains(from) */\n      tag_262\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3438:3447  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3457:3461  from */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3438:3456  _tokenMap.contains */\n      tag_147\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3438:3462  _tokenMap.contains(from) */\n      jump\t// in\n    tag_262:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3430:3500  require(_tokenMap.contains(from), \"The account does not have any SBT\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":12922:12924   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3430:3500  require(_tokenMap.contains(from), \"The account does not have any SBT\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12904:12925   */\n      mstore\n        /* \"#utility.yul\":12961:12963   */\n      0x21\n        /* \"#utility.yul\":12941:12959   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12934:12964   */\n      mstore\n        /* \"#utility.yul\":13000:13034   */\n      0x546865206163636f756e7420646f6573206e6f74206861766520616e79205342\n        /* \"#utility.yul\":12980:12998   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12973:13035   */\n      mstore\n        /* \"#utility.yul\":13071:13074   */\n      0x5400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13051:13069   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13044:13075   */\n      mstore\n        /* \"#utility.yul\":13092:13111   */\n      0x84\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3430:3500  require(_tokenMap.contains(from), \"The account does not have any SBT\") */\n      tag_133\n        /* \"#utility.yul\":12720:13117   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3430:3500  require(_tokenMap.contains(from), \"The account does not have any SBT\") */\n    tag_263:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3511:3526  uint256 tokenId */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3529:3548  _tokenMap.get(from) */\n      tag_265\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3529:3538  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3543:3547  from */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3529:3542  _tokenMap.get */\n      tag_150\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3529:3548  _tokenMap.get(from) */\n      jump\t// in\n    tag_265:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3511:3548  uint256 tokenId = _tokenMap.get(from) */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3559:3581  _tokenMap.remove(from) */\n      tag_266\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3559:3568  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3576:3580  from */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3559:3575  _tokenMap.remove */\n      tag_152\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3559:3581  _tokenMap.remove(from) */\n      jump\t// in\n    tag_266:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3591:3616  _ownerMap.remove(tokenId) */\n      tag_267\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3591:3600  _ownerMap */\n      0x02\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3608:3615  tokenId */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3591:3607  _ownerMap.remove */\n      tag_154\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3591:3616  _ownerMap.remove(tokenId) */\n      jump\t// in\n    tag_267:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3632:3653  Revoke(from, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3645:3652  tokenId */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3632:3653  Revoke(from, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      swap1\n      0xec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3668:3703  Transfer(from, address(0), tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3695:3702  tokenId */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3691:3692  0 */\n      0x00\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3668:3703  Transfer(from, address(0), tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3691:3692  0 */\n      dup4\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3668:3703  Transfer(from, address(0), tokenId) */\n      log4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3216:3710  {... */\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":3177:3710  function revoke(address from) external {... */\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5354:5501  function tokenIdOf(address from) external view returns (uint256) {... */\n    tag_102:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5410:5417  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5436:5494  _tokenMap.get(from, \"The wallet has not attested any SBT\") */\n      tag_160\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5450:5454  from */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5436:5494  _tokenMap.get(from, \"The wallet has not attested any SBT\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      data_4c0ef6bfa0a398fe3098d6b3c8bc2c4c45d120ec13b77201d29305b0abb24397\n      0x23\n      swap2\n      codecopy\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5436:5445  _tokenMap */\n      0x05\n      swap2\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5436:5494  _tokenMap.get(from, \"The wallet has not attested any SBT\") */\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5436:5449  _tokenMap.get */\n      tag_270\n        /* \"source/BinanceBABT/contracts/SBT.sol\":5436:5494  _tokenMap.get(from, \"The wallet has not attested any SBT\") */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1172:1192  string public symbol */\n    tag_109:\n      0x0a\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6063:6302  function tokenURI(uint256 tokenId) external view returns (string memory) {... */\n    tag_116:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6121:6134  string memory */\n      0x60\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6195:6196  0 */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6171:6184  _baseTokenURI */\n      0x0b\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6165:6192  bytes(_baseTokenURI).length */\n      dup1\n      sload\n      tag_278\n      swap1\n      tag_163\n      jump\t// in\n    tag_278:\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6165:6196  bytes(_baseTokenURI).length > 0 */\n      gt\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6165:6295  bytes(_baseTokenURI).length > 0... */\n      tag_279\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_160)\n    tag_279:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6239:6252  _baseTokenURI */\n      0x0b\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6254:6272  tokenId.toString() */\n      tag_281\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6254:6261  tokenId */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6254:6270  tokenId.toString */\n      tag_282\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6254:6272  tokenId.toString() */\n      jump\t// in\n    tag_281:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6222:6273  abi.encodePacked(_baseTokenURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_283\n      swap3\n      swap2\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6146:6295  return... */\n      swap3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":6063:6302  function tokenURI(uint256 tokenId) external view returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5224:5371  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_120:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4448:4455  bytes32 */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4486  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4480  _roles */\n      0x01\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4486  _roles[role] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4474:4496  _roles[role].adminRole */\n      add\n      sload\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2501:2517  _checkRole(role) */\n      tag_287\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2512:2516  role */\n      dup2\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2501:2511  _checkRole */\n      tag_191\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2501:2517  _checkRole(role) */\n      jump\t// in\n    tag_287:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5338:5364  _revokeRole(role, account) */\n      tag_193\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5350:5354  role */\n      dup4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5356:5363  account */\n      dup4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5338:5349  _revokeRole */\n      tag_208\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":5338:5364  _revokeRole(role, account) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1796:2382  function attest(address to) external returns (uint256) {... */\n    tag_123:\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1842:1849  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      swap1\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c2\n      0x20\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x40\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1861:1998  require(... */\n      tag_293\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13324:13326   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1861:1998  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13306:13327   */\n      mstore\n        /* \"#utility.yul\":13363:13365   */\n      0x36\n        /* \"#utility.yul\":13343:13361   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13336:13366   */\n      mstore\n        /* \"#utility.yul\":13402:13436   */\n      0x4f6e6c7920746865206163636f756e742077697468204f50455241544f525f52\n        /* \"#utility.yul\":13382:13400   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13375:13437   */\n      mstore\n        /* \"#utility.yul\":13473:13497   */\n      0x4f4c452063616e20617474657374207468652053425400000000000000000000\n        /* \"#utility.yul\":13453:13471   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13446:13498   */\n      mstore\n        /* \"#utility.yul\":13515:13534   */\n      0x84\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1861:1998  require(... */\n      tag_133\n        /* \"#utility.yul\":13122:13540   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1861:1998  require(... */\n    tag_293:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2016:2032  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2008:2053  require(to != address(0), \"Address is empty\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13747:13749   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2008:2053  require(to != address(0), \"Address is empty\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13729:13750   */\n      mstore\n        /* \"#utility.yul\":13786:13788   */\n      0x10\n        /* \"#utility.yul\":13766:13784   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13759:13789   */\n      mstore\n        /* \"#utility.yul\":13825:13843   */\n      0x4164647265737320697320656d70747900000000000000000000000000000000\n        /* \"#utility.yul\":13805:13823   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13798:13844   */\n      mstore\n        /* \"#utility.yul\":13861:13879   */\n      0x64\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2008:2053  require(to != address(0), \"Address is empty\") */\n      tag_133\n        /* \"#utility.yul\":13545:13885   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2008:2053  require(to != address(0), \"Address is empty\") */\n    tag_295:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2072:2094  _tokenMap.contains(to) */\n      tag_297\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2072:2081  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2091:2093  to */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2072:2090  _tokenMap.contains */\n      tag_147\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2072:2094  _tokenMap.contains(to) */\n      jump\t// in\n    tag_297:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2071:2094  !_tokenMap.contains(to) */\n      iszero\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2063:2117  require(!_tokenMap.contains(to), \"SBT already exists\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":15175:15177   */\n      0x20\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2063:2117  require(!_tokenMap.contains(to), \"SBT already exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15157:15178   */\n      mstore\n        /* \"#utility.yul\":15214:15216   */\n      0x12\n        /* \"#utility.yul\":15194:15212   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15187:15217   */\n      mstore\n        /* \"#utility.yul\":15253:15273   */\n      0x53425420616c7265616479206578697374730000000000000000000000000000\n        /* \"#utility.yul\":15233:15251   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15226:15274   */\n      mstore\n        /* \"#utility.yul\":15291:15309   */\n      0x64\n      add\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2063:2117  require(!_tokenMap.contains(to), \"SBT already exists\") */\n      tag_133\n        /* \"#utility.yul\":14973:15315   */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2063:2117  require(!_tokenMap.contains(to), \"SBT already exists\") */\n    tag_298:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2128:2148  _tokenId.increment() */\n      tag_301\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2128:2136  _tokenId */\n      0x08\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2128:2148  _tokenId.increment() */\n    tag_301:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2158:2173  uint256 tokenId */\n      0x00\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2176:2194  _tokenId.current() */\n      tag_302\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2176:2184  _tokenId */\n      0x08\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2176:2194  _tokenId.current() */\n    tag_302:\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2158:2194  uint256 tokenId = _tokenId.current() */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2205:2231  _tokenMap.set(to, tokenId) */\n      tag_303\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2205:2214  _tokenMap */\n      0x05\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2219:2221  to */\n      dup5\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2158:2194  uint256 tokenId = _tokenId.current() */\n      dup4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2205:2218  _tokenMap.set */\n      tag_243\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2205:2231  _tokenMap.set(to, tokenId) */\n      jump\t// in\n    tag_303:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2241:2267  _ownerMap.set(tokenId, to) */\n      tag_304\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2241:2250  _ownerMap */\n      0x02\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2255:2262  tokenId */\n      dup3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2264:2266  to */\n      dup6\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2241:2254  _ownerMap.set */\n      tag_245\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2241:2267  _ownerMap.set(tokenId, to) */\n      jump\t// in\n    tag_304:\n      pop\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2283:2302  Attest(to, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2294:2301  tokenId */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2283:2302  Attest(to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0xe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a27\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2317:2350  Transfer(address(0), to, tokenId) */\n      mload(0x40)\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2342:2349  tokenId */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2317:2350  Transfer(address(0), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2334:2335  0 */\n      0x00\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2317:2350  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2334:2335  0 */\n      dup3\n      swap1\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2317:2350  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"source/BinanceBABT/contracts/SBT.sol\":2368:2375  tokenId */\n      swap3\n        /* \"source/BinanceBABT/contracts/SBT.sol\":1796:2382  function attest(address to) external returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12315:12481  function contains(AddressToUintMap storage map, address key) internal view returns (bool) {... */\n    tag_147:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12399:12403  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12422:12474  contains(map._inner, bytes32(uint256(uint160(key)))) */\n      tag_307\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12431:12434  map */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12451:12472  uint256(uint160(key)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12422:12430  contains */\n      tag_308\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12422:12474  contains(map._inner, bytes32(uint256(uint160(key)))) */\n      jump\t// in\n    tag_307:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12415:12474  return contains(map._inner, bytes32(uint256(uint160(key)))) */\n      swap4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12315:12481  function contains(AddressToUintMap storage map, address key) internal view returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13785:13953  function get(AddressToUintMap storage map, address key) internal view returns (uint256) {... */\n    tag_150:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13864:13871  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13898:13945  get(map._inner, bytes32(uint256(uint160(key)))) */\n      tag_307\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13902:13905  map */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13922:13943  uint256(uint160(key)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13898:13901  get */\n      tag_311\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13898:13945  get(map._inner, bytes32(uint256(uint160(key)))) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12079:12236  function remove(AddressToUintMap storage map, address key) internal returns (bool) {... */\n    tag_152:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12156:12160  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12179:12229  remove(map._inner, bytes32(uint256(uint160(key)))) */\n      tag_307\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12186:12189  map */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12206:12227  uint256(uint160(key)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12179:12185  remove */\n      tag_314\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12179:12229  remove(map._inner, bytes32(uint256(uint160(key)))) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8987:9126  function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {... */\n    tag_154:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":9064:9068  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":9087:9119  remove(map._inner, bytes32(key)) */\n      tag_307\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":9094:9097  map */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":9114:9117  key */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":9087:9093  remove */\n      tag_314\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":9087:9119  remove(map._inner, bytes32(key)) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2602:2804  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_161:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2687:2691  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2710:2757  interfaceId == type(IAccessControl).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2725:2757  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2710:2757  interfaceId == type(IAccessControl).interfaceId */\n      eq\n      dup1\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2710:2797  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_160\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/erc/ERC165.sol\":964:989  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"source/BinanceBABT/contracts/erc/ERC165.sol\":949:989  interfaceId == type(IERC165).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2761:2797  super.supportsInterface(interfaceId) */\n      tag_160\n        /* \"source/BinanceBABT/contracts/erc/ERC165.sol\":841:996  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7457:7690  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_178:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2977:2981  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3006  _roles */\n      0x01\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7535:7684  if (!hasRole(role, account)) {... */\n      tag_207\n      jumpi\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7590  _roles[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7610:7614  true */\n      0x01\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7590  _roles[role] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7607  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      dup1\n      dup7\n      mstore\n      swap3\n      mstore\n      dup1\n      dup5\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7614  _roles[role].members[account] = true */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7633:7673  RoleGranted(role, account, _msgSender()) */\n      swap1\n      mload\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7590  _roles[role] */\n      dup6\n      swap2\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7633:7673  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap2\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7578:7590  _roles[role] */\n      swap1\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7633:7673  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7457:7690  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12564:12684  function length(AddressToUintMap storage map) internal view returns (uint256) {... */\n    tag_184:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12633:12640  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12659:12677  length(map._inner) */\n      tag_160\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12666:12669  map */\n      dup3\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12659:12665  length */\n      tag_327\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":12659:12677  length(map._inner) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3330:3433  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_191:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3396:3426  _checkRole(role, _msgSender()) */\n      tag_329\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3407:3411  role */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3396:3406  _checkRole */\n      tag_331\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3396:3426  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_329:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3330:3433  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7861:8095  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_208:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2977:2981  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3006  _roles */\n      0x01\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7940:8089  if (hasRole(role, account)) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":8014:8019  false */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7982:7994  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7982:7988  _roles */\n      0x01\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7982:7994  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7982:8011  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7982:8019  _roles[role].members[account] = false */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":8038:8078  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"source/BinanceBABT/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7982:7994  _roles[role] */\n      dup6\n      swap2\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":8038:8078  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":8014:8019  false */\n      swap1\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":8038:8078  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":7861:8095  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11143:11383  function get(... */\n    tag_220:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11280:11287  address */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11330:11373  get(map._inner, bytes32(key), errorMessage) */\n      tag_337\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11334:11337  map */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11354:11357  key */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11360:11372  errorMessage */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11330:11333  get */\n      tag_338\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11330:11373  get(map._inner, bytes32(key), errorMessage) */\n      jump\t// in\n    tag_337:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11322:11374  uint256(get(map._inner, bytes32(key), errorMessage)) */\n      swap5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11143:11383  function get(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11708:11920  function set(... */\n    tag_243:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11827:11831  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11850:11913  set(map._inner, bytes32(uint256(uint160(key))), bytes32(value)) */\n      tag_337\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11854:11857  map */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11874:11895  uint256(uint160(key)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11906:11911  value */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11850:11853  set */\n      tag_343\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":11850:11913  set(map._inner, bytes32(uint256(uint160(key))), bytes32(value)) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8616:8828  function set(... */\n    tag_245:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8735:8739  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8758:8821  set(map._inner, bytes32(key), bytes32(uint256(uint160(value)))) */\n      tag_337\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8762:8765  map */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8782:8785  key */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8796:8819  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8758:8761  set */\n      tag_343\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":8758:8821  set(map._inner, bytes32(key), bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13395:13633  function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {... */\n    tag_251:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13477:13481  bool */\n      0x00\n      dup1\n      dup1\n      dup1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13534:13584  tryGet(map._inner, bytes32(uint256(uint160(key)))) */\n      tag_347\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13541:13544  map */\n      dup7\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13561:13582  uint256(uint160(key)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup8\n      and\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13534:13540  tryGet */\n      tag_348\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13534:13584  tryGet(map._inner, bytes32(uint256(uint160(key)))) */\n      jump\t// in\n    tag_347:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13502:13584  (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key)))) */\n      swap1\n      swap5\n      pop\n      swap3\n      pop\n      pop\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":13395:13633  function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {... */\n    tag_346:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14233:14473  function get(... */\n    tag_270:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14370:14377  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14404:14465  get(map._inner, bytes32(uint256(uint160(key))), errorMessage) */\n      tag_337\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14408:14411  map */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14428:14449  uint256(uint160(key)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14452:14464  errorMessage */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14404:14407  get */\n      tag_338\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":14404:14465  get(map._inner, bytes32(uint256(uint160(key))), errorMessage) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_282:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":448:461  string memory */\n      0x60\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":665:670  value */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":674:675  0 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":665:675  value == 0 */\n      sub\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n      tag_352\n      jumpi\n      pop\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":691:701  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n    tag_352:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":736:741  value */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":721:733  uint256 temp */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n    tag_353:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":782:791  temp != 0 */\n      dup2\n      iszero\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      tag_354\n      jumpi\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":807:815  digits++ */\n      dup1\n      tag_355\n      dup2\n      tag_356\n      jump\t// in\n    tag_355:\n      swap2\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      tag_357\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":837:839  10 */\n      0x0a\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      dup4\n      tag_358\n      jump\t// in\n    tag_357:\n      swap2\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      jump(tag_353)\n    tag_354:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":859:878  bytes memory buffer */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":891:897  digits */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":881:898  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_360\n      jumpi\n      tag_360\n      tag_361\n      jump\t// in\n    tag_360:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_362\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_362:\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":859:898  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n    tag_363:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":915:925  value != 0 */\n      dup5\n      iszero\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      tag_337\n      jumpi\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      tag_365\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":951:952  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      dup4\n      tag_366\n      jump\t// in\n    tag_365:\n      swap2\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_367\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1017:1019  10 */\n      0x0a\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1009:1014  value */\n      dup7\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_368\n      jump\t// in\n    tag_367:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_369\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":996:998  48 */\n      0x30\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_370\n      jump\t// in\n    tag_369:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":983:1022  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":966:972  buffer */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":973:979  digits */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":966:980  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_372\n      jumpi\n      tag_372\n      tag_143\n      jump\t// in\n    tag_372:\n      0x20\n      add\n      add\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":966:1022  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      tag_373\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1045:1047  10 */\n      0x0a\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      dup7\n      tag_358\n      jump\t// in\n    tag_373:\n      swap5\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      jump(tag_363)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3054:3194  function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {... */\n    tag_308:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3141:3145  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3164:3187  map._keys.contains(key) */\n      tag_307\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3164:3167  map */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3183:3186  key */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3164:3182  map._keys.contains */\n      tag_376\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3164:3187  map._keys.contains(key) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4543:4790  function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {... */\n    tag_311:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4625:4632  bytes32 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4660:4676  map._values[key] */\n      dup2\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4660:4671  map._values */\n      0x02\n      dup4\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4660:4676  map._values[key] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4694:4704  value != 0 */\n      dup1\n      iszero\n      iszero\n      dup1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4694:4726  value != 0 || contains(map, key) */\n      tag_379\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4708:4726  contains(map, key) */\n      tag_379\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4717:4720  map */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4722:4725  key */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4708:4716  contains */\n      tag_308\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4708:4726  contains(map, key) */\n      jump\t// in\n    tag_379:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4686:4761  require(value != 0 || contains(map, key), \"EnumerableMap: nonexistent key\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":16416:16418   */\n      0x20\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4686:4761  require(value != 0 || contains(map, key), \"EnumerableMap: nonexistent key\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16398:16419   */\n      mstore\n        /* \"#utility.yul\":16455:16457   */\n      0x1e\n        /* \"#utility.yul\":16435:16453   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16428:16458   */\n      mstore\n        /* \"#utility.yul\":16494:16526   */\n      0x456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000\n        /* \"#utility.yul\":16474:16492   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16467:16527   */\n      mstore\n        /* \"#utility.yul\":16544:16562   */\n      0x64\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4686:4761  require(value != 0 || contains(map, key), \"EnumerableMap: nonexistent key\") */\n      tag_133\n        /* \"#utility.yul\":16214:16568   */\n      jump\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2811:2975  function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {... */\n    tag_314:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2891:2895  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2914:2930  map._values[key] */\n      dup2\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2914:2925  map._values */\n      0x02\n      dup4\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2914:2930  map._values[key] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2907:2930  delete map._values[key] */\n      dup2\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2947:2968  map._keys.remove(key) */\n      tag_307\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2914:2917  map */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2926:2929  key */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2947:2963  map._keys.remove */\n      tag_385\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2947:2968  map._keys.remove(key) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3284:3407  function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {... */\n    tag_327:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3356:3363  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3382:3400  map._keys.length() */\n      tag_160\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3382:3385  map */\n      dup3\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3382:3398  map._keys.length */\n      tag_389\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":3382:3400  map._keys.length() */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3714:4193  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_331:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":2977:2981  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3006  _roles */\n      0x01\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3012  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3000:3029  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3797:4187  if (!hasRole(role, account)) {... */\n      tag_207\n      jumpi\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3985:4013  Strings.toHexString(account) */\n      tag_393\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4005:4012  account */\n      dup2\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3985:4004  Strings.toHexString */\n      tag_394\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3985:4013  Strings.toHexString(account) */\n      jump\t// in\n    tag_393:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4084:4122  Strings.toHexString(uint256(role), 32) */\n      tag_395\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4112:4116  role */\n      dup4\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4119:4121  32 */\n      0x20\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4084:4103  Strings.toHexString */\n      tag_396\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":4084:4122  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_395:\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3892:4144  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_397\n      swap3\n      swap2\n      swap1\n      tag_398\n      jump\t// in\n    tag_397:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"source/BinanceBABT/contracts/access/AccessControl.sol\":3840:4176  revert(... */\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup3\n      mstore\n      tag_133\n      swap2\n      0x04\n      add\n      tag_47\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5072:5357  function get(... */\n    tag_338:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5212:5219  bytes32 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5247:5263  map._values[key] */\n      dup3\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5247:5258  map._values */\n      0x02\n      dup5\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5247:5263  map._values[key] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5281:5291  value != 0 */\n      dup1\n      iszero\n      iszero\n      dup1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5281:5313  value != 0 || contains(map, key) */\n      tag_402\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5295:5313  contains(map, key) */\n      tag_402\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5304:5307  map */\n      dup6\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5309:5312  key */\n      dup6\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5295:5303  contains */\n      tag_308\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5295:5313  contains(map, key) */\n      jump\t// in\n    tag_402:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5315:5327  errorMessage */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5273:5328  require(value != 0 || contains(map, key), errorMessage) */\n      swap1\n      tag_403\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_403:\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5345:5350  value */\n      swap5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":5072:5357  function get(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2439:2643  function set(... */\n    tag_343:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2561:2565  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2577:2593  map._values[key] */\n      dup3\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2577:2588  map._values */\n      0x02\n      dup5\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2577:2593  map._values[key] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2577:2601  map._values[key] = value */\n      dup3\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2618:2636  map._keys.add(key) */\n      tag_337\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2577:2580  map */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2589:2592  key */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2618:2631  map._keys.add */\n      tag_407\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":2618:2636  map._keys.add(key) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4093:4391  function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {... */\n    tag_348:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4178:4182  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4219:4235  map._values[key] */\n      dup2\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4219:4230  map._values */\n      0x02\n      dup4\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4219:4235  map._values[key] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4178:4182  bool */\n      dup2\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4219:4235  map._values[key] */\n      dup1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4245:4385  if (value == bytes32(0)) {... */\n      tag_409\n      jumpi\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4292:4310  contains(map, key) */\n      tag_410\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4301:4304  map */\n      dup6\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4306:4309  key */\n      dup6\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4292:4300  contains */\n      tag_308\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4292:4310  contains(map, key) */\n      jump\t// in\n    tag_410:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4284:4323  return (contains(map, key), bytes32(0)) */\n      swap3\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4320:4321  0 */\n      0x00\n      swap2\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4284:4323  return (contains(map, key), bytes32(0)) */\n      tag_346\n      swap1\n      pop\n      jump\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4245:4385  if (value == bytes32(0)) {... */\n    tag_409:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4362:4366  true */\n      0x01\n      swap3\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4368:4373  value */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":4354:4374  return (true, value) */\n      jump(tag_346)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6319:6457  function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {... */\n    tag_376:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6399:6403  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4250:4262  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4250:4274  set._indexes[value] != 0 */\n      iszero\n      iszero\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6422:6450  _contains(set._inner, value) */\n      tag_307\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4154:4281  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6109:6238  function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {... */\n    tag_385:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6182:6186  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6205:6231  _remove(set._inner, value) */\n      tag_307\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6213:6216  set */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6225:6230  value */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6205:6212  _remove */\n      tag_417\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6205:6231  _remove(set._inner, value) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6538:6653  function length(Bytes32Set storage set) internal view returns (uint256) {... */\n    tag_389:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6601:6608  uint256 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6627:6646  _length(set._inner) */\n      tag_160\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":6635:6638  set */\n      dup3\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4444:4462  set._values.length */\n      sload\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4362:4469  function _length(Set storage set) private view returns (uint256) {... */\n      jump\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2245:2394  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_394:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2303:2316  string memory */\n      0x60\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2335:2387  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_160\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2347:2369  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":288:290  20 */\n      0x14\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1652:2093  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_396:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1727:1740  string memory */\n      0x60\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1752:1771  bytes memory buffer */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1784:1794  2 * length */\n      tag_424\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1788:1794  length */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1784:1785  2 */\n      0x02\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1784:1794  2 * length */\n      tag_425\n      jump\t// in\n    tag_424:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1784:1798  2 * length + 2 */\n      tag_426\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1797:1798  2 */\n      0x02\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1784:1798  2 * length + 2 */\n      tag_370\n      jump\t// in\n    tag_426:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1774:1799  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_428\n      jumpi\n      tag_428\n      tag_361\n      jump\t// in\n    tag_428:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_429\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_429:\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1752:1799  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1809:1824  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1809:1815  buffer */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1816:1817  0 */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1809:1818  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_431\n      jumpi\n      tag_431\n      tag_143\n      jump\t// in\n    tag_431:\n      0x20\n      add\n      add\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1809:1824  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1834:1849  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1834:1840  buffer */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1841:1842  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1834:1843  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_433\n      jumpi\n      tag_433\n      tag_143\n      jump\t// in\n    tag_433:\n      0x20\n      add\n      add\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1834:1849  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1864:1873  uint256 i */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1876:1886  2 * length */\n      tag_437\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1880:1886  length */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1876:1877  2 */\n      0x02\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1876:1886  2 * length */\n      tag_425\n      jump\t// in\n    tag_437:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1876:1890  2 * length + 1 */\n      tag_438\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1889:1890  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1876:1890  2 * length + 1 */\n      tag_370\n      jump\t// in\n    tag_438:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1864:1890  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_434:\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1896:1897  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1892:1893  i */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1892:1897  i > 1 */\n      gt\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_435\n      jumpi\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1930:1942  _HEX_SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1943:1948  value */\n      dup6\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1951:1954  0xf */\n      0x0f\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1943:1954  value & 0xf */\n      and\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1930:1955  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_440\n      jumpi\n      tag_440\n      tag_143\n      jump\t// in\n    tag_440:\n      byte\n      0xf8\n      shl\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1918:1924  buffer */\n      dup3\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1925:1926  i */\n      dup3\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1918:1927  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_442\n      jumpi\n      tag_442\n      tag_143\n      jump\t// in\n    tag_442:\n      0x20\n      add\n      add\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1918:1955  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1979:1980  4 */\n      0x04\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1969:1980  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1899:1902  --i */\n      tag_443\n      dup2\n      tag_444\n      jump\t// in\n    tag_443:\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_434)\n    tag_435:\n      pop\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2008:2018  value == 0 */\n      dup4\n      iszero\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2000:2055  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":17966:17968   */\n      0x20\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2000:2055  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17948:17969   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":17985:18003   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17978:18008   */\n      mstore\n        /* \"#utility.yul\":18044:18078   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":18024:18042   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18017:18079   */\n      mstore\n        /* \"#utility.yul\":18096:18114   */\n      0x64\n      add\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":2000:2055  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_133\n        /* \"#utility.yul\":17764:18120   */\n      jump\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":5818:5941  function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {... */\n    tag_407:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":5888:5892  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":5911:5934  _add(set._inner, value) */\n      tag_307\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":5916:5919  set */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":5928:5933  value */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":5911:5915  _add */\n      tag_450\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":5911:5934  _add(set._inner, value) */\n      jump\t// in\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2685:4073  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_417:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2751:2755  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2888:2907  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2888:2900  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2888:2907  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2922:2937  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2918:4067  if (valueIndex != 0) {... */\n      tag_453\n      jumpi\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3291:3312  uint256 toDeleteIndex */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3315:3329  valueIndex - 1 */\n      tag_454\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3328:3329  1 */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3315:3325  valueIndex */\n      dup4\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3315:3329  valueIndex - 1 */\n      tag_366\n      jump\t// in\n    tag_454:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3363:3381  set._values.length */\n      dup6\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3291:3329  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      swap2\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3343:3360  uint256 lastIndex */\n      0x00\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3363:3385  set._values.length - 1 */\n      tag_455\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3384:3385  1 */\n      0x01\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3363:3385  set._values.length - 1 */\n      tag_366\n      jump\t// in\n    tag_455:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3343:3385  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3417:3430  toDeleteIndex */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3404:3413  lastIndex */\n      dup2\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3404:3430  lastIndex != toDeleteIndex */\n      eq\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3400:3798  if (lastIndex != toDeleteIndex) {... */\n      tag_456\n      jumpi\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3450:3467  bytes32 lastValue */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3470:3473  set */\n      dup7\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3470:3481  set._values */\n      0x00\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3482:3491  lastIndex */\n      dup3\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3470:3492  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_458\n      jumpi\n      tag_458\n      tag_143\n      jump\t// in\n    tag_458:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3450:3492  bytes32 lastValue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3621:3630  lastValue */\n      dup1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3592:3595  set */\n      dup8\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3592:3603  set._values */\n      0x00\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3604:3617  toDeleteIndex */\n      dup5\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3592:3618  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_461\n      jumpi\n      tag_461\n      tag_143\n      jump\t// in\n    tag_461:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3592:3630  set._values[toDeleteIndex] = lastValue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3704:3727  set._indexes[lastValue] */\n      swap2\n      dup3\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3704:3716  set._indexes */\n      0x01\n      dup9\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3704:3727  set._indexes[lastValue] */\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3704:3740  set._indexes[lastValue] = valueIndex */\n      dup4\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3400:3798  if (lastIndex != toDeleteIndex) {... */\n    tag_456:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3876:3893  set._values.pop() */\n      dup6\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3876:3879  set */\n      dup7\n      swap1\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3876:3893  set._values.pop() */\n      dup1\n      tag_464\n      jumpi\n      tag_464\n      tag_465\n      jump\t// in\n    tag_464:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3968:3971  set */\n      dup6\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3968:3980  set._indexes */\n      0x01\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3968:3987  set._indexes[value] */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3981:3986  value */\n      dup7\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3968:3987  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":3961:3987  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4009:4013  true */\n      0x01\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4002:4013  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_160)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2918:4067  if (valueIndex != 0) {... */\n    tag_453:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4051:4056  false */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4044:4056  return false */\n      swap2\n      pop\n      pop\n      jump(tag_160)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2113:2517  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_450:\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2176:2180  bool */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4250:4262  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2192:2511  if (!_contains(set, value)) {... */\n      tag_471\n      jumpi\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2234:2257  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2234:2245  set._values */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2234:2257  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2414:2432  set._values.length */\n      dup5\n      sload\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2392:2411  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2392:2404  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2392:2411  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2392:2432  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2446:2457  return true */\n      jump(tag_160)\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2192:2511  if (!_contains(set, value)) {... */\n    tag_471:\n      pop\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2495:2500  false */\n      0x00\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":2488:2500  return false */\n      jump(tag_160)\n        /* \"#utility.yul\":14:629   */\n    tag_36:\n        /* \"#utility.yul\":100:106   */\n      0x00\n        /* \"#utility.yul\":108:114   */\n      dup1\n        /* \"#utility.yul\":161:163   */\n      0x20\n        /* \"#utility.yul\":149:158   */\n      dup4\n        /* \"#utility.yul\":140:147   */\n      dup6\n        /* \"#utility.yul\":136:159   */\n      sub\n        /* \"#utility.yul\":132:164   */\n      slt\n        /* \"#utility.yul\":129:181   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":129:181   */\n    tag_484:\n        /* \"#utility.yul\":217:226   */\n      dup3\n        /* \"#utility.yul\":204:227   */\n      calldataload\n        /* \"#utility.yul\":246:264   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":287:289   */\n      dup1\n        /* \"#utility.yul\":279:285   */\n      dup3\n        /* \"#utility.yul\":276:290   */\n      gt\n        /* \"#utility.yul\":273:307   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":303:304   */\n      0x00\n        /* \"#utility.yul\":300:301   */\n      dup1\n        /* \"#utility.yul\":293:305   */\n      revert\n        /* \"#utility.yul\":273:307   */\n    tag_485:\n        /* \"#utility.yul\":341:347   */\n      dup2\n        /* \"#utility.yul\":330:339   */\n      dup6\n        /* \"#utility.yul\":326:348   */\n      add\n        /* \"#utility.yul\":316:348   */\n      swap2\n      pop\n        /* \"#utility.yul\":386:393   */\n      dup6\n        /* \"#utility.yul\":379:383   */\n      0x1f\n        /* \"#utility.yul\":375:377   */\n      dup4\n        /* \"#utility.yul\":371:384   */\n      add\n        /* \"#utility.yul\":367:394   */\n      slt\n        /* \"#utility.yul\":357:412   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":408:409   */\n      0x00\n        /* \"#utility.yul\":405:406   */\n      dup1\n        /* \"#utility.yul\":398:410   */\n      revert\n        /* \"#utility.yul\":357:412   */\n    tag_486:\n        /* \"#utility.yul\":448:450   */\n      dup2\n        /* \"#utility.yul\":435:451   */\n      calldataload\n        /* \"#utility.yul\":474:476   */\n      dup2\n        /* \"#utility.yul\":466:472   */\n      dup2\n        /* \"#utility.yul\":463:477   */\n      gt\n        /* \"#utility.yul\":460:494   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":490:491   */\n      0x00\n        /* \"#utility.yul\":487:488   */\n      dup1\n        /* \"#utility.yul\":480:492   */\n      revert\n        /* \"#utility.yul\":460:494   */\n    tag_487:\n        /* \"#utility.yul\":543:550   */\n      dup7\n        /* \"#utility.yul\":538:540   */\n      0x20\n        /* \"#utility.yul\":528:534   */\n      dup3\n        /* \"#utility.yul\":525:526   */\n      0x05\n        /* \"#utility.yul\":521:535   */\n      shl\n        /* \"#utility.yul\":517:519   */\n      dup6\n        /* \"#utility.yul\":513:536   */\n      add\n        /* \"#utility.yul\":509:541   */\n      add\n        /* \"#utility.yul\":506:551   */\n      gt\n        /* \"#utility.yul\":503:568   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":564:565   */\n      0x00\n        /* \"#utility.yul\":561:562   */\n      dup1\n        /* \"#utility.yul\":554:566   */\n      revert\n        /* \"#utility.yul\":503:568   */\n    tag_488:\n        /* \"#utility.yul\":595:597   */\n      0x20\n        /* \"#utility.yul\":587:598   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":617:623   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":14:629   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":634:966   */\n    tag_40:\n        /* \"#utility.yul\":692:698   */\n      0x00\n        /* \"#utility.yul\":745:747   */\n      0x20\n        /* \"#utility.yul\":733:742   */\n      dup3\n        /* \"#utility.yul\":724:731   */\n      dup5\n        /* \"#utility.yul\":720:743   */\n      sub\n        /* \"#utility.yul\":716:748   */\n      slt\n        /* \"#utility.yul\":713:765   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":761:762   */\n      0x00\n        /* \"#utility.yul\":758:759   */\n      dup1\n        /* \"#utility.yul\":751:763   */\n      revert\n        /* \"#utility.yul\":713:765   */\n    tag_490:\n        /* \"#utility.yul\":800:809   */\n      dup2\n        /* \"#utility.yul\":787:810   */\n      calldataload\n        /* \"#utility.yul\":850:916   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":843:848   */\n      dup2\n        /* \"#utility.yul\":839:917   */\n      and\n        /* \"#utility.yul\":832:837   */\n      dup2\n        /* \"#utility.yul\":829:918   */\n      eq\n        /* \"#utility.yul\":819:936   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":932:933   */\n      0x00\n        /* \"#utility.yul\":929:930   */\n      dup1\n        /* \"#utility.yul\":922:934   */\n      revert\n        /* \"#utility.yul\":1163:1413   */\n    tag_474:\n        /* \"#utility.yul\":1248:1249   */\n      0x00\n        /* \"#utility.yul\":1258:1371   */\n    tag_494:\n        /* \"#utility.yul\":1272:1278   */\n      dup4\n        /* \"#utility.yul\":1269:1270   */\n      dup2\n        /* \"#utility.yul\":1266:1279   */\n      lt\n        /* \"#utility.yul\":1258:1371   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":1348:1359   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1342:1360   */\n      mload\n        /* \"#utility.yul\":1329:1340   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":1322:1361   */\n      mstore\n        /* \"#utility.yul\":1294:1296   */\n      0x20\n        /* \"#utility.yul\":1287:1297   */\n      add\n        /* \"#utility.yul\":1258:1371   */\n      jump(tag_494)\n    tag_496:\n      pop\n      pop\n        /* \"#utility.yul\":1405:1406   */\n      0x00\n        /* \"#utility.yul\":1387:1403   */\n      swap2\n      add\n        /* \"#utility.yul\":1380:1407   */\n      mstore\n        /* \"#utility.yul\":1163:1413   */\n      jump\t// out\n        /* \"#utility.yul\":1418:1873   */\n    tag_47:\n        /* \"#utility.yul\":1567:1569   */\n      0x20\n        /* \"#utility.yul\":1556:1565   */\n      dup2\n        /* \"#utility.yul\":1549:1570   */\n      mstore\n        /* \"#utility.yul\":1530:1534   */\n      0x00\n        /* \"#utility.yul\":1599:1605   */\n      dup3\n        /* \"#utility.yul\":1593:1606   */\n      mload\n        /* \"#utility.yul\":1642:1648   */\n      dup1\n        /* \"#utility.yul\":1637:1639   */\n      0x20\n        /* \"#utility.yul\":1626:1635   */\n      dup5\n        /* \"#utility.yul\":1622:1640   */\n      add\n        /* \"#utility.yul\":1615:1649   */\n      mstore\n        /* \"#utility.yul\":1658:1737   */\n      tag_498\n        /* \"#utility.yul\":1730:1736   */\n      dup2\n        /* \"#utility.yul\":1725:1727   */\n      0x40\n        /* \"#utility.yul\":1714:1723   */\n      dup6\n        /* \"#utility.yul\":1710:1728   */\n      add\n        /* \"#utility.yul\":1705:1707   */\n      0x20\n        /* \"#utility.yul\":1697:1703   */\n      dup8\n        /* \"#utility.yul\":1693:1708   */\n      add\n        /* \"#utility.yul\":1658:1737   */\n      tag_474\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":1789:1791   */\n      0x1f\n        /* \"#utility.yul\":1777:1792   */\n      add\n        /* \"#utility.yul\":1794:1860   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1773:1861   */\n      and\n        /* \"#utility.yul\":1758:1862   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1864:1866   */\n      0x40\n        /* \"#utility.yul\":1754:1867   */\n      add\n      swap3\n        /* \"#utility.yul\":1418:1873   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1878:2062   */\n    tag_361:\n        /* \"#utility.yul\":1930:2007   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1927:1928   */\n      0x00\n        /* \"#utility.yul\":1920:2008   */\n      mstore\n        /* \"#utility.yul\":2027:2031   */\n      0x41\n        /* \"#utility.yul\":2024:2025   */\n      0x04\n        /* \"#utility.yul\":2017:2032   */\n      mstore\n        /* \"#utility.yul\":2051:2055   */\n      0x24\n        /* \"#utility.yul\":2048:2049   */\n      0x00\n        /* \"#utility.yul\":2041:2056   */\n      revert\n        /* \"#utility.yul\":2067:2845   */\n    tag_475:\n        /* \"#utility.yul\":2110:2115   */\n      0x00\n        /* \"#utility.yul\":2163:2166   */\n      dup3\n        /* \"#utility.yul\":2156:2160   */\n      0x1f\n        /* \"#utility.yul\":2148:2154   */\n      dup4\n        /* \"#utility.yul\":2144:2161   */\n      add\n        /* \"#utility.yul\":2140:2167   */\n      slt\n        /* \"#utility.yul\":2130:2185   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":2181:2182   */\n      0x00\n        /* \"#utility.yul\":2178:2179   */\n      dup1\n        /* \"#utility.yul\":2171:2183   */\n      revert\n        /* \"#utility.yul\":2130:2185   */\n    tag_501:\n        /* \"#utility.yul\":2217:2223   */\n      dup2\n        /* \"#utility.yul\":2204:2224   */\n      calldataload\n        /* \"#utility.yul\":2243:2261   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2280:2282   */\n      dup1\n        /* \"#utility.yul\":2276:2278   */\n      dup3\n        /* \"#utility.yul\":2273:2283   */\n      gt\n        /* \"#utility.yul\":2270:2306   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":2286:2304   */\n      tag_503\n      tag_361\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":2420:2422   */\n      0x40\n        /* \"#utility.yul\":2414:2423   */\n      mload\n        /* \"#utility.yul\":2482:2486   */\n      0x1f\n        /* \"#utility.yul\":2474:2487   */\n      dup4\n      add\n        /* \"#utility.yul\":2325:2391   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":2470:2492   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2494:2496   */\n      0x3f\n        /* \"#utility.yul\":2466:2497   */\n      add\n        /* \"#utility.yul\":2462:2502   */\n      and\n        /* \"#utility.yul\":2450:2503   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2518:2536   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":2538:2560   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2515:2561   */\n      or\n        /* \"#utility.yul\":2512:2584   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":2564:2582   */\n      tag_505\n      tag_361\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":2604:2614   */\n      dup2\n        /* \"#utility.yul\":2600:2602   */\n      0x40\n        /* \"#utility.yul\":2593:2615   */\n      mstore\n        /* \"#utility.yul\":2639:2641   */\n      dup4\n        /* \"#utility.yul\":2631:2637   */\n      dup2\n        /* \"#utility.yul\":2624:2642   */\n      mstore\n        /* \"#utility.yul\":2685:2688   */\n      dup7\n        /* \"#utility.yul\":2678:2682   */\n      0x20\n        /* \"#utility.yul\":2673:2675   */\n      dup6\n        /* \"#utility.yul\":2665:2671   */\n      dup9\n        /* \"#utility.yul\":2661:2676   */\n      add\n        /* \"#utility.yul\":2657:2683   */\n      add\n        /* \"#utility.yul\":2654:2689   */\n      gt\n        /* \"#utility.yul\":2651:2706   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":2702:2703   */\n      0x00\n        /* \"#utility.yul\":2699:2700   */\n      dup1\n        /* \"#utility.yul\":2692:2704   */\n      revert\n        /* \"#utility.yul\":2651:2706   */\n    tag_506:\n        /* \"#utility.yul\":2766:2768   */\n      dup4\n        /* \"#utility.yul\":2759:2763   */\n      0x20\n        /* \"#utility.yul\":2751:2757   */\n      dup8\n        /* \"#utility.yul\":2747:2764   */\n      add\n        /* \"#utility.yul\":2740:2744   */\n      0x20\n        /* \"#utility.yul\":2732:2738   */\n      dup4\n        /* \"#utility.yul\":2728:2745   */\n      add\n        /* \"#utility.yul\":2715:2769   */\n      calldatacopy\n        /* \"#utility.yul\":2813:2814   */\n      0x00\n        /* \"#utility.yul\":2806:2810   */\n      0x20\n        /* \"#utility.yul\":2801:2803   */\n      dup6\n        /* \"#utility.yul\":2793:2799   */\n      dup4\n        /* \"#utility.yul\":2789:2804   */\n      add\n        /* \"#utility.yul\":2785:2811   */\n      add\n        /* \"#utility.yul\":2778:2815   */\n      mstore\n        /* \"#utility.yul\":2833:2839   */\n      dup1\n        /* \"#utility.yul\":2824:2839   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2067:2845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2850:3046   */\n    tag_476:\n        /* \"#utility.yul\":2918:2938   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2978:3020   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2967:3021   */\n      dup2\n      and\n        /* \"#utility.yul\":2957:3022   */\n      dup2\n      eq\n        /* \"#utility.yul\":2947:3040   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":3036:3037   */\n      0x00\n        /* \"#utility.yul\":3033:3034   */\n      dup1\n        /* \"#utility.yul\":3026:3038   */\n      revert\n        /* \"#utility.yul\":2947:3040   */\n    tag_508:\n        /* \"#utility.yul\":2850:3046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3668   */\n    tag_50:\n        /* \"#utility.yul\":3148:3154   */\n      0x00\n        /* \"#utility.yul\":3156:3162   */\n      dup1\n        /* \"#utility.yul\":3164:3170   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x60\n        /* \"#utility.yul\":3205:3214   */\n      dup5\n        /* \"#utility.yul\":3196:3203   */\n      dup7\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3237   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":3233:3234   */\n      0x00\n        /* \"#utility.yul\":3230:3231   */\n      dup1\n        /* \"#utility.yul\":3223:3235   */\n      revert\n        /* \"#utility.yul\":3185:3237   */\n    tag_510:\n        /* \"#utility.yul\":3273:3282   */\n      dup4\n        /* \"#utility.yul\":3260:3283   */\n      calldataload\n        /* \"#utility.yul\":3302:3320   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3343:3345   */\n      dup1\n        /* \"#utility.yul\":3335:3341   */\n      dup3\n        /* \"#utility.yul\":3332:3346   */\n      gt\n        /* \"#utility.yul\":3329:3363   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":3359:3360   */\n      0x00\n        /* \"#utility.yul\":3356:3357   */\n      dup1\n        /* \"#utility.yul\":3349:3361   */\n      revert\n        /* \"#utility.yul\":3329:3363   */\n    tag_511:\n        /* \"#utility.yul\":3382:3432   */\n      tag_512\n        /* \"#utility.yul\":3424:3431   */\n      dup8\n        /* \"#utility.yul\":3415:3421   */\n      dup4\n        /* \"#utility.yul\":3404:3413   */\n      dup9\n        /* \"#utility.yul\":3400:3422   */\n      add\n        /* \"#utility.yul\":3382:3432   */\n      tag_475\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":3372:3432   */\n      swap5\n      pop\n        /* \"#utility.yul\":3485:3487   */\n      0x20\n        /* \"#utility.yul\":3474:3483   */\n      dup7\n        /* \"#utility.yul\":3470:3488   */\n      add\n        /* \"#utility.yul\":3457:3489   */\n      calldataload\n        /* \"#utility.yul\":3441:3489   */\n      swap2\n      pop\n        /* \"#utility.yul\":3514:3516   */\n      dup1\n        /* \"#utility.yul\":3504:3512   */\n      dup3\n        /* \"#utility.yul\":3501:3517   */\n      gt\n        /* \"#utility.yul\":3498:3534   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":3530:3531   */\n      0x00\n        /* \"#utility.yul\":3527:3528   */\n      dup1\n        /* \"#utility.yul\":3520:3532   */\n      revert\n        /* \"#utility.yul\":3498:3534   */\n    tag_513:\n      pop\n        /* \"#utility.yul\":3553:3605   */\n      tag_514\n        /* \"#utility.yul\":3597:3604   */\n      dup7\n        /* \"#utility.yul\":3586:3594   */\n      dup3\n        /* \"#utility.yul\":3575:3584   */\n      dup8\n        /* \"#utility.yul\":3571:3595   */\n      add\n        /* \"#utility.yul\":3553:3605   */\n      tag_475\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":3543:3605   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":3624:3662   */\n      tag_515\n        /* \"#utility.yul\":3658:3660   */\n      0x40\n        /* \"#utility.yul\":3647:3656   */\n      dup6\n        /* \"#utility.yul\":3643:3661   */\n      add\n        /* \"#utility.yul\":3624:3662   */\n      tag_476\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":3614:3662   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3668   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3855:4035   */\n    tag_58:\n        /* \"#utility.yul\":3914:3920   */\n      0x00\n        /* \"#utility.yul\":3967:3969   */\n      0x20\n        /* \"#utility.yul\":3955:3964   */\n      dup3\n        /* \"#utility.yul\":3946:3953   */\n      dup5\n        /* \"#utility.yul\":3942:3965   */\n      sub\n        /* \"#utility.yul\":3938:3970   */\n      slt\n        /* \"#utility.yul\":3935:3987   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":3983:3984   */\n      0x00\n        /* \"#utility.yul\":3980:3981   */\n      dup1\n        /* \"#utility.yul\":3973:3985   */\n      revert\n        /* \"#utility.yul\":3935:3987   */\n    tag_518:\n      pop\n        /* \"#utility.yul\":4006:4029   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3855:4035   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4222:4408   */\n    tag_64:\n        /* \"#utility.yul\":4281:4287   */\n      0x00\n        /* \"#utility.yul\":4334:4336   */\n      0x20\n        /* \"#utility.yul\":4322:4331   */\n      dup3\n        /* \"#utility.yul\":4313:4320   */\n      dup5\n        /* \"#utility.yul\":4309:4332   */\n      sub\n        /* \"#utility.yul\":4305:4337   */\n      slt\n        /* \"#utility.yul\":4302:4354   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":4350:4351   */\n      0x00\n        /* \"#utility.yul\":4347:4348   */\n      dup1\n        /* \"#utility.yul\":4340:4352   */\n      revert\n        /* \"#utility.yul\":4302:4354   */\n    tag_521:\n        /* \"#utility.yul\":4373:4402   */\n      tag_307\n        /* \"#utility.yul\":4392:4401   */\n      dup3\n        /* \"#utility.yul\":4373:4402   */\n      tag_476\n      jump\t// in\n        /* \"#utility.yul\":4413:4667   */\n    tag_69:\n        /* \"#utility.yul\":4481:4487   */\n      0x00\n        /* \"#utility.yul\":4489:4495   */\n      dup1\n        /* \"#utility.yul\":4542:4544   */\n      0x40\n        /* \"#utility.yul\":4530:4539   */\n      dup4\n        /* \"#utility.yul\":4521:4528   */\n      dup6\n        /* \"#utility.yul\":4517:4540   */\n      sub\n        /* \"#utility.yul\":4513:4545   */\n      slt\n        /* \"#utility.yul\":4510:4562   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":4558:4559   */\n      0x00\n        /* \"#utility.yul\":4555:4556   */\n      dup1\n        /* \"#utility.yul\":4548:4560   */\n      revert\n        /* \"#utility.yul\":4510:4562   */\n    tag_524:\n        /* \"#utility.yul\":4594:4603   */\n      dup3\n        /* \"#utility.yul\":4581:4604   */\n      calldataload\n        /* \"#utility.yul\":4571:4604   */\n      swap2\n      pop\n        /* \"#utility.yul\":4623:4661   */\n      tag_525\n        /* \"#utility.yul\":4657:4659   */\n      0x20\n        /* \"#utility.yul\":4646:4655   */\n      dup5\n        /* \"#utility.yul\":4642:4660   */\n      add\n        /* \"#utility.yul\":4623:4661   */\n      tag_476\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":4613:4661   */\n      swap1\n      pop\n        /* \"#utility.yul\":4413:4667   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4672:5264   */\n    tag_73:\n        /* \"#utility.yul\":4743:4749   */\n      0x00\n        /* \"#utility.yul\":4751:4757   */\n      dup1\n        /* \"#utility.yul\":4804:4806   */\n      0x20\n        /* \"#utility.yul\":4792:4801   */\n      dup4\n        /* \"#utility.yul\":4783:4790   */\n      dup6\n        /* \"#utility.yul\":4779:4802   */\n      sub\n        /* \"#utility.yul\":4775:4807   */\n      slt\n        /* \"#utility.yul\":4772:4824   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":4820:4821   */\n      0x00\n        /* \"#utility.yul\":4817:4818   */\n      dup1\n        /* \"#utility.yul\":4810:4822   */\n      revert\n        /* \"#utility.yul\":4772:4824   */\n    tag_527:\n        /* \"#utility.yul\":4860:4869   */\n      dup3\n        /* \"#utility.yul\":4847:4870   */\n      calldataload\n        /* \"#utility.yul\":4889:4907   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4930:4932   */\n      dup1\n        /* \"#utility.yul\":4922:4928   */\n      dup3\n        /* \"#utility.yul\":4919:4933   */\n      gt\n        /* \"#utility.yul\":4916:4950   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":4946:4947   */\n      0x00\n        /* \"#utility.yul\":4943:4944   */\n      dup1\n        /* \"#utility.yul\":4936:4948   */\n      revert\n        /* \"#utility.yul\":4916:4950   */\n    tag_528:\n        /* \"#utility.yul\":4984:4990   */\n      dup2\n        /* \"#utility.yul\":4973:4982   */\n      dup6\n        /* \"#utility.yul\":4969:4991   */\n      add\n        /* \"#utility.yul\":4959:4991   */\n      swap2\n      pop\n        /* \"#utility.yul\":5029:5036   */\n      dup6\n        /* \"#utility.yul\":5022:5026   */\n      0x1f\n        /* \"#utility.yul\":5018:5020   */\n      dup4\n        /* \"#utility.yul\":5014:5027   */\n      add\n        /* \"#utility.yul\":5010:5037   */\n      slt\n        /* \"#utility.yul\":5000:5055   */\n      tag_529\n      jumpi\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5048:5049   */\n      dup1\n        /* \"#utility.yul\":5041:5053   */\n      revert\n        /* \"#utility.yul\":5000:5055   */\n    tag_529:\n        /* \"#utility.yul\":5091:5093   */\n      dup2\n        /* \"#utility.yul\":5078:5094   */\n      calldataload\n        /* \"#utility.yul\":5117:5119   */\n      dup2\n        /* \"#utility.yul\":5109:5115   */\n      dup2\n        /* \"#utility.yul\":5106:5120   */\n      gt\n        /* \"#utility.yul\":5103:5137   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":5133:5134   */\n      0x00\n        /* \"#utility.yul\":5130:5131   */\n      dup1\n        /* \"#utility.yul\":5123:5135   */\n      revert\n        /* \"#utility.yul\":5103:5137   */\n    tag_530:\n        /* \"#utility.yul\":5178:5185   */\n      dup7\n        /* \"#utility.yul\":5173:5175   */\n      0x20\n        /* \"#utility.yul\":5164:5170   */\n      dup3\n        /* \"#utility.yul\":5160:5162   */\n      dup6\n        /* \"#utility.yul\":5156:5171   */\n      add\n        /* \"#utility.yul\":5152:5176   */\n      add\n        /* \"#utility.yul\":5149:5186   */\n      gt\n        /* \"#utility.yul\":5146:5203   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":5199:5200   */\n      0x00\n        /* \"#utility.yul\":5196:5197   */\n      dup1\n        /* \"#utility.yul\":5189:5201   */\n      revert\n        /* \"#utility.yul\":6511:6695   */\n    tag_143:\n        /* \"#utility.yul\":6563:6640   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6560:6561   */\n      0x00\n        /* \"#utility.yul\":6553:6641   */\n      mstore\n        /* \"#utility.yul\":6660:6664   */\n      0x32\n        /* \"#utility.yul\":6657:6658   */\n      0x04\n        /* \"#utility.yul\":6650:6665   */\n      mstore\n        /* \"#utility.yul\":6684:6688   */\n      0x24\n        /* \"#utility.yul\":6681:6682   */\n      0x00\n        /* \"#utility.yul\":6674:6689   */\n      revert\n        /* \"#utility.yul\":6700:6884   */\n    tag_477:\n        /* \"#utility.yul\":6752:6829   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6749:6750   */\n      0x00\n        /* \"#utility.yul\":6742:6830   */\n      mstore\n        /* \"#utility.yul\":6849:6853   */\n      0x11\n        /* \"#utility.yul\":6846:6847   */\n      0x04\n        /* \"#utility.yul\":6839:6854   */\n      mstore\n        /* \"#utility.yul\":6873:6877   */\n      0x24\n        /* \"#utility.yul\":6870:6871   */\n      0x00\n        /* \"#utility.yul\":6863:6878   */\n      revert\n        /* \"#utility.yul\":6889:7064   */\n    tag_156:\n        /* \"#utility.yul\":6926:6929   */\n      0x00\n        /* \"#utility.yul\":6970:6974   */\n      0xff\n        /* \"#utility.yul\":6963:6968   */\n      dup3\n        /* \"#utility.yul\":6959:6975   */\n      and\n        /* \"#utility.yul\":6999:7003   */\n      0xff\n        /* \"#utility.yul\":6990:6997   */\n      dup2\n        /* \"#utility.yul\":6987:7004   */\n      sub\n        /* \"#utility.yul\":6984:7027   */\n      tag_541\n      jumpi\n        /* \"#utility.yul\":7007:7025   */\n      tag_541\n      tag_477\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":7056:7057   */\n      0x01\n        /* \"#utility.yul\":7043:7058   */\n      add\n      swap3\n        /* \"#utility.yul\":6889:7064   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7069:7506   */\n    tag_163:\n        /* \"#utility.yul\":7148:7149   */\n      0x01\n        /* \"#utility.yul\":7144:7156   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7191:7203   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7212:7273   */\n      tag_543\n      jumpi\n        /* \"#utility.yul\":7266:7270   */\n      0x7f\n        /* \"#utility.yul\":7258:7264   */\n      dup3\n        /* \"#utility.yul\":7254:7271   */\n      and\n        /* \"#utility.yul\":7244:7271   */\n      swap2\n      pop\n        /* \"#utility.yul\":7212:7273   */\n    tag_543:\n        /* \"#utility.yul\":7319:7321   */\n      0x20\n        /* \"#utility.yul\":7311:7317   */\n      dup3\n        /* \"#utility.yul\":7308:7322   */\n      lt\n        /* \"#utility.yul\":7288:7306   */\n      dup2\n        /* \"#utility.yul\":7285:7323   */\n      sub\n        /* \"#utility.yul\":7282:7500   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":7356:7433   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7353:7354   */\n      0x00\n        /* \"#utility.yul\":7346:7434   */\n      mstore\n        /* \"#utility.yul\":7457:7461   */\n      0x22\n        /* \"#utility.yul\":7454:7455   */\n      0x04\n        /* \"#utility.yul\":7447:7462   */\n      mstore\n        /* \"#utility.yul\":7485:7489   */\n      0x24\n        /* \"#utility.yul\":7482:7483   */\n      0x00\n        /* \"#utility.yul\":7475:7490   */\n      revert\n        /* \"#utility.yul\":7282:7500   */\n    tag_544:\n      pop\n        /* \"#utility.yul\":7069:7506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8052:8597   */\n    tag_479:\n        /* \"#utility.yul\":8154:8156   */\n      0x1f\n        /* \"#utility.yul\":8149:8152   */\n      dup3\n        /* \"#utility.yul\":8146:8157   */\n      gt\n        /* \"#utility.yul\":8143:8591   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":8190:8191   */\n      0x00\n        /* \"#utility.yul\":8215:8220   */\n      dup2\n        /* \"#utility.yul\":8211:8213   */\n      dup2\n        /* \"#utility.yul\":8204:8221   */\n      mstore\n        /* \"#utility.yul\":8260:8264   */\n      0x20\n        /* \"#utility.yul\":8256:8258   */\n      dup2\n        /* \"#utility.yul\":8246:8265   */\n      keccak256\n        /* \"#utility.yul\":8330:8332   */\n      0x1f\n        /* \"#utility.yul\":8318:8328   */\n      dup6\n        /* \"#utility.yul\":8314:8333   */\n      add\n        /* \"#utility.yul\":8311:8312   */\n      0x05\n        /* \"#utility.yul\":8307:8334   */\n      shr\n        /* \"#utility.yul\":8301:8305   */\n      dup2\n        /* \"#utility.yul\":8297:8335   */\n      add\n        /* \"#utility.yul\":8366:8370   */\n      0x20\n        /* \"#utility.yul\":8354:8364   */\n      dup7\n        /* \"#utility.yul\":8351:8371   */\n      lt\n        /* \"#utility.yul\":8348:8395   */\n      iszero\n      tag_549\n      jumpi\n      pop\n        /* \"#utility.yul\":8389:8393   */\n      dup1\n        /* \"#utility.yul\":8348:8395   */\n    tag_549:\n        /* \"#utility.yul\":8444:8446   */\n      0x1f\n        /* \"#utility.yul\":8439:8442   */\n      dup6\n        /* \"#utility.yul\":8435:8447   */\n      add\n        /* \"#utility.yul\":8432:8433   */\n      0x05\n        /* \"#utility.yul\":8428:8448   */\n      shr\n        /* \"#utility.yul\":8422:8426   */\n      dup3\n        /* \"#utility.yul\":8418:8449   */\n      add\n        /* \"#utility.yul\":8408:8449   */\n      swap2\n      pop\n        /* \"#utility.yul\":8499:8581   */\n    tag_550:\n        /* \"#utility.yul\":8517:8519   */\n      dup2\n        /* \"#utility.yul\":8510:8515   */\n      dup2\n        /* \"#utility.yul\":8507:8520   */\n      lt\n        /* \"#utility.yul\":8499:8581   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":8562:8579   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":8543:8544   */\n      0x01\n        /* \"#utility.yul\":8532:8545   */\n      add\n        /* \"#utility.yul\":8499:8581   */\n      jump(tag_550)\n    tag_552:\n        /* \"#utility.yul\":8503:8506   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8052:8597   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8833:10304   */\n    tag_175:\n        /* \"#utility.yul\":8959:8962   */\n      dup2\n        /* \"#utility.yul\":8953:8963   */\n      mload\n        /* \"#utility.yul\":8986:9004   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8978:8984   */\n      dup2\n        /* \"#utility.yul\":8975:9005   */\n      gt\n        /* \"#utility.yul\":8972:9028   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":9008:9026   */\n      tag_556\n      tag_361\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":9037:9134   */\n      tag_557\n        /* \"#utility.yul\":9127:9133   */\n      dup2\n        /* \"#utility.yul\":9087:9125   */\n      tag_558\n        /* \"#utility.yul\":9119:9123   */\n      dup5\n        /* \"#utility.yul\":9113:9124   */\n      sload\n        /* \"#utility.yul\":9087:9125   */\n      tag_163\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":9081:9085   */\n      dup5\n        /* \"#utility.yul\":9037:9134   */\n      tag_479\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":9189:9193   */\n      0x20\n      dup1\n        /* \"#utility.yul\":9253:9255   */\n      0x1f\n        /* \"#utility.yul\":9242:9256   */\n      dup4\n      gt\n        /* \"#utility.yul\":9270:9271   */\n      0x01\n        /* \"#utility.yul\":9265:10047   */\n      dup2\n      eq\n      tag_560\n      jumpi\n        /* \"#utility.yul\":10091:10092   */\n      0x00\n        /* \"#utility.yul\":10108:10114   */\n      dup5\n        /* \"#utility.yul\":10105:10194   */\n      iszero\n      tag_561\n      jumpi\n      pop\n        /* \"#utility.yul\":10160:10179   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":10154:10180   */\n      mload\n        /* \"#utility.yul\":10105:10194   */\n    tag_561:\n        /* \"#utility.yul\":8739:8805   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8730:8731   */\n      0x03\n        /* \"#utility.yul\":8726:8737   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":8722:8806   */\n      shr\n        /* \"#utility.yul\":8718:8807   */\n      not\n        /* \"#utility.yul\":8708:8808   */\n      and\n        /* \"#utility.yul\":8814:8815   */\n      0x01\n        /* \"#utility.yul\":8810:8821   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":8705:8822   */\n      or\n        /* \"#utility.yul\":10207:10288   */\n      dup6\n      sstore\n        /* \"#utility.yul\":9235:10298   */\n      jump(tag_552)\n        /* \"#utility.yul\":9265:10047   */\n    tag_560:\n        /* \"#utility.yul\":7999:8000   */\n      0x00\n        /* \"#utility.yul\":7992:8006   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":8036:8040   */\n      0x20\n        /* \"#utility.yul\":8023:8041   */\n      dup2\n      keccak256\n        /* \"#utility.yul\":9313:9379   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":9301:9380   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":9478:9714   */\n    tag_564:\n        /* \"#utility.yul\":9492:9499   */\n      dup3\n        /* \"#utility.yul\":9489:9490   */\n      dup2\n        /* \"#utility.yul\":9486:9500   */\n      lt\n        /* \"#utility.yul\":9478:9714   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":9581:9600   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":9575:9601   */\n      mload\n        /* \"#utility.yul\":9560:9602   */\n      dup3\n      sstore\n        /* \"#utility.yul\":9673:9700   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":9641:9642   */\n      0x01\n        /* \"#utility.yul\":9629:9643   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":9508:9527   */\n      dup5\n      add\n        /* \"#utility.yul\":9478:9714   */\n      jump(tag_564)\n    tag_566:\n        /* \"#utility.yul\":9482:9485   */\n      pop\n        /* \"#utility.yul\":9742:9748   */\n      dup6\n        /* \"#utility.yul\":9733:9740   */\n      dup3\n        /* \"#utility.yul\":9730:9749   */\n      lt\n        /* \"#utility.yul\":9727:9988   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":9803:9822   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":9797:9823   */\n      mload\n        /* \"#utility.yul\":9904:9970   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9886:9887   */\n      0x03\n        /* \"#utility.yul\":9882:9896   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":9898:9901   */\n      0xf8\n        /* \"#utility.yul\":9878:9902   */\n      and\n        /* \"#utility.yul\":9874:9971   */\n      shr\n        /* \"#utility.yul\":9870:9972   */\n      not\n        /* \"#utility.yul\":9855:9973   */\n      and\n        /* \"#utility.yul\":9840:9974   */\n      dup2\n      sstore\n        /* \"#utility.yul\":9727:9988   */\n    tag_567:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10034:10035   */\n      0x01\n        /* \"#utility.yul\":10018:10032   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":10014:10036   */\n      add\n        /* \"#utility.yul\":10001:10037   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":8833:10304   */\n      jump\t// out\n        /* \"#utility.yul\":10974:12299   */\n    tag_201:\n        /* \"#utility.yul\":11098:11116   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11093:11096   */\n      dup4\n        /* \"#utility.yul\":11090:11117   */\n      gt\n        /* \"#utility.yul\":11087:11140   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":11120:11138   */\n      tag_572\n      tag_361\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":11149:11243   */\n      tag_573\n        /* \"#utility.yul\":11239:11242   */\n      dup4\n        /* \"#utility.yul\":11199:11237   */\n      tag_574\n        /* \"#utility.yul\":11231:11235   */\n      dup4\n        /* \"#utility.yul\":11225:11236   */\n      sload\n        /* \"#utility.yul\":11199:11237   */\n      tag_163\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":11193:11197   */\n      dup4\n        /* \"#utility.yul\":11149:11243   */\n      tag_479\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":11269:11270   */\n      0x00\n        /* \"#utility.yul\":11294:11296   */\n      0x1f\n        /* \"#utility.yul\":11289:11292   */\n      dup5\n        /* \"#utility.yul\":11286:11297   */\n      gt\n        /* \"#utility.yul\":11311:11312   */\n      0x01\n        /* \"#utility.yul\":11306:12041   */\n      dup2\n      eq\n      tag_576\n      jumpi\n        /* \"#utility.yul\":12085:12086   */\n      0x00\n        /* \"#utility.yul\":12102:12105   */\n      dup6\n        /* \"#utility.yul\":12099:12192   */\n      iszero\n      tag_577\n      jumpi\n      pop\n        /* \"#utility.yul\":12158:12177   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":12145:12178   */\n      calldataload\n        /* \"#utility.yul\":12099:12192   */\n    tag_577:\n        /* \"#utility.yul\":8739:8805   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8730:8731   */\n      0x03\n        /* \"#utility.yul\":8726:8737   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":8722:8806   */\n      shr\n        /* \"#utility.yul\":8718:8807   */\n      not\n        /* \"#utility.yul\":8708:8808   */\n      and\n        /* \"#utility.yul\":8814:8815   */\n      0x01\n        /* \"#utility.yul\":8810:8821   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":8705:8822   */\n      or\n        /* \"#utility.yul\":12205:12283   */\n      dup4\n      sstore\n        /* \"#utility.yul\":11279:12293   */\n      jump(tag_575)\n        /* \"#utility.yul\":11306:12041   */\n    tag_576:\n        /* \"#utility.yul\":7999:8000   */\n      0x00\n        /* \"#utility.yul\":7992:8006   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":8036:8040   */\n      0x20\n        /* \"#utility.yul\":8023:8041   */\n      swap1\n      keccak256\n        /* \"#utility.yul\":11351:11417   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":11342:11418   */\n      dup7\n      and\n      swap1\n        /* \"#utility.yul\":11502:11511   */\n      dup4\n        /* \"#utility.yul\":11524:11753   */\n    tag_580:\n        /* \"#utility.yul\":11538:11545   */\n      dup3\n        /* \"#utility.yul\":11535:11536   */\n      dup2\n        /* \"#utility.yul\":11532:11546   */\n      lt\n        /* \"#utility.yul\":11524:11753   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":11627:11646   */\n      dup7\n      dup6\n      add\n        /* \"#utility.yul\":11614:11647   */\n      calldataload\n        /* \"#utility.yul\":11599:11648   */\n      dup3\n      sstore\n        /* \"#utility.yul\":11734:11738   */\n      0x20\n        /* \"#utility.yul\":11719:11739   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":11687:11688   */\n      0x01\n        /* \"#utility.yul\":11675:11689   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":11554:11566   */\n      add\n        /* \"#utility.yul\":11524:11753   */\n      jump(tag_580)\n    tag_582:\n        /* \"#utility.yul\":11528:11531   */\n      pop\n        /* \"#utility.yul\":11781:11784   */\n      dup7\n        /* \"#utility.yul\":11772:11779   */\n      dup3\n        /* \"#utility.yul\":11769:11785   */\n      lt\n        /* \"#utility.yul\":11766:11985   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":11901:11967   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11895:11898   */\n      0xf8\n        /* \"#utility.yul\":11889:11892   */\n      dup9\n        /* \"#utility.yul\":11886:11887   */\n      0x03\n        /* \"#utility.yul\":11882:11893   */\n      shl\n        /* \"#utility.yul\":11878:11899   */\n      and\n        /* \"#utility.yul\":11874:11968   */\n      shr\n        /* \"#utility.yul\":11870:11969   */\n      not\n        /* \"#utility.yul\":11857:11866   */\n      dup5\n        /* \"#utility.yul\":11852:11855   */\n      dup8\n        /* \"#utility.yul\":11848:11867   */\n      add\n        /* \"#utility.yul\":11835:11868   */\n      calldataload\n        /* \"#utility.yul\":11831:11970   */\n      and\n        /* \"#utility.yul\":11823:11829   */\n      dup2\n        /* \"#utility.yul\":11816:11971   */\n      sstore\n        /* \"#utility.yul\":11766:11985   */\n    tag_583:\n      pop\n      pop\n        /* \"#utility.yul\":12028:12029   */\n      0x01\n        /* \"#utility.yul\":12022:12025   */\n      dup6\n        /* \"#utility.yul\":12019:12020   */\n      0x01\n        /* \"#utility.yul\":12015:12026   */\n      shl\n        /* \"#utility.yul\":12011:12030   */\n      add\n        /* \"#utility.yul\":12005:12009   */\n      dup4\n        /* \"#utility.yul\":11998:12031   */\n      sstore\n        /* \"#utility.yul\":11279:12293   */\n    tag_575:\n      pop\n      pop\n        /* \"#utility.yul\":10974:12299   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13890:14968   */\n    tag_284:\n        /* \"#utility.yul\":14066:14069   */\n      0x00\n        /* \"#utility.yul\":14095:14096   */\n      dup1\n        /* \"#utility.yul\":14128:14134   */\n      dup5\n        /* \"#utility.yul\":14122:14135   */\n      sload\n        /* \"#utility.yul\":14158:14194   */\n      tag_589\n        /* \"#utility.yul\":14184:14193   */\n      dup2\n        /* \"#utility.yul\":14158:14194   */\n      tag_163\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":14213:14214   */\n      0x01\n        /* \"#utility.yul\":14230:14248   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":14257:14448   */\n      dup1\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":14462:14463   */\n      0x01\n        /* \"#utility.yul\":14457:14813   */\n      dup2\n      eq\n      tag_592\n      jumpi\n        /* \"#utility.yul\":14223:14813   */\n      jump(tag_590)\n        /* \"#utility.yul\":14257:14448   */\n    tag_591:\n        /* \"#utility.yul\":14305:14371   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n        /* \"#utility.yul\":14294:14303   */\n      dup5\n        /* \"#utility.yul\":14290:14372   */\n      and\n        /* \"#utility.yul\":14285:14288   */\n      dup8\n        /* \"#utility.yul\":14278:14373   */\n      mstore\n        /* \"#utility.yul\":14428:14434   */\n      dup3\n        /* \"#utility.yul\":14421:14435   */\n      iszero\n        /* \"#utility.yul\":14414:14436   */\n      iszero\n        /* \"#utility.yul\":14406:14412   */\n      dup4\n        /* \"#utility.yul\":14402:14437   */\n      mul\n        /* \"#utility.yul\":14397:14400   */\n      dup8\n        /* \"#utility.yul\":14393:14438   */\n      add\n        /* \"#utility.yul\":14386:14438   */\n      swap5\n      pop\n        /* \"#utility.yul\":14257:14448   */\n      jump(tag_590)\n        /* \"#utility.yul\":14457:14813   */\n    tag_592:\n        /* \"#utility.yul\":14488:14494   */\n      dup9\n        /* \"#utility.yul\":14485:14486   */\n      0x00\n        /* \"#utility.yul\":14478:14495   */\n      mstore\n        /* \"#utility.yul\":14518:14522   */\n      0x20\n        /* \"#utility.yul\":14563:14565   */\n      dup1\n        /* \"#utility.yul\":14560:14561   */\n      0x00\n        /* \"#utility.yul\":14550:14566   */\n      keccak256\n        /* \"#utility.yul\":14588:14589   */\n      0x00\n        /* \"#utility.yul\":14602:14767   */\n    tag_593:\n        /* \"#utility.yul\":14616:14622   */\n      dup6\n        /* \"#utility.yul\":14613:14614   */\n      dup2\n        /* \"#utility.yul\":14610:14623   */\n      lt\n        /* \"#utility.yul\":14602:14767   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":14694:14708   */\n      dup2\n      sload\n        /* \"#utility.yul\":14681:14692   */\n      dup11\n      dup3\n      add\n        /* \"#utility.yul\":14674:14709   */\n      mstore\n        /* \"#utility.yul\":14737:14753   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":14631:14641   */\n      dup3\n      add\n        /* \"#utility.yul\":14602:14767   */\n      jump(tag_593)\n    tag_595:\n        /* \"#utility.yul\":14606:14609   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14796:14802   */\n      dup3\n        /* \"#utility.yul\":14791:14794   */\n      dup8\n        /* \"#utility.yul\":14787:14803   */\n      add\n        /* \"#utility.yul\":14780:14803   */\n      swap5\n      pop\n        /* \"#utility.yul\":14223:14813   */\n    tag_590:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14844:14850   */\n      dup4\n        /* \"#utility.yul\":14838:14851   */\n      mload\n        /* \"#utility.yul\":14860:14928   */\n      tag_596\n        /* \"#utility.yul\":14919:14927   */\n      dup2\n        /* \"#utility.yul\":14914:14917   */\n      dup4\n        /* \"#utility.yul\":14907:14911   */\n      0x20\n        /* \"#utility.yul\":14899:14905   */\n      dup9\n        /* \"#utility.yul\":14895:14912   */\n      add\n        /* \"#utility.yul\":14860:14928   */\n      tag_474\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":14944:14962   */\n      add\n      swap5\n        /* \"#utility.yul\":13890:14968   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15320:15515   */\n    tag_356:\n        /* \"#utility.yul\":15359:15362   */\n      0x00\n        /* \"#utility.yul\":15390:15456   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15383:15388   */\n      dup3\n        /* \"#utility.yul\":15380:15457   */\n      sub\n        /* \"#utility.yul\":15377:15480   */\n      tag_600\n      jumpi\n        /* \"#utility.yul\":15460:15478   */\n      tag_600\n      tag_477\n      jump\t// in\n    tag_600:\n      pop\n        /* \"#utility.yul\":15507:15508   */\n      0x01\n        /* \"#utility.yul\":15496:15509   */\n      add\n      swap1\n        /* \"#utility.yul\":15320:15515   */\n      jump\t// out\n        /* \"#utility.yul\":15520:15704   */\n    tag_481:\n        /* \"#utility.yul\":15572:15649   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15569:15570   */\n      0x00\n        /* \"#utility.yul\":15562:15650   */\n      mstore\n        /* \"#utility.yul\":15669:15673   */\n      0x12\n        /* \"#utility.yul\":15666:15667   */\n      0x04\n        /* \"#utility.yul\":15659:15674   */\n      mstore\n        /* \"#utility.yul\":15693:15697   */\n      0x24\n        /* \"#utility.yul\":15690:15691   */\n      0x00\n        /* \"#utility.yul\":15683:15698   */\n      revert\n        /* \"#utility.yul\":15709:15829   */\n    tag_358:\n        /* \"#utility.yul\":15749:15750   */\n      0x00\n        /* \"#utility.yul\":15775:15776   */\n      dup3\n        /* \"#utility.yul\":15765:15800   */\n      tag_604\n      jumpi\n        /* \"#utility.yul\":15780:15798   */\n      tag_604\n      tag_481\n      jump\t// in\n    tag_604:\n      pop\n        /* \"#utility.yul\":15814:15823   */\n      div\n      swap1\n        /* \"#utility.yul\":15709:15829   */\n      jump\t// out\n        /* \"#utility.yul\":15834:15962   */\n    tag_366:\n        /* \"#utility.yul\":15901:15910   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":15922:15933   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":15919:15956   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":15936:15954   */\n      tag_160\n      tag_477\n      jump\t// in\n        /* \"#utility.yul\":15967:16079   */\n    tag_368:\n        /* \"#utility.yul\":15999:16000   */\n      0x00\n        /* \"#utility.yul\":16025:16026   */\n      dup3\n        /* \"#utility.yul\":16015:16050   */\n      tag_610\n      jumpi\n        /* \"#utility.yul\":16030:16048   */\n      tag_610\n      tag_481\n      jump\t// in\n    tag_610:\n      pop\n        /* \"#utility.yul\":16064:16073   */\n      mod\n      swap1\n        /* \"#utility.yul\":15967:16079   */\n      jump\t// out\n        /* \"#utility.yul\":16084:16209   */\n    tag_370:\n        /* \"#utility.yul\":16149:16158   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":16170:16180   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":16167:16203   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":16183:16201   */\n      tag_160\n      tag_477\n      jump\t// in\n        /* \"#utility.yul\":16573:17385   */\n    tag_398:\n        /* \"#utility.yul\":16984:17009   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":16979:16982   */\n      dup2\n        /* \"#utility.yul\":16972:17010   */\n      mstore\n        /* \"#utility.yul\":16954:16957   */\n      0x00\n        /* \"#utility.yul\":17039:17045   */\n      dup4\n        /* \"#utility.yul\":17033:17046   */\n      mload\n        /* \"#utility.yul\":17055:17130   */\n      tag_616\n        /* \"#utility.yul\":17123:17129   */\n      dup2\n        /* \"#utility.yul\":17118:17120   */\n      0x17\n        /* \"#utility.yul\":17113:17116   */\n      dup6\n        /* \"#utility.yul\":17109:17121   */\n      add\n        /* \"#utility.yul\":17102:17106   */\n      0x20\n        /* \"#utility.yul\":17094:17100   */\n      dup9\n        /* \"#utility.yul\":17090:17107   */\n      add\n        /* \"#utility.yul\":17055:17130   */\n      tag_474\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":17194:17213   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":17189:17191   */\n      0x17\n        /* \"#utility.yul\":17149:17165   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":17181:17192   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":17174:17214   */\n      mstore\n        /* \"#utility.yul\":17239:17252   */\n      dup4\n      mload\n        /* \"#utility.yul\":17261:17337   */\n      tag_617\n        /* \"#utility.yul\":17239:17252   */\n      dup2\n        /* \"#utility.yul\":17323:17325   */\n      0x28\n        /* \"#utility.yul\":17315:17326   */\n      dup5\n      add\n        /* \"#utility.yul\":17308:17312   */\n      0x20\n        /* \"#utility.yul\":17296:17313   */\n      dup9\n      add\n        /* \"#utility.yul\":17261:17337   */\n      tag_474\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":17357:17374   */\n      add\n        /* \"#utility.yul\":17376:17378   */\n      0x28\n        /* \"#utility.yul\":17353:17379   */\n      add\n      swap5\n        /* \"#utility.yul\":16573:17385   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17390:17558   */\n    tag_425:\n        /* \"#utility.yul\":17463:17472   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":17494:17503   */\n      dup2\n      iszero\n        /* \"#utility.yul\":17511:17526   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":17505:17527   */\n      dup5\n      eq\n        /* \"#utility.yul\":17491:17528   */\n      or\n        /* \"#utility.yul\":17481:17552   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":17532:17550   */\n      tag_160\n      tag_477\n      jump\t// in\n        /* \"#utility.yul\":17563:17759   */\n    tag_444:\n        /* \"#utility.yul\":17602:17605   */\n      0x00\n        /* \"#utility.yul\":17630:17635   */\n      dup2\n        /* \"#utility.yul\":17620:17659   */\n      tag_623\n      jumpi\n        /* \"#utility.yul\":17639:17657   */\n      tag_623\n      tag_477\n      jump\t// in\n    tag_623:\n      pop\n        /* \"#utility.yul\":17686:17752   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17675:17753   */\n      add\n      swap1\n        /* \"#utility.yul\":17563:17759   */\n      jump\t// out\n        /* \"#utility.yul\":18125:18309   */\n    tag_465:\n        /* \"#utility.yul\":18177:18254   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18174:18175   */\n      0x00\n        /* \"#utility.yul\":18167:18255   */\n      mstore\n        /* \"#utility.yul\":18274:18278   */\n      0x31\n        /* \"#utility.yul\":18271:18272   */\n      0x04\n        /* \"#utility.yul\":18264:18279   */\n      mstore\n        /* \"#utility.yul\":18298:18302   */\n      0x24\n        /* \"#utility.yul\":18295:18296   */\n      0x00\n        /* \"#utility.yul\":18288:18303   */\n      revert\n    stop\n    data_4c0ef6bfa0a398fe3098d6b3c8bc2c4c45d120ec13b77201d29305b0abb24397 5468652077616c6c657420686173206e6f7420617474657374656420616e7920534254\n\n    auxdata: 0xa26469706673582212209803db7c50cf1f1bd7ac059977cdf85bb3ef3f59b35c3b4491161959f80cd43864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506129b5806100206000396000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c80636c60144a116100e357806395d89b411161008c578063d547741f11610066578063d547741f14610390578063eb31403f146103a3578063f5b541a6146103b657600080fd5b806395d89b411461036d578063a217fddf14610375578063c87b56dd1461037d57600080fd5b806374a8f103116100bd57806374a8f10314610301578063773c02d41461031457806391d148541461032757600080fd5b80636c60144a146102c85780636d70f7ae146102db57806370a08231146102ee57600080fd5b806324d7806c1161014557806336568abe1161011f57806336568abe1461027557806344df8e70146102885780636352211e1461029057600080fd5b806324d7806c1461023c5780632f2ff15d1461024f57806330176e131461026257600080fd5b8063077f224a11610176578063077f224a146101ef57806318160ddd14610202578063248a9ca31461021857600080fd5b8063011002df1461019d57806301ffc9a7146101b257806306fdde03146101da575b600080fd5b6101b06101ab366004612050565b6103dd565b005b6101c56101c03660046120c5565b61066f565b60405190151581526020015b60405180910390f35b6101e2610717565b6040516101d1919061212b565b6101b06101fd36600461227f565b6107a5565b61020a610937565b6040519081526020016101d1565b61020a6102263660046122f3565b6000908152600160208190526040909120015490565b6101c561024a36600461230c565b610948565b6101b061025d366004612327565b610995565b6101b0610270366004612353565b6109c0565b6101b0610283366004612327565b610ab1565b6101b0610b64565b6102a361029e3660046122f3565b610caf565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d1565b6101b06102d6366004612050565b610cfc565b6101c56102e936600461230c565b610f8f565b61020a6102fc36600461230c565b610fdc565b6101b061030f36600461230c565b611006565b61020a61032236600461230c565b61128b565b6101c5610335366004612327565b600091825260016020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b6101e26112b3565b61020a600081565b6101e261038b3660046122f3565b6112c0565b6101b061039e366004612327565b61131e565b61020a6103b136600461230c565b611344565b61020a7f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92981565b3360009081527f31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c26020526040902054819060ff166104a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4f6e6c7920746865206163636f756e742077697468204f50455241544f525f5260448201527f4f4c452063616e207265766f6b6520746865205342540000000000000000000060648201526084015b60405180910390fd5b6064811115610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f546865206d6178206c656e677468206f6620616464726573736573206973203160448201527f30300000000000000000000000000000000000000000000000000000000000006064820152608401610499565b60005b818160ff16101561066957600084848360ff16818110610558576105586123b3565b905060200201602081019061056d919061230c565b905073ffffffffffffffffffffffffffffffffffffffff8116158061059a57506105986005826115b4565b155b156105a55750610657565b60006105b26005836115dd565b90506105bf6005836115ff565b506105cb600282611621565b50604051819073ffffffffffffffffffffffffffffffffffffffff8416907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a3604051819060009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a450505b8061066181612411565b915050610536565b50505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061070257507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061071157506107118261162d565b92915050565b6009805461072490612430565b80601f016020809104026020016040519081016040528092919081815260200182805461075090612430565b801561079d5780601f106107725761010080835404028352916020019161079d565b820191906000526020600020905b81548152906001019060200180831161078057829003601f168201915b505050505081565b600054600190610100900460ff161580156107c7575060005460ff8083169116105b610853576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610499565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001660ff831617610100179055600961089085826124d1565b50600a61089d84826124d1565b506108a96000836116c4565b6108d37f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929836116c4565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b60006109436005611783565b905090565b73ffffffffffffffffffffffffffffffffffffffff811660009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604081205460ff16610711565b600082815260016020819052604090912001546109b18161178e565b6109bb83836116c4565b505050565b3360009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604090205460ff16610aa4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f4f6e6c7920746865206163636f756e7420776974682044454641554c545f414460448201527f4d494e5f524f4c452063616e2073657420746865206261736520746f6b656e2060648201527f5552490000000000000000000000000000000000000000000000000000000000608482015260a401610499565b600b6109bb8284836125eb565b73ffffffffffffffffffffffffffffffffffffffff81163314610b56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610499565b610b60828261179b565b5050565b33610b706005826115b4565b610bfc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f546865206163636f756e7420646f6573206e6f74206861766520616e7920534260448201527f54000000000000000000000000000000000000000000000000000000000000006064820152608401610499565b6000610c096005836115dd565b9050610c166005836115ff565b50610c22600282611621565b50604051819073ffffffffffffffffffffffffffffffffffffffff8416907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca590600090a3604051819060009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000610711826040518060400160405280600f81526020017f496e76616c696420746f6b656e4964000000000000000000000000000000000081525060026118569092919063ffffffff16565b3360009081527f31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c26020526040902054819060ff16610dbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4f6e6c7920746865206163636f756e742077697468204f50455241544f525f5260448201527f4f4c452063616e206174746573742074686520534254000000000000000000006064820152608401610499565b6064811115610e4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f546865206d6178206c656e677468206f6620616464726573736573206973203160448201527f30300000000000000000000000000000000000000000000000000000000000006064820152608401610499565b60005b818160ff16101561066957600084848360ff16818110610e7257610e726123b3565b9050602002016020810190610e87919061230c565b905073ffffffffffffffffffffffffffffffffffffffff81161580610eb25750610eb26005826115b4565b15610ebd5750610f7d565b610ecb600880546001019055565b6000610ed660085490565b9050610ee46005838361186b565b50610ef16002828461188e565b50604051819073ffffffffffffffffffffffffffffffffffffffff8416907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3604051819073ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a450505b80610f8781612411565b915050610e50565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c2602052604081205460ff16610711565b600080610fea6005846118b1565b50905080610ff9576000610ffc565b60015b60ff169392505050565b3360009081527f31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c2602052604090205460ff166110c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4f6e6c7920746865206163636f756e742077697468204f50455241544f525f5260448201527f4f4c452063616e207265766f6b652074686520534254000000000000000000006064820152608401610499565b73ffffffffffffffffffffffffffffffffffffffff8116611141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4164647265737320697320656d707479000000000000000000000000000000006044820152606401610499565b61114c6005826115b4565b6111d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f546865206163636f756e7420646f6573206e6f74206861766520616e7920534260448201527f54000000000000000000000000000000000000000000000000000000000000006064820152608401610499565b60006111e56005836115dd565b90506111f26005836115ff565b506111fe600282611621565b50604051819073ffffffffffffffffffffffffffffffffffffffff8416907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a3604051819060009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006107118260405180606001604052806023815260200161295d60239139600591906118e5565b600a805461072490612430565b60606000600b80546112d190612430565b9050116112ed5760405180602001604052806000815250610711565b600b6112f883611908565b604051602001611309929190612706565b60405160208183030381529060405292915050565b6000828152600160208190526040909120015461133a8161178e565b6109bb838361179b565b3360009081527f31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c2602052604081205460ff16611402576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4f6e6c7920746865206163636f756e742077697468204f50455241544f525f5260448201527f4f4c452063616e206174746573742074686520534254000000000000000000006064820152608401610499565b73ffffffffffffffffffffffffffffffffffffffff821661147f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4164647265737320697320656d707479000000000000000000000000000000006044820152606401610499565b61148a6005836115b4565b156114f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f53425420616c72656164792065786973747300000000000000000000000000006044820152606401610499565b6114ff600880546001019055565b600061150a60085490565b90506115186005848361186b565b506115256002828561188e565b50604051819073ffffffffffffffffffffffffffffffffffffffff8516907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3604051819073ffffffffffffffffffffffffffffffffffffffff8516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b60006115d68373ffffffffffffffffffffffffffffffffffffffff8416611a3d565b9392505050565b60006115d68373ffffffffffffffffffffffffffffffffffffffff8416611a49565b60006115d68373ffffffffffffffffffffffffffffffffffffffff8416611ad3565b60006115d68383611ad3565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061071157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610711565b600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610b6057600082815260016020818152604080842073ffffffffffffffffffffffffffffffffffffffff8616808652925280842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600061071182611af0565b6117988133611afb565b50565b600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1615610b6057600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611863848484611bb5565b949350505050565b60006118638473ffffffffffffffffffffffffffffffffffffffff851684611c1b565b6000611863848473ffffffffffffffffffffffffffffffffffffffff8516611c1b565b60008080806118d68673ffffffffffffffffffffffffffffffffffffffff8716611c38565b909450925050505b9250929050565b60006118638473ffffffffffffffffffffffffffffffffffffffff851684611bb5565b60608160000361194b57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611975578061195f816127ab565b915061196e9050600a83612812565b915061194f565b60008167ffffffffffffffff8111156119905761199061217c565b6040519080825280601f01601f1916602001820160405280156119ba576020820181803683370190505b5090505b8415611863576119cf600183612826565b91506119dc600a86612839565b6119e790603061284d565b60f81b8183815181106119fc576119fc6123b3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611a36600a86612812565b94506119be565b60006115d68383611c72565b600081815260028301602052604081205480151580611a6d5750611a6d8484611a3d565b6115d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b657900006044820152606401610499565b600081815260028301602052604081208190556115d68383611c8a565b600061071182611c96565b600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610b6057611b3b81611ca0565b611b46836020611cbf565b604051602001611b57929190612860565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526104999160040161212b565b600082815260028401602052604081205480151580611bd95750611bd98585611a3d565b8390611c12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610499919061212b565b50949350505050565b600082815260028401602052604081208290556118638484611f02565b6000818152600283016020526040812054819080611c6757611c5a8585611a3d565b9250600091506118de9050565b6001925090506118de565b600081815260018301602052604081205415156115d6565b60006115d68383611f0e565b6000610711825490565b606061071173ffffffffffffffffffffffffffffffffffffffff831660145b60606000611cce8360026128e1565b611cd990600261284d565b67ffffffffffffffff811115611cf157611cf161217c565b6040519080825280601f01601f191660200182016040528015611d1b576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611d5257611d526123b3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611db557611db56123b3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000611df18460026128e1565b611dfc90600161284d565b90505b6001811115611e99577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611e3d57611e3d6123b3565b1a60f81b828281518110611e5357611e536123b3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93611e92816128f8565b9050611dff565b5083156115d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610499565b60006115d68383612001565b60008181526001830160205260408120548015611ff7576000611f32600183612826565b8554909150600090611f4690600190612826565b9050818114611fab576000866000018281548110611f6657611f666123b3565b9060005260206000200154905080876000018481548110611f8957611f896123b3565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611fbc57611fbc61292d565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610711565b6000915050610711565b600081815260018301602052604081205461204857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610711565b506000610711565b6000806020838503121561206357600080fd5b823567ffffffffffffffff8082111561207b57600080fd5b818501915085601f83011261208f57600080fd5b81358181111561209e57600080fd5b8660208260051b85010111156120b357600080fd5b60209290920196919550909350505050565b6000602082840312156120d757600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146115d657600080fd5b60005b8381101561212257818101518382015260200161210a565b50506000910152565b602081526000825180602084015261214a816040850160208701612107565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126121bc57600080fd5b813567ffffffffffffffff808211156121d7576121d761217c565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561221d5761221d61217c565b8160405283815286602085880101111561223657600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461227a57600080fd5b919050565b60008060006060848603121561229457600080fd5b833567ffffffffffffffff808211156122ac57600080fd5b6122b8878388016121ab565b945060208601359150808211156122ce57600080fd5b506122db868287016121ab565b9250506122ea60408501612256565b90509250925092565b60006020828403121561230557600080fd5b5035919050565b60006020828403121561231e57600080fd5b6115d682612256565b6000806040838503121561233a57600080fd5b8235915061234a60208401612256565b90509250929050565b6000806020838503121561236657600080fd5b823567ffffffffffffffff8082111561237e57600080fd5b818501915085601f83011261239257600080fd5b8135818111156123a157600080fd5b8660208285010111156120b357600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff8103612427576124276123e2565b60010192915050565b600181811c9082168061244457607f821691505b60208210810361247d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f8211156109bb57600081815260208120601f850160051c810160208610156124aa5750805b601f850160051c820191505b818110156124c9578281556001016124b6565b505050505050565b815167ffffffffffffffff8111156124eb576124eb61217c565b6124ff816124f98454612430565b84612483565b602080601f831160018114612552576000841561251c5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556124c9565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561259f57888601518255948401946001909101908401612580565b50858210156125db57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b67ffffffffffffffff8311156126035761260361217c565b612617836126118354612430565b83612483565b6000601f84116001811461266957600085156126335750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b1783556126ff565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156126b85786850135825560209485019460019092019101612698565b50868210156126f3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b600080845461271481612430565b6001828116801561272c576001811461275f5761278e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008416875282151583028701945061278e565b8860005260208060002060005b858110156127855781548a82015290840190820161276c565b50505082870194505b5050505083516127a2818360208801612107565b01949350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036127dc576127dc6123e2565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612821576128216127e3565b500490565b81810381811115610711576107116123e2565b600082612848576128486127e3565b500690565b80820180821115610711576107116123e2565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612898816017850160208801612107565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516128d5816028840160208801612107565b01602801949350505050565b8082028115828204841417610711576107116123e2565b600081612907576129076123e2565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfe5468652077616c6c657420686173206e6f7420617474657374656420616e7920534254a26469706673582212209803db7c50cf1f1bd7ac059977cdf85bb3ef3f59b35c3b4491161959f80cd43864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x198 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C60144A GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xEB31403F EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xF5B541A6 EQ PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x74A8F103 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x74A8F103 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x773C02D4 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C60144A EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x6D70F7AE EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24D7806C GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24D7806C EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x30176E13 EQ PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x77F224A GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x77F224A EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11002DF EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B0 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C5 PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0x227F JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x230C JUMP JUMPDEST PUSH2 0x948 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x2327 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x2353 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x2327 JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x230C JUMP JUMPDEST PUSH2 0xF8F JUMP JUMPDEST PUSH2 0x20A PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x230C JUMP JUMPDEST PUSH2 0xFDC JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x230C JUMP JUMPDEST PUSH2 0x1006 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x230C JUMP JUMPDEST PUSH2 0x128B JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x20A PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x2327 JUMP JUMPDEST PUSH2 0x131E JUMP JUMPDEST PUSH2 0x20A PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x230C JUMP JUMPDEST PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x20A PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0x4A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4F4C452063616E207265766F6B65207468652053425400000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206D6178206C656E677468206F66206164647265737365732069732031 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x558 JUMPI PUSH2 0x558 PUSH2 0x23B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x230C JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 PUSH2 0x59A JUMPI POP PUSH2 0x598 PUSH1 0x5 DUP3 PUSH2 0x15B4 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x5A5 JUMPI POP PUSH2 0x657 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH1 0x5 DUP4 PUSH2 0x15DD JUMP JUMPDEST SWAP1 POP PUSH2 0x5BF PUSH1 0x5 DUP4 PUSH2 0x15FF JUMP JUMPDEST POP PUSH2 0x5CB PUSH1 0x2 DUP3 PUSH2 0x1621 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMPDEST DUP1 PUSH2 0x661 DUP2 PUSH2 0x2411 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x536 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x702 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x711 JUMPI POP PUSH2 0x711 DUP3 PUSH2 0x162D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x724 SWAP1 PUSH2 0x2430 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x750 SWAP1 PUSH2 0x2430 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x772 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x780 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x7C7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP2 AND LT JUMPDEST PUSH2 0x853 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 AND PUSH1 0xFF DUP4 AND OR PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x9 PUSH2 0x890 DUP6 DUP3 PUSH2 0x24D1 JUMP JUMPDEST POP PUSH1 0xA PUSH2 0x89D DUP5 DUP3 PUSH2 0x24D1 JUMP JUMPDEST POP PUSH2 0x8A9 PUSH1 0x0 DUP4 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x8D3 PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP4 PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0xFF DUP3 AND DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x943 PUSH1 0x5 PUSH2 0x1783 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x9B1 DUP2 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x9BB DUP4 DUP4 PUSH2 0x16C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E7420776974682044454641554C545F4144 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4D494E5F524F4C452063616E2073657420746865206261736520746F6B656E20 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x5552490000000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0xB PUSH2 0x9BB DUP3 DUP5 DUP4 PUSH2 0x25EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND CALLER EQ PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH2 0xB60 DUP3 DUP3 PUSH2 0x179B JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH2 0xB70 PUSH1 0x5 DUP3 PUSH2 0x15B4 JUMP JUMPDEST PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206163636F756E7420646F6573206E6F74206861766520616E79205342 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC09 PUSH1 0x5 DUP4 PUSH2 0x15DD JUMP JUMPDEST SWAP1 POP PUSH2 0xC16 PUSH1 0x5 DUP4 PUSH2 0x15FF JUMP JUMPDEST POP PUSH2 0xC22 PUSH1 0x2 DUP3 PUSH2 0x1621 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x711 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420746F6B656E49640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 PUSH2 0x1856 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0xDBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4F4C452063616E20617474657374207468652053425400000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0xE4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206D6178206C656E677468206F66206164647265737365732069732031 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0xE72 JUMPI PUSH2 0xE72 PUSH2 0x23B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x230C JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 PUSH2 0xEB2 JUMPI POP PUSH2 0xEB2 PUSH1 0x5 DUP3 PUSH2 0x15B4 JUMP JUMPDEST ISZERO PUSH2 0xEBD JUMPI POP PUSH2 0xF7D JUMP JUMPDEST PUSH2 0xECB PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED6 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xEE4 PUSH1 0x5 DUP4 DUP4 PUSH2 0x186B JUMP JUMPDEST POP PUSH2 0xEF1 PUSH1 0x2 DUP3 DUP5 PUSH2 0x188E JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMPDEST DUP1 PUSH2 0xF87 DUP2 PUSH2 0x2411 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE50 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFEA PUSH1 0x5 DUP5 PUSH2 0x18B1 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0xFF9 JUMPI PUSH1 0x0 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4F4C452063616E207265766F6B65207468652053425400000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1141 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320697320656D70747900000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST PUSH2 0x114C PUSH1 0x5 DUP3 PUSH2 0x15B4 JUMP JUMPDEST PUSH2 0x11D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206163636F756E7420646F6573206E6F74206861766520616E79205342 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E5 PUSH1 0x5 DUP4 PUSH2 0x15DD JUMP JUMPDEST SWAP1 POP PUSH2 0x11F2 PUSH1 0x5 DUP4 PUSH2 0x15FF JUMP JUMPDEST POP PUSH2 0x11FE PUSH1 0x2 DUP3 PUSH2 0x1621 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x711 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x295D PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x5 SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x724 SWAP1 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xB DUP1 SLOAD PUSH2 0x12D1 SWAP1 PUSH2 0x2430 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x12ED JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x711 JUMP JUMPDEST PUSH1 0xB PUSH2 0x12F8 DUP4 PUSH2 0x1908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1309 SWAP3 SWAP2 SWAP1 PUSH2 0x2706 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x133A DUP2 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x9BB DUP4 DUP4 PUSH2 0x179B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4F4C452063616E20617474657374207468652053425400000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x147F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320697320656D70747900000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST PUSH2 0x148A PUSH1 0x5 DUP4 PUSH2 0x15B4 JUMP JUMPDEST ISZERO PUSH2 0x14F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53425420616C7265616479206578697374730000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST PUSH2 0x14FF PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150A PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1518 PUSH1 0x5 DUP5 DUP4 PUSH2 0x186B JUMP JUMPDEST POP PUSH2 0x1525 PUSH1 0x2 DUP3 DUP6 PUSH2 0x188E JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x1A3D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP4 DUP4 PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x711 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB60 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP1 DUP7 MSTORE SWAP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x711 DUP3 PUSH2 0x1AF0 JUMP JUMPDEST PUSH2 0x1798 DUP2 CALLER PUSH2 0x1AFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB60 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 DUP5 DUP5 DUP5 PUSH2 0x1BB5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 DUP5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x18D6 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x1C38 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x194B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1975 JUMPI DUP1 PUSH2 0x195F DUP2 PUSH2 0x27AB JUMP JUMPDEST SWAP2 POP PUSH2 0x196E SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2812 JUMP JUMPDEST SWAP2 POP PUSH2 0x194F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1990 JUMPI PUSH2 0x1990 PUSH2 0x217C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19BA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x1863 JUMPI PUSH2 0x19CF PUSH1 0x1 DUP4 PUSH2 0x2826 JUMP JUMPDEST SWAP2 POP PUSH2 0x19DC PUSH1 0xA DUP7 PUSH2 0x2839 JUMP JUMPDEST PUSH2 0x19E7 SWAP1 PUSH1 0x30 PUSH2 0x284D JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x19FC JUMPI PUSH2 0x19FC PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1A36 PUSH1 0xA DUP7 PUSH2 0x2812 JUMP JUMPDEST SWAP5 POP PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP4 DUP4 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x1A6D JUMPI POP PUSH2 0x1A6D DUP5 DUP5 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x15D6 DUP4 DUP4 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x711 DUP3 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB60 JUMPI PUSH2 0x1B3B DUP2 PUSH2 0x1CA0 JUMP JUMPDEST PUSH2 0x1B46 DUP4 PUSH1 0x20 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B57 SWAP3 SWAP2 SWAP1 PUSH2 0x2860 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH2 0x499 SWAP2 PUSH1 0x4 ADD PUSH2 0x212B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x1BD9 JUMPI POP PUSH2 0x1BD9 DUP6 DUP6 PUSH2 0x1A3D JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x1C12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x1863 DUP5 DUP5 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP1 PUSH2 0x1C67 JUMPI PUSH2 0x1C5A DUP6 DUP6 PUSH2 0x1A3D JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x18DE SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP4 DUP4 PUSH2 0x1F0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x711 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x711 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1CCE DUP4 PUSH1 0x2 PUSH2 0x28E1 JUMP JUMPDEST PUSH2 0x1CD9 SWAP1 PUSH1 0x2 PUSH2 0x284D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CF1 JUMPI PUSH2 0x1CF1 PUSH2 0x217C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D1B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1D52 JUMPI PUSH2 0x1D52 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1DB5 JUMPI PUSH2 0x1DB5 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1DF1 DUP5 PUSH1 0x2 PUSH2 0x28E1 JUMP JUMPDEST PUSH2 0x1DFC SWAP1 PUSH1 0x1 PUSH2 0x284D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E99 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1E3D JUMPI PUSH2 0x1E3D PUSH2 0x23B3 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E53 JUMPI PUSH2 0x1E53 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1E92 DUP2 PUSH2 0x28F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DFF JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP4 DUP4 PUSH2 0x2001 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1FF7 JUMPI PUSH1 0x0 PUSH2 0x1F32 PUSH1 0x1 DUP4 PUSH2 0x2826 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1F46 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2826 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1FAB JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F66 JUMPI PUSH2 0x1F66 PUSH2 0x23B3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1F89 JUMPI PUSH2 0x1F89 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1FBC JUMPI PUSH2 0x1FBC PUSH2 0x292D JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2048 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x711 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x207B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x208F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x209E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x15D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2122 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x210A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x214A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x21D7 JUMPI PUSH2 0x21D7 PUSH2 0x217C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x221D JUMPI PUSH2 0x221D PUSH2 0x217C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x227A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x22AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22B8 DUP8 DUP4 DUP9 ADD PUSH2 0x21AB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x22CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22DB DUP7 DUP3 DUP8 ADD PUSH2 0x21AB JUMP JUMPDEST SWAP3 POP POP PUSH2 0x22EA PUSH1 0x40 DUP6 ADD PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x231E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15D6 DUP3 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x233A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x234A PUSH1 0x20 DUP5 ADD PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x237E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x23A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x2427 JUMPI PUSH2 0x2427 PUSH2 0x23E2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2444 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x247D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9BB JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x24AA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24C9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x24B6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24EB JUMPI PUSH2 0x24EB PUSH2 0x217C JUMP JUMPDEST PUSH2 0x24FF DUP2 PUSH2 0x24F9 DUP5 SLOAD PUSH2 0x2430 JUMP JUMPDEST DUP5 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2552 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x251C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x259F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2580 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x25DB JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2603 JUMPI PUSH2 0x2603 PUSH2 0x217C JUMP JUMPDEST PUSH2 0x2617 DUP4 PUSH2 0x2611 DUP4 SLOAD PUSH2 0x2430 JUMP JUMPDEST DUP4 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2669 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x2633 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x26B8 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2698 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x26F3 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x2714 DUP2 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x272C JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x275F JUMPI PUSH2 0x278E JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x278E JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2785 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x276C JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x27A2 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2107 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x27DC JUMPI PUSH2 0x27DC PUSH2 0x23E2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2821 JUMPI PUSH2 0x2821 PUSH2 0x27E3 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x711 JUMPI PUSH2 0x711 PUSH2 0x23E2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2848 JUMPI PUSH2 0x2848 PUSH2 0x27E3 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x711 JUMPI PUSH2 0x711 PUSH2 0x23E2 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2898 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2107 JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x28D5 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2107 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x711 JUMPI PUSH2 0x711 PUSH2 0x23E2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2907 JUMPI PUSH2 0x2907 PUSH2 0x23E2 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID SLOAD PUSH9 0x652077616C6C657420 PUSH9 0x6173206E6F74206174 PUSH21 0x657374656420616E7920534254A264697066735822 SLT KECCAK256 SWAP9 SUB 0xDB PUSH29 0x50CF1F1BD7AC059977CDF85BB3EF3F59B35C3B4491161959F80CD43864 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "628:6070:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_664": {
									"entryPoint": null,
									"id": 664,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@OPERATOR_ROLE_55": {
									"entryPoint": null,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_add_2886": {
									"entryPoint": 8193,
									"id": 2886,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_checkRole_729": {
									"entryPoint": 6030,
									"id": 729,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_768": {
									"entryPoint": 6907,
									"id": 768,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_contains_2989": {
									"entryPoint": null,
									"id": 2989,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_grantRole_920": {
									"entryPoint": 5828,
									"id": 920,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_length_3003": {
									"entryPoint": null,
									"id": 3003,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_1627": {
									"entryPoint": null,
									"id": 1627,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_remove_2970": {
									"entryPoint": 7950,
									"id": 2970,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_revokeRole_951": {
									"entryPoint": 6043,
									"id": 951,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_3056": {
									"entryPoint": 7938,
									"id": 3056,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@attest_164": {
									"entryPoint": 4932,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_513": {
									"entryPoint": 4060,
									"id": 513,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@batchAttest_263": {
									"entryPoint": 3324,
									"id": 263,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@batchRevoke_423": {
									"entryPoint": 989,
									"id": 423,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_473": {
									"entryPoint": 2916,
									"id": 473,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contains_1797": {
									"entryPoint": 6717,
									"id": 1797,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contains_2488": {
									"entryPoint": 5556,
									"id": 2488,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contains_3092": {
									"entryPoint": 7282,
									"id": 3092,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@current_1655": {
									"entryPoint": null,
									"id": 1655,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_783": {
									"entryPoint": null,
									"id": 783,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@get_1918": {
									"entryPoint": 6729,
									"id": 1918,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@get_1953": {
									"entryPoint": 7093,
									"id": 1953,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@get_2397": {
									"entryPoint": 6230,
									"id": 2397,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@get_2613": {
									"entryPoint": 5597,
									"id": 2613,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@get_2646": {
									"entryPoint": 6373,
									"id": 2646,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@grantRole_803": {
									"entryPoint": 2453,
									"id": 803,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_716": {
									"entryPoint": null,
									"id": 716,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increment_1669": {
									"entryPoint": null,
									"id": 1669,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialize_87": {
									"entryPoint": 1957,
									"id": 87,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isAdmin_577": {
									"entryPoint": 2376,
									"id": 577,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isOperator_564": {
									"entryPoint": 3983,
									"id": 564,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@length_1812": {
									"entryPoint": 6896,
									"id": 1812,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@length_2503": {
									"entryPoint": 6019,
									"id": 2503,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@length_3107": {
									"entryPoint": 7318,
									"id": 3107,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_46": {
									"entryPoint": 1815,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_541": {
									"entryPoint": 3247,
									"id": 541,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@remove_1779": {
									"entryPoint": 6867,
									"id": 1779,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@remove_2218": {
									"entryPoint": 5665,
									"id": 2218,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@remove_2461": {
									"entryPoint": 5631,
									"id": 2461,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@remove_3074": {
									"entryPoint": 7306,
									"id": 3074,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_846": {
									"entryPoint": 2737,
									"id": 846,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_823": {
									"entryPoint": 4894,
									"id": 823,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revoke_329": {
									"entryPoint": 4102,
									"id": 329,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setBaseTokenURI_493": {
									"entryPoint": 2496,
									"id": 493,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@set_1755": {
									"entryPoint": 7195,
									"id": 1755,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@set_2197": {
									"entryPoint": 6286,
									"id": 2197,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@set_2434": {
									"entryPoint": 6251,
									"id": 2434,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@supportsInterface_635": {
									"entryPoint": 1647,
									"id": 635,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_697": {
									"entryPoint": 5677,
									"id": 697,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_975": {
									"entryPoint": null,
									"id": 975,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_48": {
									"entryPoint": 4787,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toHexString_3788": {
									"entryPoint": 7359,
									"id": 3788,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_3808": {
									"entryPoint": 7328,
									"id": 3808,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_3671": {
									"entryPoint": 6408,
									"id": 3671,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenIdOf_527": {
									"entryPoint": 4747,
									"id": 527,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_606": {
									"entryPoint": 4800,
									"id": 606,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_551": {
									"entryPoint": 2359,
									"id": 551,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tryGet_1885": {
									"entryPoint": 7224,
									"id": 1885,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryGet_2583": {
									"entryPoint": 6321,
									"id": 2583,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_address": {
									"entryPoint": 8790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 8619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 8272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 8947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 8999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_calldata_ptr": {
									"entryPoint": 9043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address": {
									"entryPoint": 8831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9990,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10336,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e1890e5e17f8d1eac9ad6ed4b4250d8d69c12776e6f7ccfc0207787be0fef1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c1d2016a5c744a68c42f66619089ea6bcfaa0789449adc1f08ff1a38412eb69__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba976e6fdb37df9d22aca8365aa6504579d68ccdeedadad948053f8707d0cf04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd4411c84af8ba2f0686b60d9927be2dc3a376a30aeab1950fb7c93ad2f83e9f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f4eb9e3dc144b51037066c2a71acd8f8517949757f6c532ab3f6247c5cd58c9b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 9347,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage": {
									"entryPoint": 9707,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8455,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 10488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 9233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 10297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9186,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10211,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 10541,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18311:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "119:510:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "140:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "149:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "136:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "136:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "161:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "132:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "132:32:15"
															},
															"nodeType": "YulIf",
															"src": "129:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "190:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "217:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "204:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "204:23:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "194:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "236:28:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "246:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "240:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "279:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "287:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "276:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:14:15"
															},
															"nodeType": "YulIf",
															"src": "273:34:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "330:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "341:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:22:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "396:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "405:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "408:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "398:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "398:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "398:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "375:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "379:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "371:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "371:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "386:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "360:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:35:15"
															},
															"nodeType": "YulIf",
															"src": "357:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "421:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "448:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "435:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "435:16:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "425:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "478:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "487:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "490:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "480:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "480:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "480:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "466:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "474:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "463:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "463:14:15"
															},
															"nodeType": "YulIf",
															"src": "460:34:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "552:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "561:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "564:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "554:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "554:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "554:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "517:2:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "525:1:15",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "528:6:15"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "521:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "521:14:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "513:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "513:23:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "538:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "509:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "509:32:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "543:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "506:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "506:45:15"
															},
															"nodeType": "YulIf",
															"src": "503:65:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "577:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "595:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "587:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "587:11:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "607:16:15",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "617:6:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "77:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "88:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "100:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "108:6:15",
														"type": ""
													}
												],
												"src": "14:615:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "703:263:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "749:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "758:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "761:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "724:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "733:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "720:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "720:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "745:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "716:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:32:15"
															},
															"nodeType": "YulIf",
															"src": "713:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "774:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "800:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "787:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "778:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "920:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "929:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "932:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "922:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "922:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "922:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "832:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "843:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "850:66:15",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "839:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "839:78:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "829:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "829:89:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "822:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:97:15"
															},
															"nodeType": "YulIf",
															"src": "819:117:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "945:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "955:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "945:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "669:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "680:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "692:6:15",
														"type": ""
													}
												],
												"src": "634:332:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1066:92:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1076:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1088:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1099:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1084:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1076:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1118:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1143:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1136:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1136:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1129:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1129:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1111:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1111:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1035:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1046:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1057:4:15",
														"type": ""
													}
												],
												"src": "971:187:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1229:184:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1239:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1248:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1243:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1308:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1333:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1338:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1329:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1329:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1352:3:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1357:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1348:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1348:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1342:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1342:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1322:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1322:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1322:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1269:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1272:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1266:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1280:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1282:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1291:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1294:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1287:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1287:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1282:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1262:3:15",
																"statements": []
															},
															"src": "1258:113:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1391:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1396:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1387:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1387:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1405:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1207:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1212:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1217:6:15",
														"type": ""
													}
												],
												"src": "1163:250:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1539:334:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1556:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1567:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1549:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1549:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1549:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1579:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1599:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1593:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1583:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1626:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1637:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1622:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1622:18:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1642:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1615:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1615:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1615:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1697:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1705:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1693:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1693:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1714:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1725:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1710:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:18:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1730:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1658:34:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1658:79:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1658:79:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1746:121:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1762:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1781:6:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1789:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1777:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1777:15:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1794:66:15",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1773:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1773:88:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1758:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1758:104:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1864:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1754:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:113:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1746:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1508:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1519:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1530:4:15",
														"type": ""
													}
												],
												"src": "1418:455:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1910:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1927:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1930:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1920:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1920:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1920:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2024:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2027:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2017:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2017:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2017:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2051:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2041:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2041:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1878:184:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2120:725:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2169:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2178:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2181:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2171:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2171:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2171:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2148:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2156:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2144:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2144:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2163:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2140:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2140:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2133:35:15"
															},
															"nodeType": "YulIf",
															"src": "2130:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2194:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2217:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2204:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:20:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2198:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2233:28:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2243:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2237:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2284:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2286:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2286:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2286:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2276:2:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2280:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2273:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2273:10:15"
															},
															"nodeType": "YulIf",
															"src": "2270:36:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2315:76:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2325:66:15",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2319:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2400:23:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2420:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2414:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2414:9:15"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2404:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2432:71:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2454:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "2478:2:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2482:4:15",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2474:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2474:13:15"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "2489:2:15"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2470:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2470:22:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2494:2:15",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2466:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2466:31:15"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2499:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2462:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2462:40:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2450:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:53:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2436:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2562:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2564:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2564:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2564:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2521:10:15"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2533:2:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2518:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2518:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2541:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2553:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2538:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2538:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2515:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2515:46:15"
															},
															"nodeType": "YulIf",
															"src": "2512:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2600:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2604:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2593:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2593:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2593:22:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2631:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2639:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2624:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:18:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2624:18:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2690:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2699:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2702:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2692:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2692:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2692:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2665:6:15"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2673:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2661:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2661:15:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2678:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2657:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2657:26:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2685:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2654:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2654:35:15"
															},
															"nodeType": "YulIf",
															"src": "2651:55:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2732:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2740:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2728:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2728:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2751:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2759:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2747:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2747:17:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2766:2:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2715:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2715:54:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2715:54:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2793:6:15"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2801:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2789:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2789:15:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2806:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2785:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2785:26:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2813:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2778:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2778:37:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2824:15:15",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2833:6:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2824:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2094:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2102:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2110:5:15",
														"type": ""
													}
												],
												"src": "2067:778:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2899:147:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2909:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2931:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2918:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2918:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2909:5:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3024:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3036:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3026:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2960:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2971:5:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2978:42:15",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2967:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2967:54:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2957:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2957:65:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2950:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2950:73:15"
															},
															"nodeType": "YulIf",
															"src": "2947:93:15"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2878:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2889:5:15",
														"type": ""
													}
												],
												"src": "2850:196:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3175:493:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3221:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3230:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3233:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3223:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3223:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3188:32:15"
															},
															"nodeType": "YulIf",
															"src": "3185:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3246:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3273:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3260:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3260:23:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3250:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3292:28:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3302:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3296:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3347:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3356:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3359:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3349:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3349:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3349:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3335:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3343:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3332:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3332:14:15"
															},
															"nodeType": "YulIf",
															"src": "3329:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3372:60:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3404:9:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3415:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3400:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3400:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3424:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3382:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3382:50:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3372:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3441:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3474:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3485:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3470:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3470:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3457:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3457:32:15"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3445:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3518:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3527:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3530:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3520:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3520:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3520:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3504:8:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3514:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3501:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:16:15"
															},
															"nodeType": "YulIf",
															"src": "3498:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3543:62:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3575:9:15"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3586:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3571:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3571:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3597:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3553:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3553:52:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3543:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3614:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3647:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3658:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3643:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3643:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3624:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3624:38:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3125:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3136:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3148:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3156:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3164:6:15",
														"type": ""
													}
												],
												"src": "3051:617:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3774:76:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3784:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3796:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3792:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3792:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3784:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3826:9:15"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3837:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3819:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3819:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3819:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3743:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3754:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3765:4:15",
														"type": ""
													}
												],
												"src": "3673:177:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:110:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3971:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3980:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3983:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3973:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3973:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3973:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3946:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3955:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3942:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3942:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3967:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3938:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3938:32:15"
															},
															"nodeType": "YulIf",
															"src": "3935:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3996:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4019:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4006:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4006:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3996:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3891:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3902:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3914:6:15",
														"type": ""
													}
												],
												"src": "3855:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4141:76:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4151:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4163:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4174:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4159:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4159:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4151:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4193:9:15"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4204:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4186:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4186:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4110:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4121:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4132:4:15",
														"type": ""
													}
												],
												"src": "4040:177:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4292:116:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4338:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4347:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4350:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4340:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4340:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4340:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4313:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4322:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4309:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4309:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4334:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4305:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4305:32:15"
															},
															"nodeType": "YulIf",
															"src": "4302:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4363:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4392:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4373:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4373:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4363:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4258:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4269:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4281:6:15",
														"type": ""
													}
												],
												"src": "4222:186:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4500:167:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4546:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4555:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4558:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4548:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4548:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4548:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4521:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4530:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4517:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4517:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4542:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4513:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4513:32:15"
															},
															"nodeType": "YulIf",
															"src": "4510:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4571:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4594:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4581:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4581:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4571:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4613:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4646:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4657:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4642:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4623:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4623:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4613:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4458:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4469:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4481:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4489:6:15",
														"type": ""
													}
												],
												"src": "4413:254:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4762:502:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4808:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4817:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4820:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4810:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4810:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4810:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4783:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4792:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4779:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4779:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4804:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4775:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:32:15"
															},
															"nodeType": "YulIf",
															"src": "4772:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4833:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4860:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4847:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:23:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4837:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4879:28:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4889:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4883:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4934:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4943:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4946:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4936:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4936:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4936:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4922:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4930:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4919:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4919:14:15"
															},
															"nodeType": "YulIf",
															"src": "4916:34:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4959:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4973:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4984:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4969:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4969:22:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4963:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5039:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5048:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5051:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5041:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5041:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5041:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5018:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5022:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5014:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5014:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5029:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5010:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5003:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:35:15"
															},
															"nodeType": "YulIf",
															"src": "5000:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5064:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5091:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5078:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5078:16:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5068:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5121:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5130:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5133:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5123:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5123:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5123:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5109:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5117:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5106:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5106:14:15"
															},
															"nodeType": "YulIf",
															"src": "5103:34:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5187:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5196:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5199:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5189:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5189:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5189:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5160:2:15"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "5164:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5156:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5156:15:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5173:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5152:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5152:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5178:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5149:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5149:37:15"
															},
															"nodeType": "YulIf",
															"src": "5146:57:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5212:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5226:2:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5222:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5222:11:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5242:16:15",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "5252:6:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5242:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4720:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4731:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4743:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4751:6:15",
														"type": ""
													}
												],
												"src": "4672:592:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5339:110:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5385:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5394:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5397:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5387:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5387:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5387:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5360:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5369:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5356:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5356:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5381:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5352:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5352:32:15"
															},
															"nodeType": "YulIf",
															"src": "5349:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5410:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5433:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5420:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5420:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5410:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5305:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5316:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5328:6:15",
														"type": ""
													}
												],
												"src": "5269:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5555:125:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5565:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5577:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5588:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5573:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5573:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5565:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5607:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5622:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5630:42:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5618:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5618:55:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5600:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:74:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5600:74:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5524:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5535:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5546:4:15",
														"type": ""
													}
												],
												"src": "5454:226:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5859:244:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5876:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5887:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5869:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5869:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5869:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5910:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5921:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5906:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5906:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5926:2:15",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5899:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5899:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5899:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5949:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5960:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5945:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5945:18:15"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206163636f756e742077697468204f50455241544f525f52",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5965:34:15",
																		"type": "",
																		"value": "Only the account with OPERATOR_R"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5938:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5938:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5938:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6020:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6031:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6016:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6016:18:15"
																	},
																	{
																		"hexValue": "4f4c452063616e207265766f6b652074686520534254",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6036:24:15",
																		"type": "",
																		"value": "OLE can revoke the SBT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6009:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6009:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6009:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6070:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6082:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6093:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6078:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6078:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6070:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c1d2016a5c744a68c42f66619089ea6bcfaa0789449adc1f08ff1a38412eb69__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5836:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5850:4:15",
														"type": ""
													}
												],
												"src": "5685:418:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6282:224:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6299:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6310:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6292:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6292:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6292:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6333:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6344:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6329:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6329:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6349:2:15",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6322:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6322:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6322:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6372:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6383:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6368:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6368:18:15"
																	},
																	{
																		"hexValue": "546865206d6178206c656e677468206f66206164647265737365732069732031",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6388:34:15",
																		"type": "",
																		"value": "The max length of addresses is 1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6361:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6361:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6443:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6454:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6439:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6439:18:15"
																	},
																	{
																		"hexValue": "3030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6459:4:15",
																		"type": "",
																		"value": "00"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6432:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6432:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6432:32:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6473:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6485:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6496:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6481:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6481:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6473:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd4411c84af8ba2f0686b60d9927be2dc3a376a30aeab1950fb7c93ad2f83e9f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6259:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6273:4:15",
														"type": ""
													}
												],
												"src": "6108:398:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6560:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6563:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6553:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6553:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6553:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6657:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6660:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6650:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6650:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6650:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6681:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6674:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6674:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6511:184:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6732:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6749:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6752:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6742:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6742:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6742:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6846:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6849:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6839:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6839:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6839:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6870:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6873:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6863:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6863:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6863:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6700:184:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6934:130:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6944:31:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6963:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6970:4:15",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6959:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6959:16:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "6948:7:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7005:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7007:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7007:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7007:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "6990:7:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6999:4:15",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6987:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:17:15"
															},
															"nodeType": "YulIf",
															"src": "6984:43:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7036:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "7047:7:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7056:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7043:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:15:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7036:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6916:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6926:3:15",
														"type": ""
													}
												],
												"src": "6889:175:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7124:382:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7134:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7148:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7151:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7144:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7134:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7165:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7195:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7201:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7191:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7191:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7169:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7242:31:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7244:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7258:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7266:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7254:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7254:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7244:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7222:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7215:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7215:26:15"
															},
															"nodeType": "YulIf",
															"src": "7212:61:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7332:168:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7353:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7356:77:15",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7346:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7346:88:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7346:88:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7454:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7457:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7447:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7447:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7447:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7482:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7485:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7475:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7475:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7288:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7311:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7319:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7308:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7308:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7285:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7285:38:15"
															},
															"nodeType": "YulIf",
															"src": "7282:218:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7104:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7113:6:15",
														"type": ""
													}
												],
												"src": "7069:437:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7685:236:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7702:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7695:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7695:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7695:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7736:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7747:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7732:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7732:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7752:2:15",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7725:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7725:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7725:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7775:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7786:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7771:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7771:18:15"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7791:34:15",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7764:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7764:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7764:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7846:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7857:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7842:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7842:18:15"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7862:16:15",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7835:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7835:44:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7835:44:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7888:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7900:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7911:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7896:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7896:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7888:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7662:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7676:4:15",
														"type": ""
													}
												],
												"src": "7511:410:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7982:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7999:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8002:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7992:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7992:14:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7992:14:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8015:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8033:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8036:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "8023:9:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8023:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8015:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7965:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7973:4:15",
														"type": ""
													}
												],
												"src": "7926:121:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8133:464:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8166:425:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8180:11:15",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8190:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "8184:2:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8211:2:15"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "8215:5:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8204:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8204:17:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8204:17:15"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8234:31:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8256:2:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8260:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "8246:9:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8246:19:15"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "8238:4:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8278:57:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "8301:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8311:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "8318:10:15"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8330:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8314:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8314:19:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "8307:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8307:27:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8297:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8297:38:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "8282:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "8372:23:15",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "8374:19:15",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "8389:4:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "8374:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "8354:10:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8366:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "8351:2:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8351:20:15"
																		},
																		"nodeType": "YulIf",
																		"src": "8348:47:15"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8408:41:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "8422:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8432:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "8439:3:15"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8444:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8435:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8435:12:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "8428:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8428:20:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8418:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8418:31:15"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "8412:2:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8462:24:15",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "8475:11:15"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "8466:5:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "8560:21:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "8569:5:15"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "8576:2:15"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "8562:6:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8562:17:15"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8562:17:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "8510:5:15"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "8517:2:15"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "8507:2:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8507:13:15"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "8521:26:15",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "8523:22:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "8536:5:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8543:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "8532:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8532:13:15"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "8523:5:15"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "8503:3:15",
																			"statements": []
																		},
																		"src": "8499:82:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "8149:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8154:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8146:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8146:11:15"
															},
															"nodeType": "YulIf",
															"src": "8143:448:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8105:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "8112:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "8117:10:15",
														"type": ""
													}
												],
												"src": "8052:545:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8687:141:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8697:125:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "8712:4:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8730:1:15",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "8733:3:15"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "8726:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8726:11:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8739:66:15",
																								"type": "",
																								"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "8722:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8722:84:15"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "8718:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8718:89:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8708:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8708:100:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8814:1:15",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "8817:3:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8810:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8810:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8705:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8705:117:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "8697:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8664:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "8670:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "8678:4:15",
														"type": ""
													}
												],
												"src": "8602:226:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8929:1375:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8939:24:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8959:3:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8953:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8953:10:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "8943:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9006:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9008:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9008:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9008:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8978:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8986:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8975:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8975:30:15"
															},
															"nodeType": "YulIf",
															"src": "8972:56:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "9081:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "9119:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "9113:5:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9113:11:15"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "9087:25:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9087:38:15"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "9127:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "9037:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9037:97:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9037:97:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9143:18:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9160:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "9147:9:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9170:23:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9189:4:15",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "9174:11:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9202:24:15",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "9215:11:15"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "9202:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9272:775:15",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "9286:94:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "9305:6:15"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9313:66:15",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "9301:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9301:79:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "9290:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "9393:49:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "9437:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "9407:29:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9407:35:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "9397:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "9455:10:15",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9464:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "9459:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "9542:172:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "9567:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "9585:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "9590:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "9581:3:15"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "9581:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "9575:5:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "9575:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "9560:6:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9560:42:15"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "9560:42:15"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "9619:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "9633:6:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9641:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9629:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9629:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "9619:6:15"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "9660:40:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "9677:9:15"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "9688:11:15"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9673:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9673:27:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "9660:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9489:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "9492:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "9486:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9486:14:15"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "9501:28:15",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "9503:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "9512:1:15"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "9515:11:15"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9508:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9508:19:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9503:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "9482:3:15",
																					"statements": []
																				},
																				"src": "9478:236:15"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "9762:226:15",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "9780:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "9807:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "9812:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "9803:3:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "9803:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "9797:5:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9797:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "9784:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "9847:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "9859:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "9886:1:15",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "9889:6:15"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "9882:3:15"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "9882:14:15"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "9898:3:15",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "9878:3:15"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "9878:24:15"
																															},
																															{
																																"kind": "number",
																																"nodeType": "YulLiteral",
																																"src": "9904:66:15",
																																"type": "",
																																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "9874:3:15"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "9874:97:15"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "9870:3:15"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "9870:102:15"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "9855:3:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "9855:118:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "9840:6:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9840:134:15"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "9840:134:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "9733:7:15"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "9742:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "9730:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9730:19:15"
																				},
																				"nodeType": "YulIf",
																				"src": "9727:261:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "10008:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "10022:1:15",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "10025:6:15"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "10018:3:15"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10018:14:15"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10034:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10014:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10014:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "10001:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10001:36:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10001:36:15"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9265:782:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9270:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10064:234:15",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10078:14:15",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10091:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "10082:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10127:67:15",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "10145:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "10164:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "10169:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "10160:3:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10160:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "10154:5:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10154:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "10145:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "10108:6:15"
																				},
																				"nodeType": "YulIf",
																				"src": "10105:89:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "10214:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "10273:5:15"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "10280:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "10220:52:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10220:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "10207:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10207:81:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10207:81:15"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10056:242:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "9245:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9253:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9242:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9242:14:15"
															},
															"nodeType": "YulSwitch",
															"src": "9235:1063:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "8914:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8920:3:15",
														"type": ""
													}
												],
												"src": "8833:1471:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10406:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10416:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10428:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10439:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10424:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10424:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10416:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10458:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10473:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10481:4:15",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10469:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10469:17:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10451:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10451:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10451:36:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10375:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10386:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10397:4:15",
														"type": ""
													}
												],
												"src": "10309:184:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10672:297:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10689:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10700:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10682:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10682:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10682:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10723:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10734:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10719:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10719:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10739:2:15",
																		"type": "",
																		"value": "67"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10712:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10712:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10712:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10762:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10773:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10758:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10758:18:15"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206163636f756e7420776974682044454641554c545f4144",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10778:34:15",
																		"type": "",
																		"value": "Only the account with DEFAULT_AD"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10751:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10751:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10751:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10833:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10844:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10829:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10829:18:15"
																	},
																	{
																		"hexValue": "4d494e5f524f4c452063616e2073657420746865206261736520746f6b656e20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10849:34:15",
																		"type": "",
																		"value": "MIN_ROLE can set the base token "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10822:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10822:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10822:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10904:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10915:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10900:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10900:19:15"
																	},
																	{
																		"hexValue": "555249",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10921:5:15",
																		"type": "",
																		"value": "URI"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10893:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10893:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10893:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10936:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10948:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10959:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10944:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10944:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10936:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f4eb9e3dc144b51037066c2a71acd8f8517949757f6c532ab3f6247c5cd58c9b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10649:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10663:4:15",
														"type": ""
													}
												],
												"src": "10498:471:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11077:1222:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11118:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "11120:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11120:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11120:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "11093:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11098:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11090:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11090:27:15"
															},
															"nodeType": "YulIf",
															"src": "11087:53:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "11193:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "11231:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "11225:5:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11225:11:15"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "11199:25:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11199:38:15"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "11239:3:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "11149:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11149:94:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11149:94:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11252:18:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11269:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "11256:9:15",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11313:728:15",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "11327:91:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "len",
																							"nodeType": "YulIdentifier",
																							"src": "11346:3:15"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11351:66:15",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "11342:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11342:76:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "11331:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "11431:49:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "11475:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "11445:29:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11445:35:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "11435:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "11493:18:15",
																				"value": {
																					"name": "srcOffset",
																					"nodeType": "YulIdentifier",
																					"src": "11502:9:15"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "11497:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "11581:172:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "11606:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "11631:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "11636:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "11627:3:15"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "11627:19:15"
																											}
																										],
																										"functionName": {
																											"name": "calldataload",
																											"nodeType": "YulIdentifier",
																											"src": "11614:12:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "11614:33:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "11599:6:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11599:49:15"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "11599:49:15"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "11665:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "11679:6:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11687:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "11675:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11675:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "11665:6:15"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "11706:33:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "11723:9:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11734:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "11719:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11719:20:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "11706:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11535:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "11538:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "11532:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11532:14:15"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "11547:21:15",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "11549:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "11558:1:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11561:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "11554:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11554:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11549:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "11528:3:15",
																					"statements": []
																				},
																				"src": "11524:229:15"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "11798:187:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "11823:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"name": "src",
																																"nodeType": "YulIdentifier",
																																"src": "11852:3:15"
																															},
																															{
																																"name": "srcOffset",
																																"nodeType": "YulIdentifier",
																																"src": "11857:9:15"
																															}
																														],
																														"functionName": {
																															"name": "add",
																															"nodeType": "YulIdentifier",
																															"src": "11848:3:15"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "11848:19:15"
																													}
																												],
																												"functionName": {
																													"name": "calldataload",
																													"nodeType": "YulIdentifier",
																													"src": "11835:12:15"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "11835:33:15"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "11886:1:15",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "len",
																																				"nodeType": "YulIdentifier",
																																				"src": "11889:3:15"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "11882:3:15"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "11882:11:15"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "11895:3:15",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "11878:3:15"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "11878:21:15"
																															},
																															{
																																"kind": "number",
																																"nodeType": "YulLiteral",
																																"src": "11901:66:15",
																																"type": "",
																																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "11874:3:15"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "11874:94:15"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "11870:3:15"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "11870:99:15"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "11831:3:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "11831:139:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "11816:6:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11816:155:15"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "11816:155:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "11772:7:15"
																						},
																						{
																							"name": "len",
																							"nodeType": "YulIdentifier",
																							"src": "11781:3:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "11769:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11769:16:15"
																				},
																				"nodeType": "YulIf",
																				"src": "11766:219:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "12005:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "12019:1:15",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "len",
																											"nodeType": "YulIdentifier",
																											"src": "12022:3:15"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "12015:3:15"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12015:11:15"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "12028:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12011:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12011:19:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "11998:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11998:33:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11998:33:15"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "11306:735:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11311:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12058:235:15",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12072:14:15",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12085:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "12076:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12118:74:15",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "12136:42:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "12162:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "12167:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "12158:3:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12158:19:15"
																									}
																								],
																								"functionName": {
																									"name": "calldataload",
																									"nodeType": "YulIdentifier",
																									"src": "12145:12:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12145:33:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "12136:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "len",
																					"nodeType": "YulIdentifier",
																					"src": "12102:3:15"
																				},
																				"nodeType": "YulIf",
																				"src": "12099:93:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "12212:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "12271:5:15"
																								},
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "12278:3:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "12218:52:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12218:64:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "12205:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12205:78:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12205:78:15"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "12050:243:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "11289:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11294:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11286:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11286:11:15"
															},
															"nodeType": "YulSwitch",
															"src": "11279:1014:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "11057:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11063:3:15",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "11068:3:15",
														"type": ""
													}
												],
												"src": "10974:1325:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12478:237:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12495:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12506:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12488:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12488:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12488:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12529:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12540:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12525:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12525:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12545:2:15",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12518:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12518:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12518:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12568:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12579:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12564:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12564:18:15"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12584:34:15",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12557:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12557:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12557:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12639:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12650:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12635:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12635:18:15"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12655:17:15",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12628:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12628:45:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12628:45:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12682:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12694:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12705:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12690:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12690:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12682:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12455:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12469:4:15",
														"type": ""
													}
												],
												"src": "12304:411:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12894:223:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12911:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12922:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12904:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12904:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12904:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12945:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12956:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12941:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12941:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12961:2:15",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12934:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12934:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12934:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12984:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12995:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12980:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12980:18:15"
																	},
																	{
																		"hexValue": "546865206163636f756e7420646f6573206e6f74206861766520616e79205342",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13000:34:15",
																		"type": "",
																		"value": "The account does not have any SB"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12973:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12973:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12973:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13055:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13066:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13051:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13051:18:15"
																	},
																	{
																		"hexValue": "54",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13071:3:15",
																		"type": "",
																		"value": "T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13044:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13044:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13044:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13084:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13096:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13107:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13092:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13092:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13084:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba976e6fdb37df9d22aca8365aa6504579d68ccdeedadad948053f8707d0cf04__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12871:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12885:4:15",
														"type": ""
													}
												],
												"src": "12720:397:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13296:244:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13313:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13324:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13306:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13306:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13306:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13347:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13358:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13343:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13343:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13363:2:15",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13336:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13336:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13336:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13386:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13397:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13382:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13382:18:15"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206163636f756e742077697468204f50455241544f525f52",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13402:34:15",
																		"type": "",
																		"value": "Only the account with OPERATOR_R"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13375:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13375:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13375:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13457:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13468:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13453:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13453:18:15"
																	},
																	{
																		"hexValue": "4f4c452063616e206174746573742074686520534254",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13473:24:15",
																		"type": "",
																		"value": "OLE can attest the SBT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13446:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13446:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13446:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13507:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13519:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13530:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13515:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13515:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13507:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13273:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13287:4:15",
														"type": ""
													}
												],
												"src": "13122:418:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13719:166:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13736:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13747:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13729:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13729:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13729:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13770:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13781:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13766:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13766:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13786:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13759:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13759:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13759:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13809:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13820:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13805:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13805:18:15"
																	},
																	{
																		"hexValue": "4164647265737320697320656d707479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13825:18:15",
																		"type": "",
																		"value": "Address is empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13798:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13798:46:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13798:46:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13853:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13865:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13876:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13861:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13861:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13853:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13696:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13710:4:15",
														"type": ""
													}
												],
												"src": "13545:340:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14074:894:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14084:12:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14095:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "14088:3:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14105:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14128:6:15"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "14122:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14122:13:15"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "14109:9:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14144:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "14184:9:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "14158:25:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14158:36:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14148:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14203:11:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14213:1:15",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14207:2:15",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14264:184:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "14285:3:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "14294:9:15"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "14305:66:15",
																									"type": "",
																									"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "14290:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14290:82:15"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "14278:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14278:95:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "14278:95:15"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "14386:52:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "14397:3:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "14406:6:15"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nodeType": "YulIdentifier",
																													"src": "14428:6:15"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nodeType": "YulIdentifier",
																												"src": "14421:6:15"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14421:14:15"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "14414:6:15"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "14414:22:15"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "14402:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14402:35:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14393:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14393:45:15"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "14386:3:15"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "14257:191:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14262:1:15",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14464:349:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14485:1:15",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "value0",
																							"nodeType": "YulIdentifier",
																							"src": "14488:6:15"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "14478:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14478:17:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "14478:17:15"
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "14508:14:15",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14518:4:15",
																					"type": "",
																					"value": "0x20"
																				},
																				"variables": [
																					{
																						"name": "_2",
																						"nodeType": "YulTypedName",
																						"src": "14512:2:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "14535:31:15",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14560:1:15",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "14563:2:15"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "14550:9:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14550:16:15"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "14539:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "14579:10:15",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14588:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "14583:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "14656:111:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "14685:3:15"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "14690:1:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "14681:3:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "14681:11:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "14700:7:15"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "14694:5:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "14694:14:15"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "14674:6:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14674:35:15"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "14674:35:15"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "14726:27:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "14741:7:15"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "14750:2:15"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "14737:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14737:16:15"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "14726:7:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14613:1:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "14616:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "14610:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14610:13:15"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "14624:19:15",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "14626:15:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "14635:1:15"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "14638:2:15"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "14631:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14631:10:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14626:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "14606:3:15",
																					"statements": []
																				},
																				"src": "14602:165:15"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "14780:23:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "14791:3:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "14796:6:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14787:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14787:16:15"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "14780:3:15"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "14457:356:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14462:1:15",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "14234:9:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "14245:2:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14230:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14230:18:15"
															},
															"nodeType": "YulSwitch",
															"src": "14223:590:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14822:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14844:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14838:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14838:13:15"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "14826:8:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14899:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14907:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14895:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14895:17:15"
																	},
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "14914:3:15"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "14919:8:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14860:34:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14860:68:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14860:68:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14937:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "14948:3:15"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "14953:8:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14944:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14944:18:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14937:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14042:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14047:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14055:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14066:3:15",
														"type": ""
													}
												],
												"src": "13890:1078:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15147:168:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15164:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15175:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15157:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15157:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15157:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15198:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15209:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15194:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15194:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15214:2:15",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15187:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15187:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15187:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15237:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15248:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15233:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15233:18:15"
																	},
																	{
																		"hexValue": "53425420616c726561647920657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15253:20:15",
																		"type": "",
																		"value": "SBT already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15226:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15226:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15226:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15283:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15295:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15306:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15291:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15291:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15283:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e1890e5e17f8d1eac9ad6ed4b4250d8d69c12776e6f7ccfc0207787be0fef1e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15124:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15138:4:15",
														"type": ""
													}
												],
												"src": "14973:342:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15367:148:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15458:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15460:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15460:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15460:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15383:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15390:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15380:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15380:77:15"
															},
															"nodeType": "YulIf",
															"src": "15377:103:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15489:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15500:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15507:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15496:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15496:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15489:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15349:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15359:3:15",
														"type": ""
													}
												],
												"src": "15320:195:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15552:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15569:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15572:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15562:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15562:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15562:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15666:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15669:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15659:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15659:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15659:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15690:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15693:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15683:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15683:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15683:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "15520:184:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15755:74:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15778:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15780:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15780:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15780:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15775:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15768:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15768:9:15"
															},
															"nodeType": "YulIf",
															"src": "15765:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15809:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15818:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15821:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15814:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15814:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15809:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15740:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15743:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15749:1:15",
														"type": ""
													}
												],
												"src": "15709:120:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15883:79:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15893:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15905:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15908:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15901:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15901:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15893:4:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15934:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15936:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15936:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15936:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "15925:4:15"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15931:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15922:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15922:11:15"
															},
															"nodeType": "YulIf",
															"src": "15919:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15865:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15868:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15874:4:15",
														"type": ""
													}
												],
												"src": "15834:128:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16005:74:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16028:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "16030:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16030:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16030:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16025:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16018:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16018:9:15"
															},
															"nodeType": "YulIf",
															"src": "16015:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16059:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16068:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16071:1:15"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "16064:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16064:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "16059:1:15"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15990:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15993:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15999:1:15",
														"type": ""
													}
												],
												"src": "15967:112:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16132:77:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16142:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16153:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16156:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16149:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16149:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "16142:3:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16181:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16183:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16183:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16183:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16173:1:15"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "16176:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16170:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16170:10:15"
															},
															"nodeType": "YulIf",
															"src": "16167:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16115:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16118:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "16124:3:15",
														"type": ""
													}
												],
												"src": "16084:125:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16388:180:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16405:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16416:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16398:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16398:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16398:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16439:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16450:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16435:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16435:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16455:2:15",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16428:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16428:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16428:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16478:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16489:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16474:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16474:18:15"
																	},
																	{
																		"hexValue": "456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16494:32:15",
																		"type": "",
																		"value": "EnumerableMap: nonexistent key"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16467:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16467:60:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16467:60:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16536:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16548:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16559:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16544:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16544:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16536:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16365:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16379:4:15",
														"type": ""
													}
												],
												"src": "16214:354:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16962:423:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16979:3:15"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16984:25:15",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16972:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16972:38:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16972:38:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17019:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17039:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17033:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17033:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "17023:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17094:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17102:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17090:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17090:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "17113:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17118:2:15",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17109:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17109:12:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17123:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "17055:34:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17055:75:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17055:75:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17139:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17153:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17158:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17149:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17149:16:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "17143:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17185:2:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17189:2:15",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17181:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17181:11:15"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17194:19:15",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17174:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17174:40:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17174:40:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17223:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17245:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17239:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17239:13:15"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "17227:8:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "17300:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17308:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17296:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17296:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17319:2:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17323:2:15",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17315:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17315:11:15"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "17328:8:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "17261:34:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17261:76:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17261:76:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17346:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17361:2:15"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "17365:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17357:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17357:17:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17376:2:15",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17353:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17353:26:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17346:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16930:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16935:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16943:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16954:3:15",
														"type": ""
													}
												],
												"src": "16573:812:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17442:116:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17452:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17467:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17470:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17463:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17463:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "17452:7:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17530:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17532:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17532:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17532:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17501:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "17494:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17494:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "17508:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "17515:7:15"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "17524:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "17511:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17511:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "17505:2:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17505:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "17491:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17491:37:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17484:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17484:45:15"
															},
															"nodeType": "YulIf",
															"src": "17481:71:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17421:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17424:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "17430:7:15",
														"type": ""
													}
												],
												"src": "17390:168:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17610:149:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17637:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17639:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17639:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17639:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17630:5:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17623:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17623:13:15"
															},
															"nodeType": "YulIf",
															"src": "17620:39:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17668:85:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17679:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17686:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17675:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17675:78:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17668:3:15"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17592:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17602:3:15",
														"type": ""
													}
												],
												"src": "17563:196:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17938:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17955:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17966:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17948:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17948:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17948:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17989:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18000:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17985:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17985:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18005:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17978:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17978:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17978:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18028:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18039:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18024:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18024:18:15"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18044:34:15",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18017:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18017:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18017:62:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18088:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18100:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18111:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18096:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18096:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18088:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17915:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17929:4:15",
														"type": ""
													}
												],
												"src": "17764:356:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18157:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18174:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18177:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18167:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18167:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18167:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18271:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18274:4:15",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18264:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18264:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18264:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18295:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18298:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18288:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18288:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18288:15:15"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "18125:184:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_6c1d2016a5c744a68c42f66619089ea6bcfaa0789449adc1f08ff1a38412eb69__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Only the account with OPERATOR_R\")\n        mstore(add(headStart, 96), \"OLE can revoke the SBT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dd4411c84af8ba2f0686b60d9927be2dc3a376a30aeab1950fb7c93ad2f83e9f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"The max length of addresses is 1\")\n        mstore(add(headStart, 96), \"00\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_f4eb9e3dc144b51037066c2a71acd8f8517949757f6c532ab3f6247c5cd58c9b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"Only the account with DEFAULT_AD\")\n        mstore(add(headStart, 96), \"MIN_ROLE can set the base token \")\n        mstore(add(headStart, 128), \"URI\")\n        tail := add(headStart, 160)\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ba976e6fdb37df9d22aca8365aa6504579d68ccdeedadad948053f8707d0cf04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"The account does not have any SB\")\n        mstore(add(headStart, 96), \"T\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Only the account with OPERATOR_R\")\n        mstore(add(headStart, 96), \"OLE can attest the SBT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Address is empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), ret, length_1)\n        end := add(ret, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_2e1890e5e17f8d1eac9ad6ed4b4250d8d69c12776e6f7ccfc0207787be0fef1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"SBT already exists\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"EnumerableMap: nonexistent key\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101985760003560e01c80636c60144a116100e357806395d89b411161008c578063d547741f11610066578063d547741f14610390578063eb31403f146103a3578063f5b541a6146103b657600080fd5b806395d89b411461036d578063a217fddf14610375578063c87b56dd1461037d57600080fd5b806374a8f103116100bd57806374a8f10314610301578063773c02d41461031457806391d148541461032757600080fd5b80636c60144a146102c85780636d70f7ae146102db57806370a08231146102ee57600080fd5b806324d7806c1161014557806336568abe1161011f57806336568abe1461027557806344df8e70146102885780636352211e1461029057600080fd5b806324d7806c1461023c5780632f2ff15d1461024f57806330176e131461026257600080fd5b8063077f224a11610176578063077f224a146101ef57806318160ddd14610202578063248a9ca31461021857600080fd5b8063011002df1461019d57806301ffc9a7146101b257806306fdde03146101da575b600080fd5b6101b06101ab366004612050565b6103dd565b005b6101c56101c03660046120c5565b61066f565b60405190151581526020015b60405180910390f35b6101e2610717565b6040516101d1919061212b565b6101b06101fd36600461227f565b6107a5565b61020a610937565b6040519081526020016101d1565b61020a6102263660046122f3565b6000908152600160208190526040909120015490565b6101c561024a36600461230c565b610948565b6101b061025d366004612327565b610995565b6101b0610270366004612353565b6109c0565b6101b0610283366004612327565b610ab1565b6101b0610b64565b6102a361029e3660046122f3565b610caf565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d1565b6101b06102d6366004612050565b610cfc565b6101c56102e936600461230c565b610f8f565b61020a6102fc36600461230c565b610fdc565b6101b061030f36600461230c565b611006565b61020a61032236600461230c565b61128b565b6101c5610335366004612327565b600091825260016020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b6101e26112b3565b61020a600081565b6101e261038b3660046122f3565b6112c0565b6101b061039e366004612327565b61131e565b61020a6103b136600461230c565b611344565b61020a7f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92981565b3360009081527f31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c26020526040902054819060ff166104a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4f6e6c7920746865206163636f756e742077697468204f50455241544f525f5260448201527f4f4c452063616e207265766f6b6520746865205342540000000000000000000060648201526084015b60405180910390fd5b6064811115610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f546865206d6178206c656e677468206f6620616464726573736573206973203160448201527f30300000000000000000000000000000000000000000000000000000000000006064820152608401610499565b60005b818160ff16101561066957600084848360ff16818110610558576105586123b3565b905060200201602081019061056d919061230c565b905073ffffffffffffffffffffffffffffffffffffffff8116158061059a57506105986005826115b4565b155b156105a55750610657565b60006105b26005836115dd565b90506105bf6005836115ff565b506105cb600282611621565b50604051819073ffffffffffffffffffffffffffffffffffffffff8416907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a3604051819060009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a450505b8061066181612411565b915050610536565b50505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061070257507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061071157506107118261162d565b92915050565b6009805461072490612430565b80601f016020809104026020016040519081016040528092919081815260200182805461075090612430565b801561079d5780601f106107725761010080835404028352916020019161079d565b820191906000526020600020905b81548152906001019060200180831161078057829003601f168201915b505050505081565b600054600190610100900460ff161580156107c7575060005460ff8083169116105b610853576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610499565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001660ff831617610100179055600961089085826124d1565b50600a61089d84826124d1565b506108a96000836116c4565b6108d37f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929836116c4565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b60006109436005611783565b905090565b73ffffffffffffffffffffffffffffffffffffffff811660009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604081205460ff16610711565b600082815260016020819052604090912001546109b18161178e565b6109bb83836116c4565b505050565b3360009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604090205460ff16610aa4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f4f6e6c7920746865206163636f756e7420776974682044454641554c545f414460448201527f4d494e5f524f4c452063616e2073657420746865206261736520746f6b656e2060648201527f5552490000000000000000000000000000000000000000000000000000000000608482015260a401610499565b600b6109bb8284836125eb565b73ffffffffffffffffffffffffffffffffffffffff81163314610b56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610499565b610b60828261179b565b5050565b33610b706005826115b4565b610bfc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f546865206163636f756e7420646f6573206e6f74206861766520616e7920534260448201527f54000000000000000000000000000000000000000000000000000000000000006064820152608401610499565b6000610c096005836115dd565b9050610c166005836115ff565b50610c22600282611621565b50604051819073ffffffffffffffffffffffffffffffffffffffff8416907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca590600090a3604051819060009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000610711826040518060400160405280600f81526020017f496e76616c696420746f6b656e4964000000000000000000000000000000000081525060026118569092919063ffffffff16565b3360009081527f31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c26020526040902054819060ff16610dbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4f6e6c7920746865206163636f756e742077697468204f50455241544f525f5260448201527f4f4c452063616e206174746573742074686520534254000000000000000000006064820152608401610499565b6064811115610e4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f546865206d6178206c656e677468206f6620616464726573736573206973203160448201527f30300000000000000000000000000000000000000000000000000000000000006064820152608401610499565b60005b818160ff16101561066957600084848360ff16818110610e7257610e726123b3565b9050602002016020810190610e87919061230c565b905073ffffffffffffffffffffffffffffffffffffffff81161580610eb25750610eb26005826115b4565b15610ebd5750610f7d565b610ecb600880546001019055565b6000610ed660085490565b9050610ee46005838361186b565b50610ef16002828461188e565b50604051819073ffffffffffffffffffffffffffffffffffffffff8416907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3604051819073ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a450505b80610f8781612411565b915050610e50565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c2602052604081205460ff16610711565b600080610fea6005846118b1565b50905080610ff9576000610ffc565b60015b60ff169392505050565b3360009081527f31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c2602052604090205460ff166110c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4f6e6c7920746865206163636f756e742077697468204f50455241544f525f5260448201527f4f4c452063616e207265766f6b652074686520534254000000000000000000006064820152608401610499565b73ffffffffffffffffffffffffffffffffffffffff8116611141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4164647265737320697320656d707479000000000000000000000000000000006044820152606401610499565b61114c6005826115b4565b6111d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f546865206163636f756e7420646f6573206e6f74206861766520616e7920534260448201527f54000000000000000000000000000000000000000000000000000000000000006064820152608401610499565b60006111e56005836115dd565b90506111f26005836115ff565b506111fe600282611621565b50604051819073ffffffffffffffffffffffffffffffffffffffff8416907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a3604051819060009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006107118260405180606001604052806023815260200161295d60239139600591906118e5565b600a805461072490612430565b60606000600b80546112d190612430565b9050116112ed5760405180602001604052806000815250610711565b600b6112f883611908565b604051602001611309929190612706565b60405160208183030381529060405292915050565b6000828152600160208190526040909120015461133a8161178e565b6109bb838361179b565b3360009081527f31c1e66639f421f1853aeefe8ad6b62a3b96f3287efe23106923cd924aa025c2602052604081205460ff16611402576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4f6e6c7920746865206163636f756e742077697468204f50455241544f525f5260448201527f4f4c452063616e206174746573742074686520534254000000000000000000006064820152608401610499565b73ffffffffffffffffffffffffffffffffffffffff821661147f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4164647265737320697320656d707479000000000000000000000000000000006044820152606401610499565b61148a6005836115b4565b156114f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f53425420616c72656164792065786973747300000000000000000000000000006044820152606401610499565b6114ff600880546001019055565b600061150a60085490565b90506115186005848361186b565b506115256002828561188e565b50604051819073ffffffffffffffffffffffffffffffffffffffff8516907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3604051819073ffffffffffffffffffffffffffffffffffffffff8516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a492915050565b60006115d68373ffffffffffffffffffffffffffffffffffffffff8416611a3d565b9392505050565b60006115d68373ffffffffffffffffffffffffffffffffffffffff8416611a49565b60006115d68373ffffffffffffffffffffffffffffffffffffffff8416611ad3565b60006115d68383611ad3565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061071157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610711565b600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610b6057600082815260016020818152604080842073ffffffffffffffffffffffffffffffffffffffff8616808652925280842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600061071182611af0565b6117988133611afb565b50565b600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1615610b6057600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611863848484611bb5565b949350505050565b60006118638473ffffffffffffffffffffffffffffffffffffffff851684611c1b565b6000611863848473ffffffffffffffffffffffffffffffffffffffff8516611c1b565b60008080806118d68673ffffffffffffffffffffffffffffffffffffffff8716611c38565b909450925050505b9250929050565b60006118638473ffffffffffffffffffffffffffffffffffffffff851684611bb5565b60608160000361194b57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611975578061195f816127ab565b915061196e9050600a83612812565b915061194f565b60008167ffffffffffffffff8111156119905761199061217c565b6040519080825280601f01601f1916602001820160405280156119ba576020820181803683370190505b5090505b8415611863576119cf600183612826565b91506119dc600a86612839565b6119e790603061284d565b60f81b8183815181106119fc576119fc6123b3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611a36600a86612812565b94506119be565b60006115d68383611c72565b600081815260028301602052604081205480151580611a6d5750611a6d8484611a3d565b6115d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b657900006044820152606401610499565b600081815260028301602052604081208190556115d68383611c8a565b600061071182611c96565b600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610b6057611b3b81611ca0565b611b46836020611cbf565b604051602001611b57929190612860565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526104999160040161212b565b600082815260028401602052604081205480151580611bd95750611bd98585611a3d565b8390611c12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610499919061212b565b50949350505050565b600082815260028401602052604081208290556118638484611f02565b6000818152600283016020526040812054819080611c6757611c5a8585611a3d565b9250600091506118de9050565b6001925090506118de565b600081815260018301602052604081205415156115d6565b60006115d68383611f0e565b6000610711825490565b606061071173ffffffffffffffffffffffffffffffffffffffff831660145b60606000611cce8360026128e1565b611cd990600261284d565b67ffffffffffffffff811115611cf157611cf161217c565b6040519080825280601f01601f191660200182016040528015611d1b576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611d5257611d526123b3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611db557611db56123b3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000611df18460026128e1565b611dfc90600161284d565b90505b6001811115611e99577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611e3d57611e3d6123b3565b1a60f81b828281518110611e5357611e536123b3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93611e92816128f8565b9050611dff565b5083156115d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610499565b60006115d68383612001565b60008181526001830160205260408120548015611ff7576000611f32600183612826565b8554909150600090611f4690600190612826565b9050818114611fab576000866000018281548110611f6657611f666123b3565b9060005260206000200154905080876000018481548110611f8957611f896123b3565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611fbc57611fbc61292d565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610711565b6000915050610711565b600081815260018301602052604081205461204857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610711565b506000610711565b6000806020838503121561206357600080fd5b823567ffffffffffffffff8082111561207b57600080fd5b818501915085601f83011261208f57600080fd5b81358181111561209e57600080fd5b8660208260051b85010111156120b357600080fd5b60209290920196919550909350505050565b6000602082840312156120d757600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146115d657600080fd5b60005b8381101561212257818101518382015260200161210a565b50506000910152565b602081526000825180602084015261214a816040850160208701612107565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126121bc57600080fd5b813567ffffffffffffffff808211156121d7576121d761217c565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561221d5761221d61217c565b8160405283815286602085880101111561223657600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461227a57600080fd5b919050565b60008060006060848603121561229457600080fd5b833567ffffffffffffffff808211156122ac57600080fd5b6122b8878388016121ab565b945060208601359150808211156122ce57600080fd5b506122db868287016121ab565b9250506122ea60408501612256565b90509250925092565b60006020828403121561230557600080fd5b5035919050565b60006020828403121561231e57600080fd5b6115d682612256565b6000806040838503121561233a57600080fd5b8235915061234a60208401612256565b90509250929050565b6000806020838503121561236657600080fd5b823567ffffffffffffffff8082111561237e57600080fd5b818501915085601f83011261239257600080fd5b8135818111156123a157600080fd5b8660208285010111156120b357600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff8103612427576124276123e2565b60010192915050565b600181811c9082168061244457607f821691505b60208210810361247d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f8211156109bb57600081815260208120601f850160051c810160208610156124aa5750805b601f850160051c820191505b818110156124c9578281556001016124b6565b505050505050565b815167ffffffffffffffff8111156124eb576124eb61217c565b6124ff816124f98454612430565b84612483565b602080601f831160018114612552576000841561251c5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556124c9565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561259f57888601518255948401946001909101908401612580565b50858210156125db57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b67ffffffffffffffff8311156126035761260361217c565b612617836126118354612430565b83612483565b6000601f84116001811461266957600085156126335750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b1783556126ff565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156126b85786850135825560209485019460019092019101612698565b50868210156126f3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b600080845461271481612430565b6001828116801561272c576001811461275f5761278e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008416875282151583028701945061278e565b8860005260208060002060005b858110156127855781548a82015290840190820161276c565b50505082870194505b5050505083516127a2818360208801612107565b01949350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036127dc576127dc6123e2565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612821576128216127e3565b500490565b81810381811115610711576107116123e2565b600082612848576128486127e3565b500690565b80820180821115610711576107116123e2565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612898816017850160208801612107565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516128d5816028840160208801612107565b01602801949350505050565b8082028115828204841417610711576107116123e2565b600081612907576129076123e2565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfe5468652077616c6c657420686173206e6f7420617474657374656420616e7920534254a26469706673582212209803db7c50cf1f1bd7ac059977cdf85bb3ef3f59b35c3b4491161959f80cd43864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x198 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C60144A GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xEB31403F EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xF5B541A6 EQ PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x74A8F103 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x74A8F103 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x773C02D4 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C60144A EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x6D70F7AE EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24D7806C GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24D7806C EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x30176E13 EQ PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x77F224A GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x77F224A EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11002DF EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B0 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C5 PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0x227F JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x230C JUMP JUMPDEST PUSH2 0x948 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x2327 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x2353 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x2327 JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x230C JUMP JUMPDEST PUSH2 0xF8F JUMP JUMPDEST PUSH2 0x20A PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x230C JUMP JUMPDEST PUSH2 0xFDC JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x230C JUMP JUMPDEST PUSH2 0x1006 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x230C JUMP JUMPDEST PUSH2 0x128B JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x20A PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x2327 JUMP JUMPDEST PUSH2 0x131E JUMP JUMPDEST PUSH2 0x20A PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x230C JUMP JUMPDEST PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x20A PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0x4A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4F4C452063616E207265766F6B65207468652053425400000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206D6178206C656E677468206F66206164647265737365732069732031 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x558 JUMPI PUSH2 0x558 PUSH2 0x23B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x230C JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 PUSH2 0x59A JUMPI POP PUSH2 0x598 PUSH1 0x5 DUP3 PUSH2 0x15B4 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x5A5 JUMPI POP PUSH2 0x657 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH1 0x5 DUP4 PUSH2 0x15DD JUMP JUMPDEST SWAP1 POP PUSH2 0x5BF PUSH1 0x5 DUP4 PUSH2 0x15FF JUMP JUMPDEST POP PUSH2 0x5CB PUSH1 0x2 DUP3 PUSH2 0x1621 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMPDEST DUP1 PUSH2 0x661 DUP2 PUSH2 0x2411 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x536 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x702 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x711 JUMPI POP PUSH2 0x711 DUP3 PUSH2 0x162D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x724 SWAP1 PUSH2 0x2430 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x750 SWAP1 PUSH2 0x2430 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x772 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x780 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x7C7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP2 AND LT JUMPDEST PUSH2 0x853 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 AND PUSH1 0xFF DUP4 AND OR PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x9 PUSH2 0x890 DUP6 DUP3 PUSH2 0x24D1 JUMP JUMPDEST POP PUSH1 0xA PUSH2 0x89D DUP5 DUP3 PUSH2 0x24D1 JUMP JUMPDEST POP PUSH2 0x8A9 PUSH1 0x0 DUP4 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x8D3 PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP4 PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0xFF DUP3 AND DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x943 PUSH1 0x5 PUSH2 0x1783 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x9B1 DUP2 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x9BB DUP4 DUP4 PUSH2 0x16C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E7420776974682044454641554C545F4144 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4D494E5F524F4C452063616E2073657420746865206261736520746F6B656E20 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x5552490000000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0xB PUSH2 0x9BB DUP3 DUP5 DUP4 PUSH2 0x25EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND CALLER EQ PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH2 0xB60 DUP3 DUP3 PUSH2 0x179B JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH2 0xB70 PUSH1 0x5 DUP3 PUSH2 0x15B4 JUMP JUMPDEST PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206163636F756E7420646F6573206E6F74206861766520616E79205342 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC09 PUSH1 0x5 DUP4 PUSH2 0x15DD JUMP JUMPDEST SWAP1 POP PUSH2 0xC16 PUSH1 0x5 DUP4 PUSH2 0x15FF JUMP JUMPDEST POP PUSH2 0xC22 PUSH1 0x2 DUP3 PUSH2 0x1621 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x711 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420746F6B656E49640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 PUSH2 0x1856 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0xDBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4F4C452063616E20617474657374207468652053425400000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0xE4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206D6178206C656E677468206F66206164647265737365732069732031 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0xE72 JUMPI PUSH2 0xE72 PUSH2 0x23B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x230C JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 PUSH2 0xEB2 JUMPI POP PUSH2 0xEB2 PUSH1 0x5 DUP3 PUSH2 0x15B4 JUMP JUMPDEST ISZERO PUSH2 0xEBD JUMPI POP PUSH2 0xF7D JUMP JUMPDEST PUSH2 0xECB PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED6 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xEE4 PUSH1 0x5 DUP4 DUP4 PUSH2 0x186B JUMP JUMPDEST POP PUSH2 0xEF1 PUSH1 0x2 DUP3 DUP5 PUSH2 0x188E JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMPDEST DUP1 PUSH2 0xF87 DUP2 PUSH2 0x2411 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE50 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFEA PUSH1 0x5 DUP5 PUSH2 0x18B1 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0xFF9 JUMPI PUSH1 0x0 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4F4C452063616E207265766F6B65207468652053425400000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1141 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320697320656D70747900000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST PUSH2 0x114C PUSH1 0x5 DUP3 PUSH2 0x15B4 JUMP JUMPDEST PUSH2 0x11D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206163636F756E7420646F6573206E6F74206861766520616E79205342 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E5 PUSH1 0x5 DUP4 PUSH2 0x15DD JUMP JUMPDEST SWAP1 POP PUSH2 0x11F2 PUSH1 0x5 DUP4 PUSH2 0x15FF JUMP JUMPDEST POP PUSH2 0x11FE PUSH1 0x2 DUP3 PUSH2 0x1621 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x711 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x295D PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x5 SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x724 SWAP1 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xB DUP1 SLOAD PUSH2 0x12D1 SWAP1 PUSH2 0x2430 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x12ED JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x711 JUMP JUMPDEST PUSH1 0xB PUSH2 0x12F8 DUP4 PUSH2 0x1908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1309 SWAP3 SWAP2 SWAP1 PUSH2 0x2706 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x133A DUP2 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x9BB DUP4 DUP4 PUSH2 0x179B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4F4C452063616E20617474657374207468652053425400000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x499 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x147F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320697320656D70747900000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST PUSH2 0x148A PUSH1 0x5 DUP4 PUSH2 0x15B4 JUMP JUMPDEST ISZERO PUSH2 0x14F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53425420616C7265616479206578697374730000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST PUSH2 0x14FF PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150A PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1518 PUSH1 0x5 DUP5 DUP4 PUSH2 0x186B JUMP JUMPDEST POP PUSH2 0x1525 PUSH1 0x2 DUP3 DUP6 PUSH2 0x188E JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x1A3D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP4 DUP4 PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x711 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB60 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP1 DUP7 MSTORE SWAP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x711 DUP3 PUSH2 0x1AF0 JUMP JUMPDEST PUSH2 0x1798 DUP2 CALLER PUSH2 0x1AFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB60 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 DUP5 DUP5 DUP5 PUSH2 0x1BB5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 DUP5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x18D6 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x1C38 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x194B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1975 JUMPI DUP1 PUSH2 0x195F DUP2 PUSH2 0x27AB JUMP JUMPDEST SWAP2 POP PUSH2 0x196E SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2812 JUMP JUMPDEST SWAP2 POP PUSH2 0x194F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1990 JUMPI PUSH2 0x1990 PUSH2 0x217C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19BA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x1863 JUMPI PUSH2 0x19CF PUSH1 0x1 DUP4 PUSH2 0x2826 JUMP JUMPDEST SWAP2 POP PUSH2 0x19DC PUSH1 0xA DUP7 PUSH2 0x2839 JUMP JUMPDEST PUSH2 0x19E7 SWAP1 PUSH1 0x30 PUSH2 0x284D JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x19FC JUMPI PUSH2 0x19FC PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1A36 PUSH1 0xA DUP7 PUSH2 0x2812 JUMP JUMPDEST SWAP5 POP PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP4 DUP4 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x1A6D JUMPI POP PUSH2 0x1A6D DUP5 DUP5 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x15D6 DUP4 DUP4 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x711 DUP3 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB60 JUMPI PUSH2 0x1B3B DUP2 PUSH2 0x1CA0 JUMP JUMPDEST PUSH2 0x1B46 DUP4 PUSH1 0x20 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B57 SWAP3 SWAP2 SWAP1 PUSH2 0x2860 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH2 0x499 SWAP2 PUSH1 0x4 ADD PUSH2 0x212B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x1BD9 JUMPI POP PUSH2 0x1BD9 DUP6 DUP6 PUSH2 0x1A3D JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x1C12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x1863 DUP5 DUP5 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP1 PUSH2 0x1C67 JUMPI PUSH2 0x1C5A DUP6 DUP6 PUSH2 0x1A3D JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x18DE SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP4 DUP4 PUSH2 0x1F0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x711 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x711 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1CCE DUP4 PUSH1 0x2 PUSH2 0x28E1 JUMP JUMPDEST PUSH2 0x1CD9 SWAP1 PUSH1 0x2 PUSH2 0x284D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CF1 JUMPI PUSH2 0x1CF1 PUSH2 0x217C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D1B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1D52 JUMPI PUSH2 0x1D52 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1DB5 JUMPI PUSH2 0x1DB5 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1DF1 DUP5 PUSH1 0x2 PUSH2 0x28E1 JUMP JUMPDEST PUSH2 0x1DFC SWAP1 PUSH1 0x1 PUSH2 0x284D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E99 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1E3D JUMPI PUSH2 0x1E3D PUSH2 0x23B3 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E53 JUMPI PUSH2 0x1E53 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1E92 DUP2 PUSH2 0x28F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DFF JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x499 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP4 DUP4 PUSH2 0x2001 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1FF7 JUMPI PUSH1 0x0 PUSH2 0x1F32 PUSH1 0x1 DUP4 PUSH2 0x2826 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1F46 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2826 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1FAB JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F66 JUMPI PUSH2 0x1F66 PUSH2 0x23B3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1F89 JUMPI PUSH2 0x1F89 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1FBC JUMPI PUSH2 0x1FBC PUSH2 0x292D JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2048 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x711 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x207B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x208F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x209E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x15D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2122 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x210A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x214A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x21D7 JUMPI PUSH2 0x21D7 PUSH2 0x217C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x221D JUMPI PUSH2 0x221D PUSH2 0x217C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x227A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x22AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22B8 DUP8 DUP4 DUP9 ADD PUSH2 0x21AB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x22CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22DB DUP7 DUP3 DUP8 ADD PUSH2 0x21AB JUMP JUMPDEST SWAP3 POP POP PUSH2 0x22EA PUSH1 0x40 DUP6 ADD PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x231E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15D6 DUP3 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x233A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x234A PUSH1 0x20 DUP5 ADD PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x237E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x23A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x2427 JUMPI PUSH2 0x2427 PUSH2 0x23E2 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2444 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x247D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9BB JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x24AA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24C9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x24B6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24EB JUMPI PUSH2 0x24EB PUSH2 0x217C JUMP JUMPDEST PUSH2 0x24FF DUP2 PUSH2 0x24F9 DUP5 SLOAD PUSH2 0x2430 JUMP JUMPDEST DUP5 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2552 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x251C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x259F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2580 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x25DB JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2603 JUMPI PUSH2 0x2603 PUSH2 0x217C JUMP JUMPDEST PUSH2 0x2617 DUP4 PUSH2 0x2611 DUP4 SLOAD PUSH2 0x2430 JUMP JUMPDEST DUP4 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2669 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x2633 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x26B8 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2698 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x26F3 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x2714 DUP2 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x272C JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x275F JUMPI PUSH2 0x278E JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x278E JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2785 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x276C JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x27A2 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2107 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x27DC JUMPI PUSH2 0x27DC PUSH2 0x23E2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2821 JUMPI PUSH2 0x2821 PUSH2 0x27E3 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x711 JUMPI PUSH2 0x711 PUSH2 0x23E2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2848 JUMPI PUSH2 0x2848 PUSH2 0x27E3 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x711 JUMPI PUSH2 0x711 PUSH2 0x23E2 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2898 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2107 JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x28D5 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2107 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x711 JUMPI PUSH2 0x711 PUSH2 0x23E2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2907 JUMPI PUSH2 0x2907 PUSH2 0x23E2 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID SLOAD PUSH9 0x652077616C6C657420 PUSH9 0x6173206E6F74206174 PUSH21 0x657374656420616E7920534254A264697066735822 SLT KECCAK256 SWAP9 SUB 0xDB PUSH29 0x50CF1F1BD7AC059977CDF85BB3EF3F59B35C3B4491161959F80CD43864 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "628:6070:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3716:756;;;;;;:::i;:::-;;:::i;:::-;;6369:327;;;;;;:::i;:::-;;:::i;:::-;;;1136:14:15;;1129:22;1111:41;;1099:2;1084:18;6369:327:0;;;;;;;;1127:18;;;:::i;:::-;;;;;;;:::i;1453:337::-;;;;;;:::i;:::-;;:::i;5644:97::-;;;:::i;:::-;;;3819:25:15;;;3807:2;3792:18;5644:97:0;3673:177:15;4374:129:1;;;;;;:::i;:::-;4448:7;4474:12;;;:6;:12;;;;;;;;:22;;;4374:129;5874:123:0;;;;;;:::i;:::-;;:::i;4799:145:1:-;;;;;;:::i;:::-;;:::i;4930:255:0:-;;;;;;:::i;:::-;;:::i;5908:214:1:-;;;;;;:::i;:::-;;:::i;4478:397:0:-;;;:::i;5507:131::-;;;;;;:::i;:::-;;:::i;:::-;;;5630:42:15;5618:55;;;5600:74;;5588:2;5573:18;5507:131:0;5454:226:15;2388:783:0;;;;;;:::i;:::-;;:::i;5747:121::-;;;;;;:::i;:::-;;:::i;5191:157::-;;;;;;:::i;:::-;;:::i;3177:533::-;;;;;;:::i;:::-;;:::i;5354:147::-;;;;;;:::i;:::-;;:::i;2891:145:1:-;;;;;;:::i;:::-;2977:4;3000:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;;;;2891:145;1172:20:0;;;:::i;2023:49:1:-;;2068:4;2023:49;;6063:239:0;;;;;;:::i;:::-;;:::i;5224:147:1:-;;;;;;:::i;:::-;;:::i;1796:586:0:-;;;;;;:::i;:::-;;:::i;1267:66::-;;1307:26;1267:66;;3716:756;719:10:9;2977:4:1;3000:29;;;:12;;:29;:12;:29;;;3803:5:0;;3000:29:1;;3826:137:0;;;;;;;5887:2:15;3826:137:0;;;5869:21:15;5926:2;5906:18;;;5899:30;5965:34;5945:18;;;5938:62;6036:24;6016:18;;;6009:52;6078:19;;3826:137:0;;;;;;;;;3995:3;3981:10;:17;;3973:64;;;;;;;6310:2:15;3973:64:0;;;6292:21:15;6349:2;6329:18;;;6322:30;6388:34;6368:18;;;6361:62;6459:4;6439:18;;;6432:32;6481:19;;3973:64:0;6108:398:15;3973:64:0;4053:7;4048:418;4070:10;4066:1;:14;;;4048:418;;;4101:12;4116:5;;4122:1;4116:8;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4101:23;-1:-1:-1;4143:18:0;;;;;:47;;-1:-1:-1;4166:24:0;:9;4185:4;4166:18;:24::i;:::-;4165:25;4143:47;4139:94;;;4210:8;;;4139:94;4247:15;4265:19;:9;4279:4;4265:13;:19::i;:::-;4247:37;-1:-1:-1;4299:22:0;:9;4316:4;4299:16;:22::i;:::-;-1:-1:-1;4335:25:0;:9;4352:7;4335:16;:25::i;:::-;-1:-1:-1;4380:21:0;;4393:7;;4380:21;;;;;;;;;4420:35;;4447:7;;4443:1;;4420:35;;;;;;4443:1;;4420:35;4087:379;;4048:418;4082:3;;;;:::i;:::-;;;;4048:418;;;;3772:700;3716:756;;:::o;6369:327::-;6494:4;6533:40;;;6548:25;6533:40;;:104;;-1:-1:-1;6589:48:0;;;6604:33;6589:48;6533:104;:156;;;;6653:36;6677:11;6653:23;:36::i;:::-;6514:175;6369:327;-1:-1:-1;;6369:327:0:o;1127:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1453:337::-;4386:13:13;;1584:1:0;;4386:13:13;;;;;4385:14;:40;;;;-1:-1:-1;4403:12:13;;:22;;;;:12;;:22;4385:40;4377:99;;;;;;;7713:2:15;4377:99:13;;;7695:21:15;7752:2;7732:18;;;7725:30;7791:34;7771:18;;;7764:62;7862:16;7842:18;;;7835:44;7896:19;;4377:99:13;7511:410:15;4377:99:13;4486:12;:22;;4518:20;;4486:22;;;4518:20;4486:22;4518:20;;;1597:4:0::1;:12;1604:5:::0;1597:4;:12:::1;:::i;:::-;-1:-1:-1::0;1619:6:0::1;:16;1628:7:::0;1619:6;:16:::1;:::i;:::-;-1:-1:-1::0;1702:38:0::1;2068:4:1;1733:6:0::0;1702:10:::1;:38::i;:::-;1750:33;1307:26;1776:6;1750:10;:33::i;:::-;4575:5:13::0;4559:21;;;;;;4595:20;;10481:4:15;10469:17;;10451:36;;4595:20:13;;10439:2:15;10424:18;4595:20:13;;;;;;;1453:337:0;;;;:::o;5644:97::-;5690:7;5716:18;:9;:16;:18::i;:::-;5709:25;;5644:97;:::o;5874:123::-;3000:29:1;;;5931:4:0;3000:29:1;;;:12;;:29;:12;:29;;;;;5954:36:0;2891:145:1;4799;4448:7;4474:12;;;:6;:12;;;;;;;;:22;;2501:16;2512:4;2501:10;:16::i;:::-;4912:25:::1;4923:4;4929:7;4912:10;:25::i;:::-;4799:145:::0;;;:::o;4930:255:0:-;719:10:9;2068:4:1;3000:29;;;:12;;:29;:12;:29;;;;;4993:155:0;;;;;;;10700:2:15;4993:155:0;;;10682:21:15;10739:2;10719:18;;;10712:30;10778:34;10758:18;;;10751:62;10849:34;10829:18;;;10822:62;10921:5;10900:19;;;10893:34;10944:19;;4993:155:0;10498:471:15;4993:155:0;5159:13;:19;5175:3;;5159:13;:19;:::i;5908:214:1:-;6003:23;;;719:10:9;6003:23:1;5995:83;;;;;;;12506:2:15;5995:83:1;;;12488:21:15;12545:2;12525:18;;;12518:30;12584:34;12564:18;;;12557:62;12655:17;12635:18;;;12628:45;12690:19;;5995:83:1;12304:411:15;5995:83:1;6089:26;6101:4;6107:7;6089:11;:26::i;:::-;5908:214;;:::o;4478:397:0:-;719:10:9;4574:26:0;:9;719:10:9;4574:18:0;:26::i;:::-;4553:106;;;;;;;12922:2:15;4553:106:0;;;12904:21:15;12961:2;12941:18;;;12934:30;13000:34;12980:18;;;12973:62;13071:3;13051:18;;;13044:31;13092:19;;4553:106:0;12720:397:15;4553:106:0;4670:15;4688:21;:9;4702:6;4688:13;:21::i;:::-;4670:39;-1:-1:-1;4720:24:0;:9;4737:6;4720:16;:24::i;:::-;-1:-1:-1;4754:25:0;:9;4771:7;4754:16;:25::i;:::-;-1:-1:-1;4795:21:0;;4808:7;;4795:21;;;;;;;;;4831:37;;4860:7;;4856:1;;4831:37;;;;;;4856:1;;4831:37;4503:372;;4478:397::o;5507:131::-;5564:7;5590:41;5604:7;5590:41;;;;;;;;;;;;;;;;;:9;:13;;:41;;;;;:::i;2388:783::-;719:10:9;2977:4:1;3000:29;;;:12;;:29;:12;:29;;;2475:5:0;;3000:29:1;;2498:137:0;;;;;;;13324:2:15;2498:137:0;;;13306:21:15;13363:2;13343:18;;;13336:30;13402:34;13382:18;;;13375:62;13473:24;13453:18;;;13446:52;13515:19;;2498:137:0;13122:418:15;2498:137:0;2667:3;2653:10;:17;;2645:64;;;;;;;6310:2:15;2645:64:0;;;6292:21:15;6349:2;6329:18;;;6322:30;6388:34;6368:18;;;6361:62;6459:4;6439:18;;;6432:32;6481:19;;2645:64:0;6108:398:15;2645:64:0;2725:7;2720:445;2742:10;2738:1;:14;;;2720:445;;;2773:10;2786:5;;2792:1;2786:8;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2773:21;-1:-1:-1;2813:16:0;;;;;:42;;-1:-1:-1;2833:22:0;:9;2852:2;2833:18;:22::i;:::-;2809:89;;;2875:8;;;2809:89;2912:20;:8;1032:19:10;;1050:1;1032:19;;;945:123;2912:20:0;2946:15;2964:18;:8;918:14:10;;827:112;2964:18:0;2946:36;-1:-1:-1;2997:26:0;:9;3011:2;2946:36;2997:13;:26::i;:::-;-1:-1:-1;3037:26:0;:9;3051:7;3060:2;3037:13;:26::i;:::-;-1:-1:-1;3083:19:0;;3094:7;;3083:19;;;;;;;;;3121:33;;3146:7;;3121:33;;;;3138:1;;3121:33;;3138:1;;3121:33;2759:406;;2720:445;2754:3;;;;:::i;:::-;;;;2720:445;;5747:121;3000:29:1;;;5807:4:0;3000:29:1;;;:12;;:29;:12;:29;;;;;5830:31:0;2891:145:1;5191:157:0;5248:7;;5286:23;:9;5303:5;5286:16;:23::i;:::-;5267:42;;;5326:7;:15;;5340:1;5326:15;;;5336:1;5326:15;5319:22;;;5191:157;-1:-1:-1;;;5191:157:0:o;3177:533::-;719:10:9;2977:4:1;3000:29;;;:12;;:29;:12;:29;;;;;3226:137:0;;;;;;;5887:2:15;3226:137:0;;;5869:21:15;5926:2;5906:18;;;5899:30;5965:34;5945:18;;;5938:62;6036:24;6016:18;;;6009:52;6078:19;;3226:137:0;5685:418:15;3226:137:0;3381:18;;;3373:47;;;;;;;13747:2:15;3373:47:0;;;13729:21:15;13786:2;13766:18;;;13759:30;13825:18;13805;;;13798:46;13861:18;;3373:47:0;13545:340:15;3373:47:0;3438:24;:9;3457:4;3438:18;:24::i;:::-;3430:70;;;;;;;12922:2:15;3430:70:0;;;12904:21:15;12961:2;12941:18;;;12934:30;13000:34;12980:18;;;12973:62;13071:3;13051:18;;;13044:31;13092:19;;3430:70:0;12720:397:15;3430:70:0;3511:15;3529:19;:9;3543:4;3529:13;:19::i;:::-;3511:37;-1:-1:-1;3559:22:0;:9;3576:4;3559:16;:22::i;:::-;-1:-1:-1;3591:25:0;:9;3608:7;3591:16;:25::i;:::-;-1:-1:-1;3632:21:0;;3645:7;;3632:21;;;;;;;;;3668:35;;3695:7;;3691:1;;3668:35;;;;;;3691:1;;3668:35;3216:494;3177:533;:::o;5354:147::-;5410:7;5436:58;5450:4;5436:58;;;;;;;;;;;;;;;;;:9;;:58;:13;:58::i;1172:20::-;;;;;;;:::i;6063:239::-;6121:13;6195:1;6171:13;6165:27;;;;;:::i;:::-;;;:31;:130;;;;;;;;;;;;;;;;;6239:13;6254:18;:7;:16;:18::i;:::-;6222:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6146:149;6063:239;-1:-1:-1;;6063:239:0:o;5224:147:1:-;4448:7;4474:12;;;:6;:12;;;;;;;;:22;;2501:16;2512:4;2501:10;:16::i;:::-;5338:26:::1;5350:4;5356:7;5338:11;:26::i;1796:586:0:-:0;719:10:9;1842:7:0;3000:29:1;;;:12;;:29;:12;:29;;;;;1861:137:0;;;;;;;13324:2:15;1861:137:0;;;13306:21:15;13363:2;13343:18;;;13336:30;13402:34;13382:18;;;13375:62;13473:24;13453:18;;;13446:52;13515:19;;1861:137:0;13122:418:15;1861:137:0;2016:16;;;2008:45;;;;;;;13747:2:15;2008:45:0;;;13729:21:15;13786:2;13766:18;;;13759:30;13825:18;13805;;;13798:46;13861:18;;2008:45:0;13545:340:15;2008:45:0;2072:22;:9;2091:2;2072:18;:22::i;:::-;2071:23;2063:54;;;;;;;15175:2:15;2063:54:0;;;15157:21:15;15214:2;15194:18;;;15187:30;15253:20;15233:18;;;15226:48;15291:18;;2063:54:0;14973:342:15;2063:54:0;2128:20;:8;1032:19:10;;1050:1;1032:19;;;945:123;2128:20:0;2158:15;2176:18;:8;918:14:10;;827:112;2176:18:0;2158:36;-1:-1:-1;2205:26:0;:9;2219:2;2158:36;2205:13;:26::i;:::-;-1:-1:-1;2241:26:0;:9;2255:7;2264:2;2241:13;:26::i;:::-;-1:-1:-1;2283:19:0;;2294:7;;2283:19;;;;;;;;;2317:33;;2342:7;;2317:33;;;;2334:1;;2317:33;;2334:1;;2317:33;2368:7;1796:586;-1:-1:-1;;1796:586:0:o;12315:166:11:-;12399:4;12422:52;12431:3;12451:21;;;12422:8;:52::i;:::-;12415:59;12315:166;-1:-1:-1;;;12315:166:11:o;13785:168::-;13864:7;13898:47;13902:3;13922:21;;;13898:3;:47::i;12079:157::-;12156:4;12179:50;12186:3;12206:21;;;12179:6;:50::i;8987:139::-;9064:4;9087:32;9094:3;9114;9087:6;:32::i;2602:202:1:-;2687:4;2710:47;;;2725:32;2710:47;;:87;;-1:-1:-1;964:25:2;949:40;;;;2761:36:1;841:155:2;7457:233:1;2977:4;3000:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;7535:149;;7578:12;;;;7610:4;7578:12;;;;;;;;:29;;;;;;;;;;;:36;;;;;;;;;;7633:40;;719:10:9;;7578:12:1;;7633:40;;7578:12;7633:40;7457:233;;:::o;12564:120:11:-;12633:7;12659:18;12666:3;12659:6;:18::i;3330:103:1:-;3396:30;3407:4;719:10:9;3396::1;:30::i;:::-;3330:103;:::o;7861:234::-;2977:4;3000:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;7940:149;;;8014:5;7982:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;:37;;;;;;8038:40;719:10:9;;7982:12:1;;8038:40;;8014:5;8038:40;7861:234;;:::o;11143:240:11:-;11280:7;11330:43;11334:3;11354;11360:12;11330:3;:43::i;:::-;11322:52;11143:240;-1:-1:-1;;;;11143:240:11:o;11708:212::-;11827:4;11850:63;11854:3;11874:21;;;11906:5;11850:3;:63::i;8616:212::-;8735:4;8758:63;8762:3;8782;8796:23;;;8758:3;:63::i;13395:238::-;13477:4;;;;13534:50;13541:3;13561:21;;;13534:6;:50::i;:::-;13502:82;;-1:-1:-1;13502:82:11;-1:-1:-1;;;13395:238:11;;;;;;:::o;14233:240::-;14370:7;14404:61;14408:3;14428:21;;;14452:12;14404:3;:61::i;392:703:14:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:14;;;;;;;;;;;;;;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:14;;-1:-1:-1;837:2:14;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:14;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:14;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;;;;;;;;;;-1:-1:-1;1036:11:14;1045:2;1036:11;;:::i;:::-;;;908:150;;3054:140:11;3141:4;3164:23;:3;3183;3164:18;:23::i;4543:247::-;4625:7;4660:16;;;:11;;;:16;;;;;;4694:10;;;;:32;;;4708:18;4717:3;4722;4708:8;:18::i;:::-;4686:75;;;;;;;16416:2:15;4686:75:11;;;16398:21:15;16455:2;16435:18;;;16428:30;16494:32;16474:18;;;16467:60;16544:18;;4686:75:11;16214:354:15;2811:164:11;2891:4;2914:16;;;:11;;;:16;;;;;2907:23;;;2947:21;2914:3;2926;2947:16;:21::i;3284:123::-;3356:7;3382:18;:3;:16;:18::i;3714:479:1:-;2977:4;3000:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;3797:390;;3985:28;4005:7;3985:19;:28::i;:::-;4084:38;4112:4;4119:2;4084:19;:38::i;:::-;3892:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;3840:336;;;;;;;;:::i;5072:285:11:-;5212:7;5247:16;;;:11;;;:16;;;;;;5281:10;;;;:32;;;5295:18;5304:3;5309;5295:8;:18::i;:::-;5315:12;5273:55;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5345:5:11;5072:285;-1:-1:-1;;;;5072:285:11:o;2439:204::-;2561:4;2577:16;;;:11;;;:16;;;;;:24;;;2618:18;2577:3;2589;2618:13;:18::i;4093:298::-;4178:4;4219:16;;;:11;;;:16;;;;;;4178:4;;4219:16;4245:140;;4292:18;4301:3;4306;4292:8;:18::i;:::-;4284:39;-1:-1:-1;4320:1:11;;-1:-1:-1;4284:39:11;;-1:-1:-1;4284:39:11;4245:140;4362:4;;-1:-1:-1;4368:5:11;-1:-1:-1;4354:20:11;;6319:138:12;6399:4;4250:19;;;:12;;;:19;;;;;;:24;;6422:28;4154:127;6109:129;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;6538:115::-;6601:7;6627:19;6635:3;4444:18;;4362:107;2245:149:14;2303:13;2335:52;2347:22;;;288:2;1652:441;1727:13;1752:19;1784:10;1788:6;1784:1;:10;:::i;:::-;:14;;1797:1;1784:14;:::i;:::-;1774:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1774:25:14;;1752:47;;1809:15;:6;1816:1;1809:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;;1834;:6;1841:1;1834:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;-1:-1:-1;1864:9:14;1876:10;1880:6;1876:1;:10;:::i;:::-;:14;;1889:1;1876:14;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;1930:12;1943:5;1951:3;1943:11;1930:25;;;;;;;:::i;:::-;;;;1918:6;1925:1;1918:9;;;;;;;;:::i;:::-;;;;:37;;;;;;;;;;-1:-1:-1;1979:1:14;1969:11;;;;;1899:3;;;:::i;:::-;;;1859:132;;;-1:-1:-1;2008:10:14;;2000:55;;;;;;;17966:2:15;2000:55:14;;;17948:21:15;;;17985:18;;;17978:30;18044:34;18024:18;;;18017:62;18096:18;;2000:55:14;17764:356:15;5818:123:12;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;2685:1388::-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:12;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;2113:404;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:12;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:12;2488:12;;14:615:15;100:6;108;161:2;149:9;140:7;136:23;132:32;129:52;;;177:1;174;167:12;129:52;217:9;204:23;246:18;287:2;279:6;276:14;273:34;;;303:1;300;293:12;273:34;341:6;330:9;326:22;316:32;;386:7;379:4;375:2;371:13;367:27;357:55;;408:1;405;398:12;357:55;448:2;435:16;474:2;466:6;463:14;460:34;;;490:1;487;480:12;460:34;543:7;538:2;528:6;525:1;521:14;517:2;513:23;509:32;506:45;503:65;;;564:1;561;554:12;503:65;595:2;587:11;;;;;617:6;;-1:-1:-1;14:615:15;;-1:-1:-1;;;;14:615:15:o;634:332::-;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;800:9;787:23;850:66;843:5;839:78;832:5;829:89;819:117;;932:1;929;922:12;1163:250;1248:1;1258:113;1272:6;1269:1;1266:13;1258:113;;;1348:11;;;1342:18;1329:11;;;1322:39;1294:2;1287:10;1258:113;;;-1:-1:-1;;1405:1:15;1387:16;;1380:27;1163:250::o;1418:455::-;1567:2;1556:9;1549:21;1530:4;1599:6;1593:13;1642:6;1637:2;1626:9;1622:18;1615:34;1658:79;1730:6;1725:2;1714:9;1710:18;1705:2;1697:6;1693:15;1658:79;:::i;:::-;1789:2;1777:15;1794:66;1773:88;1758:104;;;;1864:2;1754:113;;1418:455;-1:-1:-1;;1418:455:15:o;1878:184::-;1930:77;1927:1;1920:88;2027:4;2024:1;2017:15;2051:4;2048:1;2041:15;2067:778;2110:5;2163:3;2156:4;2148:6;2144:17;2140:27;2130:55;;2181:1;2178;2171:12;2130:55;2217:6;2204:20;2243:18;2280:2;2276;2273:10;2270:36;;;2286:18;;:::i;:::-;2420:2;2414:9;2482:4;2474:13;;2325:66;2470:22;;;2494:2;2466:31;2462:40;2450:53;;;2518:18;;;2538:22;;;2515:46;2512:72;;;2564:18;;:::i;:::-;2604:10;2600:2;2593:22;2639:2;2631:6;2624:18;2685:3;2678:4;2673:2;2665:6;2661:15;2657:26;2654:35;2651:55;;;2702:1;2699;2692:12;2651:55;2766:2;2759:4;2751:6;2747:17;2740:4;2732:6;2728:17;2715:54;2813:1;2806:4;2801:2;2793:6;2789:15;2785:26;2778:37;2833:6;2824:15;;;;;;2067:778;;;;:::o;2850:196::-;2918:20;;2978:42;2967:54;;2957:65;;2947:93;;3036:1;3033;3026:12;2947:93;2850:196;;;:::o;3051:617::-;3148:6;3156;3164;3217:2;3205:9;3196:7;3192:23;3188:32;3185:52;;;3233:1;3230;3223:12;3185:52;3273:9;3260:23;3302:18;3343:2;3335:6;3332:14;3329:34;;;3359:1;3356;3349:12;3329:34;3382:50;3424:7;3415:6;3404:9;3400:22;3382:50;:::i;:::-;3372:60;;3485:2;3474:9;3470:18;3457:32;3441:48;;3514:2;3504:8;3501:16;3498:36;;;3530:1;3527;3520:12;3498:36;;3553:52;3597:7;3586:8;3575:9;3571:24;3553:52;:::i;:::-;3543:62;;;3624:38;3658:2;3647:9;3643:18;3624:38;:::i;:::-;3614:48;;3051:617;;;;;:::o;3855:180::-;3914:6;3967:2;3955:9;3946:7;3942:23;3938:32;3935:52;;;3983:1;3980;3973:12;3935:52;-1:-1:-1;4006:23:15;;3855:180;-1:-1:-1;3855:180:15:o;4222:186::-;4281:6;4334:2;4322:9;4313:7;4309:23;4305:32;4302:52;;;4350:1;4347;4340:12;4302:52;4373:29;4392:9;4373:29;:::i;4413:254::-;4481:6;4489;4542:2;4530:9;4521:7;4517:23;4513:32;4510:52;;;4558:1;4555;4548:12;4510:52;4594:9;4581:23;4571:33;;4623:38;4657:2;4646:9;4642:18;4623:38;:::i;:::-;4613:48;;4413:254;;;;;:::o;4672:592::-;4743:6;4751;4804:2;4792:9;4783:7;4779:23;4775:32;4772:52;;;4820:1;4817;4810:12;4772:52;4860:9;4847:23;4889:18;4930:2;4922:6;4919:14;4916:34;;;4946:1;4943;4936:12;4916:34;4984:6;4973:9;4969:22;4959:32;;5029:7;5022:4;5018:2;5014:13;5010:27;5000:55;;5051:1;5048;5041:12;5000:55;5091:2;5078:16;5117:2;5109:6;5106:14;5103:34;;;5133:1;5130;5123:12;5103:34;5178:7;5173:2;5164:6;5160:2;5156:15;5152:24;5149:37;5146:57;;;5199:1;5196;5189:12;6511:184;6563:77;6560:1;6553:88;6660:4;6657:1;6650:15;6684:4;6681:1;6674:15;6700:184;6752:77;6749:1;6742:88;6849:4;6846:1;6839:15;6873:4;6870:1;6863:15;6889:175;6926:3;6970:4;6963:5;6959:16;6999:4;6990:7;6987:17;6984:43;;7007:18;;:::i;:::-;7056:1;7043:15;;6889:175;-1:-1:-1;;6889:175:15:o;7069:437::-;7148:1;7144:12;;;;7191;;;7212:61;;7266:4;7258:6;7254:17;7244:27;;7212:61;7319:2;7311:6;7308:14;7288:18;7285:38;7282:218;;7356:77;7353:1;7346:88;7457:4;7454:1;7447:15;7485:4;7482:1;7475:15;7282:218;;7069:437;;;:::o;8052:545::-;8154:2;8149:3;8146:11;8143:448;;;8190:1;8215:5;8211:2;8204:17;8260:4;8256:2;8246:19;8330:2;8318:10;8314:19;8311:1;8307:27;8301:4;8297:38;8366:4;8354:10;8351:20;8348:47;;;-1:-1:-1;8389:4:15;8348:47;8444:2;8439:3;8435:12;8432:1;8428:20;8422:4;8418:31;8408:41;;8499:82;8517:2;8510:5;8507:13;8499:82;;;8562:17;;;8543:1;8532:13;8499:82;;;8503:3;;;8052:545;;;:::o;8833:1471::-;8959:3;8953:10;8986:18;8978:6;8975:30;8972:56;;;9008:18;;:::i;:::-;9037:97;9127:6;9087:38;9119:4;9113:11;9087:38;:::i;:::-;9081:4;9037:97;:::i;:::-;9189:4;;9253:2;9242:14;;9270:1;9265:782;;;;10091:1;10108:6;10105:89;;;-1:-1:-1;10160:19:15;;;10154:26;10105:89;8739:66;8730:1;8726:11;;;8722:84;8718:89;8708:100;8814:1;8810:11;;;8705:117;10207:81;;9235:1063;;9265:782;7999:1;7992:14;;;8036:4;8023:18;;9313:66;9301:79;;;9478:236;9492:7;9489:1;9486:14;9478:236;;;9581:19;;;9575:26;9560:42;;9673:27;;;;9641:1;9629:14;;;;9508:19;;9478:236;;;9482:3;9742:6;9733:7;9730:19;9727:261;;;9803:19;;;9797:26;9904:66;9886:1;9882:14;;;9898:3;9878:24;9874:97;9870:102;9855:118;9840:134;;9727:261;-1:-1:-1;;;;;10034:1:15;10018:14;;;10014:22;10001:36;;-1:-1:-1;8833:1471:15:o;10974:1325::-;11098:18;11093:3;11090:27;11087:53;;;11120:18;;:::i;:::-;11149:94;11239:3;11199:38;11231:4;11225:11;11199:38;:::i;:::-;11193:4;11149:94;:::i;:::-;11269:1;11294:2;11289:3;11286:11;11311:1;11306:735;;;;12085:1;12102:3;12099:93;;;-1:-1:-1;12158:19:15;;;12145:33;12099:93;8739:66;8730:1;8726:11;;;8722:84;8718:89;8708:100;8814:1;8810:11;;;8705:117;12205:78;;11279:1014;;11306:735;7999:1;7992:14;;;8036:4;8023:18;;11351:66;11342:76;;;11502:9;11524:229;11538:7;11535:1;11532:14;11524:229;;;11627:19;;;11614:33;11599:49;;11734:4;11719:20;;;;11687:1;11675:14;;;;11554:12;11524:229;;;11528:3;11781;11772:7;11769:16;11766:219;;;11901:66;11895:3;11889;11886:1;11882:11;11878:21;11874:94;11870:99;11857:9;11852:3;11848:19;11835:33;11831:139;11823:6;11816:155;11766:219;;;12028:1;12022:3;12019:1;12015:11;12011:19;12005:4;11998:33;11279:1014;;;10974:1325;;;:::o;13890:1078::-;14066:3;14095:1;14128:6;14122:13;14158:36;14184:9;14158:36;:::i;:::-;14213:1;14230:18;;;14257:191;;;;14462:1;14457:356;;;;14223:590;;14257:191;14305:66;14294:9;14290:82;14285:3;14278:95;14428:6;14421:14;14414:22;14406:6;14402:35;14397:3;14393:45;14386:52;;14257:191;;14457:356;14488:6;14485:1;14478:17;14518:4;14563:2;14560:1;14550:16;14588:1;14602:165;14616:6;14613:1;14610:13;14602:165;;;14694:14;;14681:11;;;14674:35;14737:16;;;;14631:10;;14602:165;;;14606:3;;;14796:6;14791:3;14787:16;14780:23;;14223:590;;;;;14844:6;14838:13;14860:68;14919:8;14914:3;14907:4;14899:6;14895:17;14860:68;:::i;:::-;14944:18;;13890:1078;-1:-1:-1;;;;13890:1078:15:o;15320:195::-;15359:3;15390:66;15383:5;15380:77;15377:103;;15460:18;;:::i;:::-;-1:-1:-1;15507:1:15;15496:13;;15320:195::o;15520:184::-;15572:77;15569:1;15562:88;15669:4;15666:1;15659:15;15693:4;15690:1;15683:15;15709:120;15749:1;15775;15765:35;;15780:18;;:::i;:::-;-1:-1:-1;15814:9:15;;15709:120::o;15834:128::-;15901:9;;;15922:11;;;15919:37;;;15936:18;;:::i;15967:112::-;15999:1;16025;16015:35;;16030:18;;:::i;:::-;-1:-1:-1;16064:9:15;;15967:112::o;16084:125::-;16149:9;;;16170:10;;;16167:36;;;16183:18;;:::i;16573:812::-;16984:25;16979:3;16972:38;16954:3;17039:6;17033:13;17055:75;17123:6;17118:2;17113:3;17109:12;17102:4;17094:6;17090:17;17055:75;:::i;:::-;17194:19;17189:2;17149:16;;;17181:11;;;17174:40;17239:13;;17261:76;17239:13;17323:2;17315:11;;17308:4;17296:17;;17261:76;:::i;:::-;17357:17;17376:2;17353:26;;16573:812;-1:-1:-1;;;;16573:812:15:o;17390:168::-;17463:9;;;17494;;17511:15;;;17505:22;;17491:37;17481:71;;17532:18;;:::i;17563:196::-;17602:3;17630:5;17620:39;;17639:18;;:::i;:::-;-1:-1:-1;17686:66:15;17675:78;;17563:196::o;18125:184::-;18177:77;18174:1;18167:88;18274:4;18271:1;18264:15;18298:4;18295:1;18288:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2135400",
								"executionCost": "2272",
								"totalCost": "2137672"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "262",
								"OPERATOR_ROLE()": "283",
								"attest(address)": "infinite",
								"balanceOf(address)": "infinite",
								"batchAttest(address[])": "infinite",
								"batchRevoke(address[])": "infinite",
								"burn()": "infinite",
								"getRoleAdmin(bytes32)": "2540",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2707",
								"initialize(string,string,address)": "infinite",
								"isAdmin(address)": "2594",
								"isOperator(address)": "2616",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"renounceRole(bytes32,address)": "28956",
								"revoke(address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setBaseTokenURI(string)": "infinite",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"tokenIdOf(address)": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 6698,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 6698,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209803db7c50cf1f1bd7ac059977cdf85bb3ef3f59b35c3b4491161959f80cd43864736f6c63430008110033",
									".code": [
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "6C60144A"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "EB31403F"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "F5B541A6"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "74A8F103"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "74A8F103"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "773C02D4"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "6C60144A"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "6D70F7AE"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "24D7806C"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "44DF8E70"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "24D7806C"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "30176E13"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "77F224A"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "77F224A"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "11002DF"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 6698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3716,
											"end": 4472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3716,
											"end": 4472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6369,
											"end": 6696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6369,
											"end": 6696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1150,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1136,
											"end": 1150,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1129,
											"end": 1151,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1111,
											"end": 1152,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1111,
											"end": 1152,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1099,
											"end": 1101,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1102,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1127,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1127,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1453,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1453,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5741,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5644,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5644,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5644,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5741,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5644,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5644,
											"end": 5741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3819,
											"end": 3844,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3844,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3844,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3807,
											"end": 3809,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5644,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3673,
											"end": 3850,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4374,
											"end": 4503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4480,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4503,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5874,
											"end": 5997,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5874,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5874,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5874,
											"end": 5997,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5997,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5874,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5874,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5997,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5874,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5874,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4799,
											"end": 4944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4799,
											"end": 4944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 5185,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4930,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4930,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4930,
											"end": 5185,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5185,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4930,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4930,
											"end": 5185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5185,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4930,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4930,
											"end": 5185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5908,
											"end": 6122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5908,
											"end": 6122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4875,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4478,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4478,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4478,
											"end": 4875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5507,
											"end": 5638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5507,
											"end": 5638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5672,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5618,
											"end": 5673,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5618,
											"end": 5673,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5618,
											"end": 5673,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5600,
											"end": 5674,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5600,
											"end": 5674,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5588,
											"end": 5590,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5573,
											"end": 5591,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5454,
											"end": 5680,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2388,
											"end": 3171,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2388,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2388,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2388,
											"end": 3171,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 3171,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2388,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2388,
											"end": 3171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 3171,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2388,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2388,
											"end": 3171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5868,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5747,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5747,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5747,
											"end": 5868,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5747,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5747,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5868,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5747,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5747,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5191,
											"end": 5348,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5191,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5191,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5191,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5191,
											"end": 5348,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5191,
											"end": 5348,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5191,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5191,
											"end": 5348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5191,
											"end": 5348,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5191,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5191,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5191,
											"end": 5348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3710,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3177,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3177,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3177,
											"end": 3710,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3177,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3177,
											"end": 3710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3710,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3177,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3177,
											"end": 3710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2891,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1172,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1172,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1172,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2072,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2023,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2068,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2072,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6302,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6063,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6063,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 6063,
											"end": 6302,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6302,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6063,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6063,
											"end": 6302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6302,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 6063,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6063,
											"end": 6302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5224,
											"end": 5371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5224,
											"end": 5371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1796,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1796,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1796,
											"end": 2382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1796,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1796,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1796,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1796,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1333,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1267,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1307,
											"end": 1333,
											"name": "PUSH",
											"source": 0,
											"value": "97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929"
										},
										{
											"begin": 1267,
											"end": 1333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1333,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3803,
											"end": 3808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5889,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 5890,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5899,
											"end": 5929,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5965,
											"end": 5999,
											"name": "PUSH",
											"source": 15,
											"value": "4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52"
										},
										{
											"begin": 5945,
											"end": 5963,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 5945,
											"end": 5963,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5945,
											"end": 5963,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5938,
											"end": 6000,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "PUSH",
											"source": 15,
											"value": "4F4C452063616E207265766F6B65207468652053425400000000000000000000"
										},
										{
											"begin": 6016,
											"end": 6034,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6016,
											"end": 6034,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6016,
											"end": 6034,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6009,
											"end": 6061,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6078,
											"end": 6097,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 6078,
											"end": 6097,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3826,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 3998,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3981,
											"end": 3991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3998,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3973,
											"end": 4037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4037,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3973,
											"end": 4037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6310,
											"end": 6312,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4037,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3973,
											"end": 4037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6313,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6349,
											"end": 6351,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6322,
											"end": 6352,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6388,
											"end": 6422,
											"name": "PUSH",
											"source": 15,
											"value": "546865206D6178206C656E677468206F66206164647265737365732069732031"
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6361,
											"end": 6423,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6459,
											"end": 6463,
											"name": "PUSH",
											"source": 15,
											"value": "3030000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6439,
											"end": 6457,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6439,
											"end": 6457,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6439,
											"end": 6457,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6432,
											"end": 6464,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6481,
											"end": 6500,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 6481,
											"end": 6500,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3973,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6108,
											"end": 6506,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3973,
											"end": 4037,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3973,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4466,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4048,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4070,
											"end": 4080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4080,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4048,
											"end": 4466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4048,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4048,
											"end": 4466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4121,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4121,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4116,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4116,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4116,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4143,
											"end": 4190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4166,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4166,
											"end": 4175,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4185,
											"end": 4189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4166,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4190,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4166,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4190,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4190,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4143,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4139,
											"end": 4233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4210,
											"end": 4218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4210,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4210,
											"end": 4218,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4233,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4139,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 4262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4279,
											"end": 4283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4265,
											"end": 4284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 4284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4299,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4299,
											"end": 4308,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4316,
											"end": 4320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4299,
											"end": 4321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4321,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4299,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4335,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4335,
											"end": 4344,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4352,
											"end": 4359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4335,
											"end": 4360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4360,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4335,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4380,
											"end": 4401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4380,
											"end": 4401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4380,
											"end": 4401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4380,
											"end": 4401,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4380,
											"end": 4401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4380,
											"end": 4401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4380,
											"end": 4401,
											"name": "PUSH",
											"source": 0,
											"value": "EC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B"
										},
										{
											"begin": 4380,
											"end": 4401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4380,
											"end": 4401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4380,
											"end": 4401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4380,
											"end": 4401,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4420,
											"end": 4455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4420,
											"end": 4455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4420,
											"end": 4455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4420,
											"end": 4455,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4420,
											"end": 4455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4420,
											"end": 4455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4420,
											"end": 4455,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4420,
											"end": 4455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4420,
											"end": 4455,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4048,
											"end": 4466,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4048,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4082,
											"end": 4085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4082,
											"end": 4085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4085,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4082,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4048,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4048,
											"end": 4466,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4048,
											"end": 4466,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4048,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4048,
											"end": 4466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 4472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 4472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 4472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6533,
											"end": 6573,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6548,
											"end": 6573,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6533,
											"end": 6573,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6533,
											"end": 6637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6589,
											"end": 6637,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6589,
											"end": 6637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6589,
											"end": 6637,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6604,
											"end": 6637,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6589,
											"end": 6637,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6637,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6533,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6533,
											"end": 6689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6677,
											"end": 6688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6653,
											"end": 6689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6689,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6653,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6514,
											"end": 6689,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6369,
											"end": 6696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1127,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1127,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4399,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4386,
											"end": 4399,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4399,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4386,
											"end": 4399,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4399,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4399,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4386,
											"end": 4399,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4385,
											"end": 4399,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4385,
											"end": 4425,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4385,
											"end": 4425,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4385,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 4385,
											"end": 4425,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4403,
											"end": 4415,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4415,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4403,
											"end": 4425,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4403,
											"end": 4425,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4403,
											"end": 4425,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4403,
											"end": 4425,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4403,
											"end": 4415,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4403,
											"end": 4415,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4403,
											"end": 4425,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4385,
											"end": 4425,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 4385,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4377,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 4377,
											"end": 4476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4377,
											"end": 4476,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4377,
											"end": 4476,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4377,
											"end": 4476,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4377,
											"end": 4476,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4377,
											"end": 4476,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7713,
											"end": 7715,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4476,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4377,
											"end": 4476,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4377,
											"end": 4476,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7695,
											"end": 7716,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7752,
											"end": 7754,
											"name": "PUSH",
											"source": 15,
											"value": "2E"
										},
										{
											"begin": 7732,
											"end": 7750,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7732,
											"end": 7750,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7732,
											"end": 7750,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7725,
											"end": 7755,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7791,
											"end": 7825,
											"name": "PUSH",
											"source": 15,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 7771,
											"end": 7789,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7771,
											"end": 7789,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7771,
											"end": 7789,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7764,
											"end": 7826,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7862,
											"end": 7878,
											"name": "PUSH",
											"source": 15,
											"value": "647920696E697469616C697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7835,
											"end": 7879,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7896,
											"end": 7915,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 7896,
											"end": 7915,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4377,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 7511,
											"end": 7921,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4377,
											"end": 4476,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 4377,
											"end": 4476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4486,
											"end": 4498,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4508,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4486,
											"end": 4508,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4538,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000"
										},
										{
											"begin": 4518,
											"end": 4538,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4486,
											"end": 4508,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4486,
											"end": 4508,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4486,
											"end": 4508,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4538,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4486,
											"end": 4508,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4518,
											"end": 4538,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4538,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4538,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1597,
											"end": 1609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1597,
											"end": 1609,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1597,
											"end": 1609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1619,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1619,
											"end": 1635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1628,
											"end": 1635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1619,
											"end": 1635,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1635,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1619,
											"end": 1635,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2068,
											"end": 2072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1702,
											"end": 1740,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1702,
											"end": 1740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1307,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929"
										},
										{
											"begin": 1776,
											"end": 1782,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1750,
											"end": 1783,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1750,
											"end": 1783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4580,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4580,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4580,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4580,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF"
										},
										{
											"begin": 4559,
											"end": 4580,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4580,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4580,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4595,
											"end": 4615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10481,
											"end": 10485,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 10469,
											"end": 10486,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10469,
											"end": 10486,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10487,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10487,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4595,
											"end": 4615,
											"name": "PUSH",
											"source": 13,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 4595,
											"end": 4615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10439,
											"end": 10441,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10424,
											"end": 10442,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4595,
											"end": 4615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4595,
											"end": 4615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4615,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4615,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5741,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5644,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5690,
											"end": 5697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5716,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5716,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5716,
											"end": 5734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5709,
											"end": 5734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5997,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5874,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "A6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4480,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2512,
											"end": 2516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2501,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4923,
											"end": 4927,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4936,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 4912,
											"end": 4937,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4937,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4912,
											"end": 4937,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 5185,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4930,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2068,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "A6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4993,
											"end": 5148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4993,
											"end": 5148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5148,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4993,
											"end": 5148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10700,
											"end": 10702,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5148,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4993,
											"end": 5148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10682,
											"end": 10703,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10739,
											"end": 10741,
											"name": "PUSH",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 10719,
											"end": 10737,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10719,
											"end": 10737,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10719,
											"end": 10737,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10712,
											"end": 10742,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10778,
											"end": 10812,
											"name": "PUSH",
											"source": 15,
											"value": "4F6E6C7920746865206163636F756E7420776974682044454641554C545F4144"
										},
										{
											"begin": 10758,
											"end": 10776,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 10758,
											"end": 10776,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10758,
											"end": 10776,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10751,
											"end": 10813,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10849,
											"end": 10883,
											"name": "PUSH",
											"source": 15,
											"value": "4D494E5F524F4C452063616E2073657420746865206261736520746F6B656E20"
										},
										{
											"begin": 10829,
											"end": 10847,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 10829,
											"end": 10847,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10829,
											"end": 10847,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10921,
											"end": 10926,
											"name": "PUSH",
											"source": 15,
											"value": "5552490000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10900,
											"end": 10919,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 10900,
											"end": 10919,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10900,
											"end": 10919,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10893,
											"end": 10927,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10944,
											"end": 10963,
											"name": "PUSH",
											"source": 15,
											"value": "A4"
										},
										{
											"begin": 10944,
											"end": 10963,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4993,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 10498,
											"end": 10969,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4993,
											"end": 5148,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4993,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5172,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5159,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5175,
											"end": 5178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5175,
											"end": 5178,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5172,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 5159,
											"end": 5178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6026,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6003,
											"end": 6026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6026,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12506,
											"end": 12508,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12488,
											"end": 12509,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12545,
											"end": 12547,
											"name": "PUSH",
											"source": 15,
											"value": "2F"
										},
										{
											"begin": 12525,
											"end": 12543,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12525,
											"end": 12543,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12525,
											"end": 12543,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12518,
											"end": 12548,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12584,
											"end": 12618,
											"name": "PUSH",
											"source": 15,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 12564,
											"end": 12582,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12564,
											"end": 12582,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12564,
											"end": 12582,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12557,
											"end": 12619,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12655,
											"end": 12672,
											"name": "PUSH",
											"source": 15,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 12635,
											"end": 12653,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12635,
											"end": 12653,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12635,
											"end": 12653,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12628,
											"end": 12673,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 12709,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 12690,
											"end": 12709,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 12304,
											"end": 12715,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5995,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6101,
											"end": 6105,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6107,
											"end": 6114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 6089,
											"end": 6115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6115,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6089,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 6122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 6122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4875,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4478,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4574,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 4574,
											"end": 4583,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4574,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4574,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4574,
											"end": 4600,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 4574,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4553,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4553,
											"end": 4659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4553,
											"end": 4659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4553,
											"end": 4659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4553,
											"end": 4659,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4553,
											"end": 4659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4553,
											"end": 4659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12922,
											"end": 12924,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4553,
											"end": 4659,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4553,
											"end": 4659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4553,
											"end": 4659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12904,
											"end": 12925,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12961,
											"end": 12963,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 12941,
											"end": 12959,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12941,
											"end": 12959,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12941,
											"end": 12959,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12934,
											"end": 12964,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13000,
											"end": 13034,
											"name": "PUSH",
											"source": 15,
											"value": "546865206163636F756E7420646F6573206E6F74206861766520616E79205342"
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12973,
											"end": 13035,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13071,
											"end": 13074,
											"name": "PUSH",
											"source": 15,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13044,
											"end": 13075,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13092,
											"end": 13111,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 13092,
											"end": 13111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4553,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 12720,
											"end": 13117,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4553,
											"end": 4659,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4553,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 4688,
											"end": 4697,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4702,
											"end": 4708,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4688,
											"end": 4709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4709,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 4688,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4720,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 4720,
											"end": 4729,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4737,
											"end": 4743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4720,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4720,
											"end": 4744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4720,
											"end": 4744,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 4720,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4754,
											"end": 4763,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4771,
											"end": 4778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4754,
											"end": 4779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4795,
											"end": 4816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4795,
											"end": 4816,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4816,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4795,
											"end": 4816,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4816,
											"name": "PUSH",
											"source": 0,
											"value": "CC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
										},
										{
											"begin": 4795,
											"end": 4816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 4816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4816,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 4868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4831,
											"end": 4868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4856,
											"end": 4857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4856,
											"end": 4857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 4868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4831,
											"end": 4868,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 4868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 4868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 4868,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4831,
											"end": 4868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4856,
											"end": 4857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4856,
											"end": 4857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 4868,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5507,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "PUSH",
											"source": 0,
											"value": "496E76616C696420746F6B656E49640000000000000000000000000000000000"
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5599,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5590,
											"end": 5631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 3171,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2388,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2498,
											"end": 2635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 2635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2498,
											"end": 2635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13326,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2498,
											"end": 2635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13306,
											"end": 13327,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13363,
											"end": 13365,
											"name": "PUSH",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13336,
											"end": 13366,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13402,
											"end": 13436,
											"name": "PUSH",
											"source": 15,
											"value": "4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52"
										},
										{
											"begin": 13382,
											"end": 13400,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 13382,
											"end": 13400,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13382,
											"end": 13400,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13375,
											"end": 13437,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13473,
											"end": 13497,
											"name": "PUSH",
											"source": 15,
											"value": "4F4C452063616E20617474657374207468652053425400000000000000000000"
										},
										{
											"begin": 13453,
											"end": 13471,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13453,
											"end": 13471,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13453,
											"end": 13471,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13446,
											"end": 13498,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13515,
											"end": 13534,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 13515,
											"end": 13534,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2498,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 13122,
											"end": 13540,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2498,
											"end": 2635,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2498,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2653,
											"end": 2663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2670,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2645,
											"end": 2709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2709,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2645,
											"end": 2709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6310,
											"end": 6312,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2645,
											"end": 2709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2645,
											"end": 2709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6313,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6349,
											"end": 6351,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6322,
											"end": 6352,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6388,
											"end": 6422,
											"name": "PUSH",
											"source": 15,
											"value": "546865206D6178206C656E677468206F66206164647265737365732069732031"
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6361,
											"end": 6423,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6459,
											"end": 6463,
											"name": "PUSH",
											"source": 15,
											"value": "3030000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6439,
											"end": 6457,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6439,
											"end": 6457,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6439,
											"end": 6457,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6432,
											"end": 6464,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6481,
											"end": 6500,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 6481,
											"end": 6500,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2645,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6108,
											"end": 6506,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2645,
											"end": 2709,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2645,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2725,
											"end": 2732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 3165,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2720,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2752,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2738,
											"end": 2752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2752,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2720,
											"end": 3165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2720,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2720,
											"end": 3165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2791,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2791,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2786,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2786,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2786,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2813,
											"end": 2829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2813,
											"end": 2829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2829,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2813,
											"end": 2855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2833,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2833,
											"end": 2842,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2852,
											"end": 2854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2833,
											"end": 2855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2855,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2833,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2898,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2809,
											"end": 2898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2875,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2875,
											"end": 2883,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2898,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2809,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2912,
											"end": 2920,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 2932,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2912,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 2961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2964,
											"end": 2972,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 2982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2997,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2997,
											"end": 3006,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3011,
											"end": 3013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2997,
											"end": 3023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3023,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2997,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3037,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3037,
											"end": 3046,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3051,
											"end": 3058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3062,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3037,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3037,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3083,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3083,
											"end": 3102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3083,
											"end": 3102,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "E9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27"
										},
										{
											"begin": 3083,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3102,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 3165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 3165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2720,
											"end": 3165,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2720,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2754,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2720,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2720,
											"end": 3165,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5868,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5747,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2891,
											"end": 3036,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5191,
											"end": 5348,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5191,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5248,
											"end": 5255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5248,
											"end": 5255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 5286,
											"end": 5295,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5303,
											"end": 5308,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 5286,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5309,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 5286,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5267,
											"end": 5309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5267,
											"end": 5309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5267,
											"end": 5309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 5326,
											"end": 5341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5340,
											"end": 5341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 5326,
											"end": 5341,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5341,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 5326,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5336,
											"end": 5337,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5326,
											"end": 5341,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 5326,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5341,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5319,
											"end": 5341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5341,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5191,
											"end": 5348,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5191,
											"end": 5348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3710,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3177,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 3226,
											"end": 3363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3226,
											"end": 3363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3363,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3226,
											"end": 3363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5887,
											"end": 5889,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3226,
											"end": 3363,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3226,
											"end": 3363,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 5890,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5899,
											"end": 5929,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5965,
											"end": 5999,
											"name": "PUSH",
											"source": 15,
											"value": "4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52"
										},
										{
											"begin": 5945,
											"end": 5963,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 5945,
											"end": 5963,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5945,
											"end": 5963,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5938,
											"end": 6000,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "PUSH",
											"source": 15,
											"value": "4F4C452063616E207265766F6B65207468652053425400000000000000000000"
										},
										{
											"begin": 6016,
											"end": 6034,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6016,
											"end": 6034,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6016,
											"end": 6034,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6009,
											"end": 6061,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6078,
											"end": 6097,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 6078,
											"end": 6097,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3226,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5685,
											"end": 6103,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3226,
											"end": 3363,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 3226,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3381,
											"end": 3399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3381,
											"end": 3399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 3373,
											"end": 3420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3373,
											"end": 3420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3420,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3373,
											"end": 3420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13747,
											"end": 13749,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3373,
											"end": 3420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3373,
											"end": 3420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13729,
											"end": 13750,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13786,
											"end": 13788,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 13766,
											"end": 13784,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13766,
											"end": 13784,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13766,
											"end": 13784,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13759,
											"end": 13789,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13825,
											"end": 13843,
											"name": "PUSH",
											"source": 15,
											"value": "4164647265737320697320656D70747900000000000000000000000000000000"
										},
										{
											"begin": 13805,
											"end": 13823,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 13805,
											"end": 13823,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13805,
											"end": 13823,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13798,
											"end": 13844,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13861,
											"end": 13879,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13861,
											"end": 13879,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3373,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 13545,
											"end": 13885,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3373,
											"end": 3420,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 3373,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3438,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3462,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 3438,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 3430,
											"end": 3500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3430,
											"end": 3500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12922,
											"end": 12924,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3430,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3430,
											"end": 3500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3430,
											"end": 3500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12904,
											"end": 12925,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12961,
											"end": 12963,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 12941,
											"end": 12959,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12941,
											"end": 12959,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12941,
											"end": 12959,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12934,
											"end": 12964,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13000,
											"end": 13034,
											"name": "PUSH",
											"source": 15,
											"value": "546865206163636F756E7420646F6573206E6F74206861766520616E79205342"
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12980,
											"end": 12998,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12973,
											"end": 13035,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13071,
											"end": 13074,
											"name": "PUSH",
											"source": 15,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13044,
											"end": 13075,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13092,
											"end": 13111,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 13092,
											"end": 13111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3430,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 12720,
											"end": 13117,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3430,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 3430,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3511,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3529,
											"end": 3538,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3543,
											"end": 3547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3529,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3548,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3529,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3511,
											"end": 3548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3559,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3559,
											"end": 3568,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3576,
											"end": 3580,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3559,
											"end": 3581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3581,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3559,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3591,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 3591,
											"end": 3600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3608,
											"end": 3615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3591,
											"end": 3616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3616,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 3591,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "PUSH",
											"source": 0,
											"value": "EC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B"
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 3216,
											"end": 3710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3177,
											"end": 3710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5450,
											"end": 5454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "PUSH data",
											"source": 0,
											"value": "4C0EF6BFA0A398FE3098D6B3C8BC2C4C45D120EC13B77201D29305B0ABB24397"
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5436,
											"end": 5445,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5436,
											"end": 5445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5436,
											"end": 5494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5436,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 5436,
											"end": 5494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1172,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1172,
											"end": 1192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1172,
											"end": 1192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1172,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6302,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6063,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6134,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6195,
											"end": 6196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6184,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 6165,
											"end": 6192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 6165,
											"end": 6192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6165,
											"end": 6192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6192,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 6165,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6196,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 6165,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6239,
											"end": 6252,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 6254,
											"end": 6261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6254,
											"end": 6270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 6254,
											"end": 6272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 6222,
											"end": 6273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6222,
											"end": 6273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6295,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6063,
											"end": 6302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5224,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4480,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4486,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2512,
											"end": 2516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2501,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5350,
											"end": 5354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5363,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 5338,
											"end": 5364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1796,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1842,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "31C1E66639F421F1853AEEFE8AD6B62A3B96F3287EFE23106923CD924AA025C2"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1861,
											"end": 1998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1998,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1861,
											"end": 1998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13326,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1861,
											"end": 1998,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1861,
											"end": 1998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13306,
											"end": 13327,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13363,
											"end": 13365,
											"name": "PUSH",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13336,
											"end": 13366,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13402,
											"end": 13436,
											"name": "PUSH",
											"source": 15,
											"value": "4F6E6C7920746865206163636F756E742077697468204F50455241544F525F52"
										},
										{
											"begin": 13382,
											"end": 13400,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 13382,
											"end": 13400,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13382,
											"end": 13400,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13375,
											"end": 13437,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13473,
											"end": 13497,
											"name": "PUSH",
											"source": 15,
											"value": "4F4C452063616E20617474657374207468652053425400000000000000000000"
										},
										{
											"begin": 13453,
											"end": 13471,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13453,
											"end": 13471,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13453,
											"end": 13471,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13446,
											"end": 13498,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13515,
											"end": 13534,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 13515,
											"end": 13534,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1861,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 13122,
											"end": 13540,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1861,
											"end": 1998,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1861,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2016,
											"end": 2032,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2016,
											"end": 2032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2016,
											"end": 2032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2008,
											"end": 2053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2008,
											"end": 2053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13747,
											"end": 13749,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2008,
											"end": 2053,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13729,
											"end": 13750,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13786,
											"end": 13788,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 13766,
											"end": 13784,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13766,
											"end": 13784,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13766,
											"end": 13784,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13759,
											"end": 13789,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13825,
											"end": 13843,
											"name": "PUSH",
											"source": 15,
											"value": "4164647265737320697320656D70747900000000000000000000000000000000"
										},
										{
											"begin": 13805,
											"end": 13823,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 13805,
											"end": 13823,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13805,
											"end": 13823,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13798,
											"end": 13844,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13861,
											"end": 13879,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13861,
											"end": 13879,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 13545,
											"end": 13885,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2053,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2008,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2091,
											"end": 2093,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2072,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2094,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2072,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2094,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 2063,
											"end": 2117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2063,
											"end": 2117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15175,
											"end": 15177,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2117,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2063,
											"end": 2117,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15157,
											"end": 15178,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15214,
											"end": 15216,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15187,
											"end": 15217,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15253,
											"end": 15273,
											"name": "PUSH",
											"source": 15,
											"value": "53425420616C7265616479206578697374730000000000000000000000000000"
										},
										{
											"begin": 15233,
											"end": 15251,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 15233,
											"end": 15251,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15233,
											"end": 15251,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15226,
											"end": 15274,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15291,
											"end": 15309,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 15291,
											"end": 15309,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2063,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14973,
											"end": 15315,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2063,
											"end": 2117,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 2063,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2128,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2148,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2128,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 2176,
											"end": 2184,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2205,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 2205,
											"end": 2214,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2219,
											"end": 2221,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2194,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2205,
											"end": 2231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2231,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 2205,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2241,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2241,
											"end": 2250,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2255,
											"end": 2262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2266,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2241,
											"end": 2267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2267,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2241,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "PUSH",
											"source": 0,
											"value": "E9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27"
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2302,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2350,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2350,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2350,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2317,
											"end": 2350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2350,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2375,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 2382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 2382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12315,
											"end": 12481,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 12315,
											"end": 12481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12399,
											"end": 12403,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12422,
											"end": 12474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 12431,
											"end": 12434,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12451,
											"end": 12472,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12451,
											"end": 12472,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12451,
											"end": 12472,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12422,
											"end": 12430,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 12422,
											"end": 12474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12422,
											"end": 12474,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 12422,
											"end": 12474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12415,
											"end": 12474,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 12315,
											"end": 12481,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12315,
											"end": 12481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13785,
											"end": 13953,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 13785,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13864,
											"end": 13871,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13898,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 13902,
											"end": 13905,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13922,
											"end": 13943,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13922,
											"end": 13943,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13922,
											"end": 13943,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13898,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 13898,
											"end": 13945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12079,
											"end": 12236,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 12079,
											"end": 12236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12160,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12179,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 12186,
											"end": 12189,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12206,
											"end": 12227,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12206,
											"end": 12227,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12206,
											"end": 12227,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12179,
											"end": 12185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 12179,
											"end": 12229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8987,
											"end": 9126,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 8987,
											"end": 9126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9064,
											"end": 9068,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9087,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 9094,
											"end": 9097,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9114,
											"end": 9117,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9087,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 9087,
											"end": 9119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2602,
											"end": 2804,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2602,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2757,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2710,
											"end": 2797,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 964,
											"end": 989,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 949,
											"end": 989,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 949,
											"end": 989,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 949,
											"end": 989,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 949,
											"end": 989,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 841,
											"end": 996,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7457,
											"end": 7690,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7457,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7535,
											"end": 7684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 7535,
											"end": 7684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 7614,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7607,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7614,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7673,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12564,
											"end": 12684,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 12564,
											"end": 12684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12633,
											"end": 12640,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12659,
											"end": 12677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 12666,
											"end": 12669,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12659,
											"end": 12665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 12659,
											"end": 12677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3433,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 3330,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 3407,
											"end": 3411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3396,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 3396,
											"end": 3426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 3396,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 8095,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7861,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 8089,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 8089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 7940,
											"end": 8089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8014,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8011,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8019,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 7982,
											"end": 8019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 8019,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8038,
											"end": 8078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7982,
											"end": 7994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8038,
											"end": 8078,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8038,
											"end": 8078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8014,
											"end": 8019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8038,
											"end": 8078,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 8095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 8095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 8095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11143,
											"end": 11383,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 11143,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11280,
											"end": 11287,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11330,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 11334,
											"end": 11337,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11354,
											"end": 11357,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11360,
											"end": 11372,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11330,
											"end": 11333,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 11330,
											"end": 11373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11330,
											"end": 11373,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 11330,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11322,
											"end": 11374,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 11143,
											"end": 11383,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11143,
											"end": 11383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11708,
											"end": 11920,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 11708,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11827,
											"end": 11831,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11850,
											"end": 11913,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 11854,
											"end": 11857,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11874,
											"end": 11895,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11874,
											"end": 11895,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11874,
											"end": 11895,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11906,
											"end": 11911,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11850,
											"end": 11853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 11850,
											"end": 11913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8828,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 8616,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8735,
											"end": 8739,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8758,
											"end": 8821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 8762,
											"end": 8765,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8782,
											"end": 8785,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8796,
											"end": 8819,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8796,
											"end": 8819,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8796,
											"end": 8819,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8758,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 8758,
											"end": 8821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13477,
											"end": 13481,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13477,
											"end": 13481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13477,
											"end": 13481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13477,
											"end": 13481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 13541,
											"end": 13544,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13561,
											"end": 13582,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13561,
											"end": 13582,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 13561,
											"end": 13582,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 13534,
											"end": 13584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13584,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 13534,
											"end": 13584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13502,
											"end": 13584,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13502,
											"end": 13584,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13502,
											"end": 13584,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13633,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14233,
											"end": 14473,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 14233,
											"end": 14473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14370,
											"end": 14377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14404,
											"end": 14465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 14408,
											"end": 14411,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14428,
											"end": 14449,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14428,
											"end": 14449,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14428,
											"end": 14449,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14404,
											"end": 14407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 14404,
											"end": 14465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 448,
											"end": 461,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 661,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 14,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 392,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 661,
											"end": 712,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 721,
											"end": 733,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 782,
											"end": 791,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 807,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 807,
											"end": 815,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 837,
											"end": 839,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 829,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 829,
											"end": 839,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 829,
											"end": 839,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 859,
											"end": 878,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 881,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 859,
											"end": 898,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 859,
											"end": 898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 915,
											"end": 925,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 915,
											"end": 925,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 941,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 941,
											"end": 952,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 1009,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 996,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "PUSH",
											"source": 14,
											"value": "F8"
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 973,
											"end": 979,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 966,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 1036,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3054,
											"end": 3194,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 3054,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3141,
											"end": 3145,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 3164,
											"end": 3167,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3183,
											"end": 3186,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 3164,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4543,
											"end": 4790,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 4543,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4632,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4671,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4660,
											"end": 4671,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4676,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4694,
											"end": 4704,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4694,
											"end": 4704,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4694,
											"end": 4704,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4694,
											"end": 4704,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4708,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 4717,
											"end": 4720,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4722,
											"end": 4725,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4708,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 4708,
											"end": 4726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4708,
											"end": 4726,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 4708,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16416,
											"end": 16418,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16398,
											"end": 16419,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16455,
											"end": 16457,
											"name": "PUSH",
											"source": 15,
											"value": "1E"
										},
										{
											"begin": 16435,
											"end": 16453,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 16435,
											"end": 16453,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16435,
											"end": 16453,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16428,
											"end": 16458,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16494,
											"end": 16526,
											"name": "PUSH",
											"source": 15,
											"value": "456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000"
										},
										{
											"begin": 16474,
											"end": 16492,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 16474,
											"end": 16492,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16474,
											"end": 16492,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16467,
											"end": 16527,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16544,
											"end": 16562,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 16544,
											"end": 16562,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4686,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 16214,
											"end": 16568,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2811,
											"end": 2975,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 2811,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2891,
											"end": 2895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2925,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2914,
											"end": 2925,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2925,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2930,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2930,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2930,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2914,
											"end": 2917,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2926,
											"end": 2929,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 2947,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3407,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 3284,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3363,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3382,
											"end": 3385,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3382,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 3382,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3714,
											"end": 4193,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 3714,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3797,
											"end": 4187,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 4005,
											"end": 4012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 3985,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4013,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 3985,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 4112,
											"end": 4116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 4084,
											"end": 4122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4122,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 4084,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 3892,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3840,
											"end": 4176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5357,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 5072,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5219,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5258,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5247,
											"end": 5258,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5258,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5263,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5291,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5291,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5291,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5291,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 5281,
											"end": 5313,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5313,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 5304,
											"end": 5307,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5309,
											"end": 5312,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 5295,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 5273,
											"end": 5328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 5273,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5345,
											"end": 5350,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5072,
											"end": 5357,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5072,
											"end": 5357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2439,
											"end": 2643,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 2439,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2561,
											"end": 2565,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2588,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2577,
											"end": 2588,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2601,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2601,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2601,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 2577,
											"end": 2580,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2592,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 2618,
											"end": 2636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4093,
											"end": 4391,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 4093,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4230,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4219,
											"end": 4230,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4230,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4182,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 4245,
											"end": 4385,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4292,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 4301,
											"end": 4304,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4306,
											"end": 4309,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4292,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 4292,
											"end": 4310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4292,
											"end": 4310,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 4292,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4284,
											"end": 4323,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4284,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 4284,
											"end": 4323,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4284,
											"end": 4323,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4385,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 4245,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4368,
											"end": 4373,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4354,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 4354,
											"end": 4374,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6319,
											"end": 6457,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 6319,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4274,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4274,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6422,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 4154,
											"end": 4281,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6109,
											"end": 6238,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 6109,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6182,
											"end": 6186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6205,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 6213,
											"end": 6216,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6230,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6205,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 6205,
											"end": 6231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6538,
											"end": 6653,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 6538,
											"end": 6653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6601,
											"end": 6608,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6627,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 6635,
											"end": 6638,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4469,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2245,
											"end": 2394,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 2245,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2335,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 288,
											"end": 290,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1727,
											"end": 1740,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 1784,
											"end": 1794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1798,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 1784,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 1774,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1752,
											"end": 1799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1752,
											"end": 1799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "PUSH",
											"source": 14,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1816,
											"end": 1817,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 1809,
											"end": 1818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "PUSH",
											"source": 14,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 1834,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 1876,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 1890,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 1876,
											"end": 1890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1864,
											"end": 1890,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1864,
											"end": 1890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1930,
											"end": 1942,
											"name": "PUSH",
											"source": 14,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1943,
											"end": 1948,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 1943,
											"end": 1954,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 1930,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "tag",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 14,
											"value": "F8"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1924,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 1918,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "BYTE",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "MSTORE8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1979,
											"end": 1980,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 1899,
											"end": 1902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17966,
											"end": 17968,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17948,
											"end": 17969,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17948,
											"end": 17969,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17948,
											"end": 17969,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17985,
											"end": 18003,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17985,
											"end": 18003,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17985,
											"end": 18003,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17978,
											"end": 18008,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18044,
											"end": 18078,
											"name": "PUSH",
											"source": 15,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 18024,
											"end": 18042,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 18024,
											"end": 18042,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18024,
											"end": 18042,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18017,
											"end": 18079,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18096,
											"end": 18114,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 18096,
											"end": 18114,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 17764,
											"end": 18120,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5818,
											"end": 5941,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 5818,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 5892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5911,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 5916,
											"end": 5919,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5928,
											"end": 5933,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 5911,
											"end": 5934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2685,
											"end": 4073,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 2685,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2751,
											"end": 2755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2937,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2937,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3291,
											"end": 3312,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3315,
											"end": 3325,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 3315,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3291,
											"end": 3329,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3291,
											"end": 3329,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3343,
											"end": 3360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3360,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 3363,
											"end": 3385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3413,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3430,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3467,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3473,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 3470,
											"end": 3492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3492,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3621,
											"end": 3630,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3595,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 3592,
											"end": 3618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 3876,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3971,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3980,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3968,
											"end": 3980,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 3986,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4009,
											"end": 4013,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4051,
											"end": 4056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2113,
											"end": 2517,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 2113,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2245,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2432,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2432,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2446,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 2446,
											"end": 2457,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2495,
											"end": 2500,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 629,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 14,
											"end": 629,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 100,
											"end": 106,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 114,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 161,
											"end": 163,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 149,
											"end": 158,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 140,
											"end": 147,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 136,
											"end": 159,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 132,
											"end": 164,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 129,
											"end": 181,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 129,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 129,
											"end": 181,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 129,
											"end": 181,
											"name": "tag",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 129,
											"end": 181,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 217,
											"end": 226,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 204,
											"end": 227,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 246,
											"end": 264,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 287,
											"end": 289,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 279,
											"end": 285,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 276,
											"end": 290,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 273,
											"end": 307,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 273,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 273,
											"end": 307,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 303,
											"end": 304,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 301,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 293,
											"end": 305,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 273,
											"end": 307,
											"name": "tag",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 273,
											"end": 307,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 341,
											"end": 347,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 330,
											"end": 339,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 326,
											"end": 348,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 316,
											"end": 348,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 316,
											"end": 348,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 386,
											"end": 393,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 379,
											"end": 383,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 375,
											"end": 377,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 371,
											"end": 384,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 367,
											"end": 394,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 357,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 357,
											"end": 412,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 408,
											"end": 409,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 406,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 398,
											"end": 410,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 357,
											"end": 412,
											"name": "tag",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 357,
											"end": 412,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 448,
											"end": 450,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 435,
											"end": 451,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 474,
											"end": 476,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 466,
											"end": 472,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 463,
											"end": 477,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 460,
											"end": 494,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 460,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 460,
											"end": 494,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 490,
											"end": 491,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 480,
											"end": 492,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 460,
											"end": 494,
											"name": "tag",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 460,
											"end": 494,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 543,
											"end": 550,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 538,
											"end": 540,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 521,
											"end": 535,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 517,
											"end": 519,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 513,
											"end": 536,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 509,
											"end": 541,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 506,
											"end": 551,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 503,
											"end": 568,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 503,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 503,
											"end": 568,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 564,
											"end": 565,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 562,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 554,
											"end": 566,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 503,
											"end": 568,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 503,
											"end": 568,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 587,
											"end": 598,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 587,
											"end": 598,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 598,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 587,
											"end": 598,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 587,
											"end": 598,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 617,
											"end": 623,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 617,
											"end": 623,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 629,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14,
											"end": 629,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 634,
											"end": 966,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 634,
											"end": 966,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 692,
											"end": 698,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 747,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 742,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 724,
											"end": 731,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 720,
											"end": 743,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 716,
											"end": 748,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 713,
											"end": 765,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 713,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 713,
											"end": 765,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 761,
											"end": 762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 759,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 751,
											"end": 763,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 713,
											"end": 765,
											"name": "tag",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 713,
											"end": 765,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 800,
											"end": 809,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 787,
											"end": 810,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 850,
											"end": 916,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 843,
											"end": 848,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 839,
											"end": 917,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 832,
											"end": 837,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 829,
											"end": 918,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 819,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 819,
											"end": 936,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 932,
											"end": 933,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 930,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 922,
											"end": 934,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1163,
											"end": 1413,
											"name": "tag",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 1163,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1371,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 1258,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1258,
											"end": 1371,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1258,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 1258,
											"end": 1371,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1348,
											"end": 1359,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1348,
											"end": 1359,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1348,
											"end": 1359,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1342,
											"end": 1360,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1329,
											"end": 1340,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1329,
											"end": 1340,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1329,
											"end": 1340,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1361,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1294,
											"end": 1296,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1258,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 1258,
											"end": 1371,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1258,
											"end": 1371,
											"name": "tag",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 1258,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1403,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1387,
											"end": 1403,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1380,
											"end": 1407,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1163,
											"end": 1413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1418,
											"end": 1873,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1418,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1567,
											"end": 1569,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1549,
											"end": 1570,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1530,
											"end": 1534,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1605,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1593,
											"end": 1606,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1642,
											"end": 1648,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1639,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1622,
											"end": 1640,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1615,
											"end": 1649,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1658,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 1730,
											"end": 1736,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1727,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1723,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1710,
											"end": 1728,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1693,
											"end": 1708,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1658,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 1658,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1658,
											"end": 1737,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 1658,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1789,
											"end": 1791,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1777,
											"end": 1792,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1794,
											"end": 1860,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1773,
											"end": 1861,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1758,
											"end": 1862,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1758,
											"end": 1862,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1758,
											"end": 1862,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1758,
											"end": 1862,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1867,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1754,
											"end": 1867,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1418,
											"end": 1873,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1418,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1878,
											"end": 2062,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 1878,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1930,
											"end": 2007,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1927,
											"end": 1928,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2008,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2027,
											"end": 2031,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2017,
											"end": 2032,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2051,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2067,
											"end": 2845,
											"name": "tag",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 2067,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2110,
											"end": 2115,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2166,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2156,
											"end": 2160,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2148,
											"end": 2154,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2140,
											"end": 2167,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2181,
											"end": 2182,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "tag",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2217,
											"end": 2223,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2243,
											"end": 2261,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2280,
											"end": 2282,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2276,
											"end": 2278,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2273,
											"end": 2283,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2270,
											"end": 2306,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2270,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 2270,
											"end": 2306,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2286,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 2286,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 2286,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2286,
											"end": 2304,
											"name": "tag",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 2286,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2420,
											"end": 2422,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2482,
											"end": 2486,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2474,
											"end": 2487,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2474,
											"end": 2487,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2325,
											"end": 2391,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 2470,
											"end": 2492,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2470,
											"end": 2492,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2470,
											"end": 2492,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2496,
											"name": "PUSH",
											"source": 15,
											"value": "3F"
										},
										{
											"begin": 2466,
											"end": 2497,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2538,
											"end": 2560,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2538,
											"end": 2560,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2538,
											"end": 2560,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2515,
											"end": 2561,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 2512,
											"end": 2584,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2512,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 2512,
											"end": 2584,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2564,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 2564,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 2564,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2564,
											"end": 2582,
											"name": "tag",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 2564,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2604,
											"end": 2614,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2600,
											"end": 2602,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2615,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2639,
											"end": 2641,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2631,
											"end": 2637,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2685,
											"end": 2688,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2678,
											"end": 2682,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2665,
											"end": 2671,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2657,
											"end": 2683,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2654,
											"end": 2689,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2651,
											"end": 2706,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2651,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 2651,
											"end": 2706,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2702,
											"end": 2703,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2700,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2692,
											"end": 2704,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2651,
											"end": 2706,
											"name": "tag",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 2651,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2766,
											"end": 2768,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2759,
											"end": 2763,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2747,
											"end": 2764,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2740,
											"end": 2744,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2732,
											"end": 2738,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2728,
											"end": 2745,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2715,
											"end": 2769,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 2813,
											"end": 2814,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2810,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2801,
											"end": 2803,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2785,
											"end": 2811,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2778,
											"end": 2815,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2824,
											"end": 2839,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2067,
											"end": 2845,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2067,
											"end": 2845,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2067,
											"end": 2845,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2067,
											"end": 2845,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2067,
											"end": 2845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2850,
											"end": 3046,
											"name": "tag",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 2850,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2918,
											"end": 2938,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2918,
											"end": 2938,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 3021,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2967,
											"end": 3021,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2957,
											"end": 3022,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2957,
											"end": 3022,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2947,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 2947,
											"end": 3040,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3036,
											"end": 3037,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3034,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3026,
											"end": 3038,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2947,
											"end": 3040,
											"name": "tag",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 2947,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2850,
											"end": 3046,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2850,
											"end": 3046,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2850,
											"end": 3046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2850,
											"end": 3046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3051,
											"end": 3668,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 3051,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3148,
											"end": 3154,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3164,
											"end": 3170,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3185,
											"end": 3237,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3185,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 3185,
											"end": 3237,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3233,
											"end": 3234,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3231,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3223,
											"end": 3235,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3185,
											"end": 3237,
											"name": "tag",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 3185,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3273,
											"end": 3282,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3260,
											"end": 3283,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3302,
											"end": 3320,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3343,
											"end": 3345,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3335,
											"end": 3341,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3332,
											"end": 3346,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3329,
											"end": 3363,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3329,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 3329,
											"end": 3363,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3359,
											"end": 3360,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3357,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3349,
											"end": 3361,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3329,
											"end": 3363,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 3329,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3382,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 3424,
											"end": 3431,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3415,
											"end": 3421,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3404,
											"end": 3413,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3400,
											"end": 3422,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3382,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 3382,
											"end": 3432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3382,
											"end": 3432,
											"name": "tag",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 3382,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3372,
											"end": 3432,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3372,
											"end": 3432,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3487,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3474,
											"end": 3483,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3441,
											"end": 3489,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3441,
											"end": 3489,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3514,
											"end": 3516,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3504,
											"end": 3512,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3501,
											"end": 3517,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3530,
											"end": 3531,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3528,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3520,
											"end": 3532,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "tag",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3553,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3586,
											"end": 3594,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3575,
											"end": 3584,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3553,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 3553,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3553,
											"end": 3605,
											"name": "tag",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 3553,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3543,
											"end": 3605,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3543,
											"end": 3605,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3543,
											"end": 3605,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3624,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 3658,
											"end": 3660,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3647,
											"end": 3656,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3624,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 3624,
											"end": 3662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3624,
											"end": 3662,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 3624,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3614,
											"end": 3662,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3614,
											"end": 3662,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3051,
											"end": 3668,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3051,
											"end": 3668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3051,
											"end": 3668,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3051,
											"end": 3668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3051,
											"end": 3668,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3051,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3855,
											"end": 4035,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 3855,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3914,
											"end": 3920,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3964,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3946,
											"end": 3953,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3942,
											"end": 3965,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3938,
											"end": 3970,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3935,
											"end": 3987,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3935,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 3935,
											"end": 3987,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3983,
											"end": 3984,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 3981,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3973,
											"end": 3985,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3935,
											"end": 3987,
											"name": "tag",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 3935,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4006,
											"end": 4029,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4006,
											"end": 4029,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3855,
											"end": 4035,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 4035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4222,
											"end": 4408,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 4222,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4281,
											"end": 4287,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4336,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4322,
											"end": 4331,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4313,
											"end": 4320,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4309,
											"end": 4332,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4305,
											"end": 4337,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4302,
											"end": 4354,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4302,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 4302,
											"end": 4354,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4348,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4340,
											"end": 4352,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4302,
											"end": 4354,
											"name": "tag",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 4302,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4373,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 4392,
											"end": 4401,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4373,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 4373,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4413,
											"end": 4667,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 4413,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4481,
											"end": 4487,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4489,
											"end": 4495,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4542,
											"end": 4544,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4530,
											"end": 4539,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4521,
											"end": 4528,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4517,
											"end": 4540,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4513,
											"end": 4545,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4510,
											"end": 4562,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4510,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 4510,
											"end": 4562,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4558,
											"end": 4559,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4555,
											"end": 4556,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4510,
											"end": 4562,
											"name": "tag",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 4510,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4603,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4581,
											"end": 4604,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4571,
											"end": 4604,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4571,
											"end": 4604,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4623,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 4657,
											"end": 4659,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4646,
											"end": 4655,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4642,
											"end": 4660,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4623,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 4623,
											"end": 4661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4623,
											"end": 4661,
											"name": "tag",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 4623,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4613,
											"end": 4661,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4613,
											"end": 4661,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4413,
											"end": 4667,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4413,
											"end": 4667,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4413,
											"end": 4667,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4413,
											"end": 4667,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4413,
											"end": 4667,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4413,
											"end": 4667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4672,
											"end": 5264,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 4672,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4751,
											"end": 4757,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4804,
											"end": 4806,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4792,
											"end": 4801,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 4790,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4779,
											"end": 4802,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4775,
											"end": 4807,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4772,
											"end": 4824,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4772,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 4772,
											"end": 4824,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4820,
											"end": 4821,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4817,
											"end": 4818,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4810,
											"end": 4822,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4772,
											"end": 4824,
											"name": "tag",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 4772,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4860,
											"end": 4869,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4847,
											"end": 4870,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4889,
											"end": 4907,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4930,
											"end": 4932,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4922,
											"end": 4928,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4916,
											"end": 4950,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4916,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 4916,
											"end": 4950,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4946,
											"end": 4947,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4943,
											"end": 4944,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4936,
											"end": 4948,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4916,
											"end": 4950,
											"name": "tag",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 4916,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4973,
											"end": 4982,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4969,
											"end": 4991,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4959,
											"end": 4991,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4959,
											"end": 4991,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5029,
											"end": 5036,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5022,
											"end": 5026,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5018,
											"end": 5020,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5014,
											"end": 5027,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5010,
											"end": 5037,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5000,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 5000,
											"end": 5055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5049,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5041,
											"end": 5053,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5000,
											"end": 5055,
											"name": "tag",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 5000,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5091,
											"end": 5093,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5078,
											"end": 5094,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5109,
											"end": 5115,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5103,
											"end": 5137,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5103,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 5103,
											"end": 5137,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5133,
											"end": 5134,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5130,
											"end": 5131,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5123,
											"end": 5135,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5103,
											"end": 5137,
											"name": "tag",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 5103,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5178,
											"end": 5185,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5173,
											"end": 5175,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5164,
											"end": 5170,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5160,
											"end": 5162,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5156,
											"end": 5171,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5152,
											"end": 5176,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5149,
											"end": 5186,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5146,
											"end": 5203,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5146,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 5146,
											"end": 5203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5199,
											"end": 5200,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5196,
											"end": 5197,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5189,
											"end": 5201,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6511,
											"end": 6695,
											"name": "tag",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 6511,
											"end": 6695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6563,
											"end": 6640,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6560,
											"end": 6561,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6641,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6660,
											"end": 6664,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 6657,
											"end": 6658,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6650,
											"end": 6665,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6684,
											"end": 6688,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6681,
											"end": 6682,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6700,
											"end": 6884,
											"name": "tag",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 6700,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6752,
											"end": 6829,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6749,
											"end": 6750,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6742,
											"end": 6830,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6849,
											"end": 6853,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 6846,
											"end": 6847,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6839,
											"end": 6854,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6878,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6889,
											"end": 7064,
											"name": "tag",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 6889,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6974,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 6963,
											"end": 6968,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6959,
											"end": 6975,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6999,
											"end": 7003,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 6990,
											"end": 6997,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6987,
											"end": 7004,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 6984,
											"end": 7027,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 7007,
											"end": 7025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "tag",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7056,
											"end": 7057,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7043,
											"end": 7058,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7043,
											"end": 7058,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6889,
											"end": 7064,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6889,
											"end": 7064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7069,
											"end": 7506,
											"name": "tag",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 7069,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7148,
											"end": 7149,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7144,
											"end": 7156,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7144,
											"end": 7156,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7144,
											"end": 7156,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 7144,
											"end": 7156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7191,
											"end": 7203,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7191,
											"end": 7203,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7191,
											"end": 7203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7212,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 7212,
											"end": 7273,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7266,
											"end": 7270,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 7258,
											"end": 7264,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7254,
											"end": 7271,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7244,
											"end": 7271,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7244,
											"end": 7271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7212,
											"end": 7273,
											"name": "tag",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 7212,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7319,
											"end": 7321,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7308,
											"end": 7322,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7288,
											"end": 7306,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7285,
											"end": 7323,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 7282,
											"end": 7500,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7356,
											"end": 7433,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7353,
											"end": 7354,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7346,
											"end": 7434,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7457,
											"end": 7461,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 7454,
											"end": 7455,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7447,
											"end": 7462,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7485,
											"end": 7489,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7482,
											"end": 7483,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7490,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7500,
											"name": "tag",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 7282,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7500,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7069,
											"end": 7506,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7069,
											"end": 7506,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7069,
											"end": 7506,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7069,
											"end": 7506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8052,
											"end": 8597,
											"name": "tag",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 8052,
											"end": 8597,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8154,
											"end": 8156,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8149,
											"end": 8152,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8146,
											"end": 8157,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8143,
											"end": 8591,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8143,
											"end": 8591,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 8143,
											"end": 8591,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8190,
											"end": 8191,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8215,
											"end": 8220,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8211,
											"end": 8213,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8204,
											"end": 8221,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8260,
											"end": 8264,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8256,
											"end": 8258,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8246,
											"end": 8265,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 8330,
											"end": 8332,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8318,
											"end": 8328,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8314,
											"end": 8333,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8311,
											"end": 8312,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 8307,
											"end": 8334,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 8301,
											"end": 8305,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8297,
											"end": 8335,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8366,
											"end": 8370,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8354,
											"end": 8364,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8351,
											"end": 8371,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 8348,
											"end": 8395,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8348,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 8348,
											"end": 8395,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8389,
											"end": 8393,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8348,
											"end": 8395,
											"name": "tag",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 8348,
											"end": 8395,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8444,
											"end": 8446,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8439,
											"end": 8442,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8435,
											"end": 8447,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8432,
											"end": 8433,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 8428,
											"end": 8448,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 8422,
											"end": 8426,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8418,
											"end": 8449,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8408,
											"end": 8449,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8408,
											"end": 8449,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8499,
											"end": 8581,
											"name": "tag",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 8499,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8519,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8510,
											"end": 8515,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8507,
											"end": 8520,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 8499,
											"end": 8581,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8499,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 8499,
											"end": 8581,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8562,
											"end": 8579,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8562,
											"end": 8579,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8562,
											"end": 8579,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 8543,
											"end": 8544,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8532,
											"end": 8545,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8499,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 8499,
											"end": 8581,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8499,
											"end": 8581,
											"name": "tag",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 8499,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8503,
											"end": 8506,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8503,
											"end": 8506,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8503,
											"end": 8506,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8052,
											"end": 8597,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8052,
											"end": 8597,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8052,
											"end": 8597,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8052,
											"end": 8597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8833,
											"end": 10304,
											"name": "tag",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 8833,
											"end": 10304,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8959,
											"end": 8962,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8953,
											"end": 8963,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8978,
											"end": 8984,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8975,
											"end": 9005,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8972,
											"end": 9028,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8972,
											"end": 9028,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 8972,
											"end": 9028,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 9008,
											"end": 9026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "tag",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9037,
											"end": 9134,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 9127,
											"end": 9133,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9087,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 9119,
											"end": 9123,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9113,
											"end": 9124,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 9087,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 9087,
											"end": 9125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9087,
											"end": 9125,
											"name": "tag",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 9087,
											"end": 9125,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9081,
											"end": 9085,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9037,
											"end": 9134,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 9037,
											"end": 9134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9037,
											"end": 9134,
											"name": "tag",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 9037,
											"end": 9134,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9189,
											"end": 9193,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9189,
											"end": 9193,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9253,
											"end": 9255,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 9242,
											"end": 9256,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9242,
											"end": 9256,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9270,
											"end": 9271,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 9265,
											"end": 10047,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9265,
											"end": 10047,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9265,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 9265,
											"end": 10047,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10108,
											"end": 10114,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10105,
											"end": 10194,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10105,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 10105,
											"end": 10194,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10160,
											"end": 10179,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10160,
											"end": 10179,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10160,
											"end": 10179,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10154,
											"end": 10180,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10105,
											"end": 10194,
											"name": "tag",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 10105,
											"end": 10194,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8739,
											"end": 8805,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8730,
											"end": 8731,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 8726,
											"end": 8737,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8726,
											"end": 8737,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8726,
											"end": 8737,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 8722,
											"end": 8806,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 8718,
											"end": 8807,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 8708,
											"end": 8808,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8814,
											"end": 8815,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8821,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8810,
											"end": 8821,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8810,
											"end": 8821,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 8705,
											"end": 8822,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 10207,
											"end": 10288,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10207,
											"end": 10288,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 9235,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 9235,
											"end": 10298,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9265,
											"end": 10047,
											"name": "tag",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 9265,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7999,
											"end": 8000,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8036,
											"end": 8040,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 9313,
											"end": 9379,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 9301,
											"end": 9380,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9301,
											"end": 9380,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9301,
											"end": 9380,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9478,
											"end": 9714,
											"name": "tag",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 9478,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9492,
											"end": 9499,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9489,
											"end": 9490,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9486,
											"end": 9500,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 9478,
											"end": 9714,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9478,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 9478,
											"end": 9714,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9581,
											"end": 9600,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9581,
											"end": 9600,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9581,
											"end": 9600,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9575,
											"end": 9601,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9560,
											"end": 9602,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9560,
											"end": 9602,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 9673,
											"end": 9700,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9673,
											"end": 9700,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9673,
											"end": 9700,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9673,
											"end": 9700,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9641,
											"end": 9642,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 9629,
											"end": 9643,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9629,
											"end": 9643,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9629,
											"end": 9643,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9629,
											"end": 9643,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9508,
											"end": 9527,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9508,
											"end": 9527,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9478,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 9478,
											"end": 9714,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9478,
											"end": 9714,
											"name": "tag",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 9478,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9482,
											"end": 9485,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9742,
											"end": 9748,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9733,
											"end": 9740,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9730,
											"end": 9749,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 9727,
											"end": 9988,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9727,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 9727,
											"end": 9988,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9803,
											"end": 9822,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9803,
											"end": 9822,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9803,
											"end": 9822,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9797,
											"end": 9823,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9904,
											"end": 9970,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9886,
											"end": 9887,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 9882,
											"end": 9896,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9882,
											"end": 9896,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9882,
											"end": 9896,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9898,
											"end": 9901,
											"name": "PUSH",
											"source": 15,
											"value": "F8"
										},
										{
											"begin": 9878,
											"end": 9902,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9874,
											"end": 9971,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 9870,
											"end": 9972,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 9855,
											"end": 9973,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9840,
											"end": 9974,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9840,
											"end": 9974,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 9727,
											"end": 9988,
											"name": "tag",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 9727,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10034,
											"end": 10035,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10018,
											"end": 10032,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10018,
											"end": 10032,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10018,
											"end": 10032,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 10014,
											"end": 10036,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10001,
											"end": 10037,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10001,
											"end": 10037,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8833,
											"end": 10304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10974,
											"end": 12299,
											"name": "tag",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 10974,
											"end": 12299,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11093,
											"end": 11096,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11090,
											"end": 11117,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 11087,
											"end": 11140,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11087,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 11087,
											"end": 11140,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11120,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 11120,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 11120,
											"end": 11138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11120,
											"end": 11138,
											"name": "tag",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 11120,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11149,
											"end": 11243,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 11239,
											"end": 11242,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11199,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 11231,
											"end": 11235,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11225,
											"end": 11236,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 11199,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 11199,
											"end": 11237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11199,
											"end": 11237,
											"name": "tag",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 11199,
											"end": 11237,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11193,
											"end": 11197,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11149,
											"end": 11243,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 11149,
											"end": 11243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11149,
											"end": 11243,
											"name": "tag",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 11149,
											"end": 11243,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11269,
											"end": 11270,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11294,
											"end": 11296,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 11289,
											"end": 11292,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11286,
											"end": 11297,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 11311,
											"end": 11312,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11306,
											"end": 12041,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11306,
											"end": 12041,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 11306,
											"end": 12041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 11306,
											"end": 12041,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12085,
											"end": 12086,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12102,
											"end": 12105,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12099,
											"end": 12192,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12099,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 12099,
											"end": 12192,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12158,
											"end": 12177,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12158,
											"end": 12177,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12158,
											"end": 12177,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12145,
											"end": 12178,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 12099,
											"end": 12192,
											"name": "tag",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 12099,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8739,
											"end": 8805,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8730,
											"end": 8731,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 8726,
											"end": 8737,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 8726,
											"end": 8737,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8726,
											"end": 8737,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 8722,
											"end": 8806,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 8718,
											"end": 8807,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 8708,
											"end": 8808,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8814,
											"end": 8815,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8821,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8810,
											"end": 8821,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8810,
											"end": 8821,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 8705,
											"end": 8822,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 12205,
											"end": 12283,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12205,
											"end": 12283,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 11279,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "575"
										},
										{
											"begin": 11279,
											"end": 12293,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11306,
											"end": 12041,
											"name": "tag",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 11306,
											"end": 12041,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7999,
											"end": 8000,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8036,
											"end": 8040,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 11351,
											"end": 11417,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 11342,
											"end": 11418,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11342,
											"end": 11418,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11342,
											"end": 11418,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11502,
											"end": 11511,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11524,
											"end": 11753,
											"name": "tag",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 11524,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11538,
											"end": 11545,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11535,
											"end": 11536,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11532,
											"end": 11546,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 11524,
											"end": 11753,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11524,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 11524,
											"end": 11753,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11627,
											"end": 11646,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11627,
											"end": 11646,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11627,
											"end": 11646,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11614,
											"end": 11647,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11599,
											"end": 11648,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11599,
											"end": 11648,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 11734,
											"end": 11738,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11719,
											"end": 11739,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 11719,
											"end": 11739,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11719,
											"end": 11739,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11719,
											"end": 11739,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 11687,
											"end": 11688,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11675,
											"end": 11689,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11675,
											"end": 11689,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11675,
											"end": 11689,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11675,
											"end": 11689,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11554,
											"end": 11566,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11524,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 11524,
											"end": 11753,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11524,
											"end": 11753,
											"name": "tag",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 11524,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11528,
											"end": 11531,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11781,
											"end": 11784,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11772,
											"end": 11779,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11769,
											"end": 11785,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 11766,
											"end": 11985,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11766,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 11766,
											"end": 11985,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11901,
											"end": 11967,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11895,
											"end": 11898,
											"name": "PUSH",
											"source": 15,
											"value": "F8"
										},
										{
											"begin": 11889,
											"end": 11892,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11886,
											"end": 11887,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 11882,
											"end": 11893,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 11878,
											"end": 11899,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11874,
											"end": 11968,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 11870,
											"end": 11969,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 11857,
											"end": 11866,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11852,
											"end": 11855,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 11848,
											"end": 11867,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11835,
											"end": 11868,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11831,
											"end": 11970,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11823,
											"end": 11829,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11816,
											"end": 11971,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 11766,
											"end": 11985,
											"name": "tag",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 11766,
											"end": 11985,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11766,
											"end": 11985,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11766,
											"end": 11985,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12028,
											"end": 12029,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 12022,
											"end": 12025,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12019,
											"end": 12020,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 12015,
											"end": 12026,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 12011,
											"end": 12030,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12005,
											"end": 12009,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11998,
											"end": 12031,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 11279,
											"end": 12293,
											"name": "tag",
											"source": 15,
											"value": "575"
										},
										{
											"begin": 11279,
											"end": 12293,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11279,
											"end": 12293,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11279,
											"end": 12293,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10974,
											"end": 12299,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10974,
											"end": 12299,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10974,
											"end": 12299,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10974,
											"end": 12299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13890,
											"end": 14968,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 13890,
											"end": 14968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14066,
											"end": 14069,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14095,
											"end": 14096,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14128,
											"end": 14134,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14122,
											"end": 14135,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 14158,
											"end": 14194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "589"
										},
										{
											"begin": 14184,
											"end": 14193,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14158,
											"end": 14194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 14158,
											"end": 14194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14158,
											"end": 14194,
											"name": "tag",
											"source": 15,
											"value": "589"
										},
										{
											"begin": 14158,
											"end": 14194,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14213,
											"end": 14214,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 14230,
											"end": 14248,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14230,
											"end": 14248,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14230,
											"end": 14248,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 14257,
											"end": 14448,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14257,
											"end": 14448,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14257,
											"end": 14448,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 14257,
											"end": 14448,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14462,
											"end": 14463,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 14457,
											"end": 14813,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14457,
											"end": 14813,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 14457,
											"end": 14813,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 14457,
											"end": 14813,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14223,
											"end": 14813,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 14223,
											"end": 14813,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14257,
											"end": 14448,
											"name": "tag",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 14257,
											"end": 14448,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14305,
											"end": 14371,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 14294,
											"end": 14303,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14290,
											"end": 14372,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 14285,
											"end": 14288,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 14278,
											"end": 14373,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14428,
											"end": 14434,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14421,
											"end": 14435,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14414,
											"end": 14436,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14406,
											"end": 14412,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14402,
											"end": 14437,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 14397,
											"end": 14400,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 14393,
											"end": 14438,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14386,
											"end": 14438,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 14386,
											"end": 14438,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14257,
											"end": 14448,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 14257,
											"end": 14448,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14457,
											"end": 14813,
											"name": "tag",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 14457,
											"end": 14813,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14488,
											"end": 14494,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 14485,
											"end": 14486,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14478,
											"end": 14495,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14518,
											"end": 14522,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14563,
											"end": 14565,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14560,
											"end": 14561,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14550,
											"end": 14566,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 14588,
											"end": 14589,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14602,
											"end": 14767,
											"name": "tag",
											"source": 15,
											"value": "593"
										},
										{
											"begin": 14602,
											"end": 14767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14616,
											"end": 14622,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14613,
											"end": 14614,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14610,
											"end": 14623,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 14602,
											"end": 14767,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14602,
											"end": 14767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "595"
										},
										{
											"begin": 14602,
											"end": 14767,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14694,
											"end": 14708,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14694,
											"end": 14708,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 14681,
											"end": 14692,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 14681,
											"end": 14692,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14681,
											"end": 14692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14674,
											"end": 14709,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14737,
											"end": 14753,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14737,
											"end": 14753,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14737,
											"end": 14753,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14737,
											"end": 14753,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14631,
											"end": 14641,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14631,
											"end": 14641,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14602,
											"end": 14767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "593"
										},
										{
											"begin": 14602,
											"end": 14767,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14602,
											"end": 14767,
											"name": "tag",
											"source": 15,
											"value": "595"
										},
										{
											"begin": 14602,
											"end": 14767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14606,
											"end": 14609,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14606,
											"end": 14609,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14606,
											"end": 14609,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14796,
											"end": 14802,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14791,
											"end": 14794,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 14787,
											"end": 14803,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14780,
											"end": 14803,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 14780,
											"end": 14803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14223,
											"end": 14813,
											"name": "tag",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 14223,
											"end": 14813,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14223,
											"end": 14813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14223,
											"end": 14813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14223,
											"end": 14813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14223,
											"end": 14813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14844,
											"end": 14850,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14838,
											"end": 14851,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 14860,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 14919,
											"end": 14927,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14914,
											"end": 14917,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14907,
											"end": 14911,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14899,
											"end": 14905,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 14895,
											"end": 14912,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14860,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 14860,
											"end": 14928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14860,
											"end": 14928,
											"name": "tag",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 14860,
											"end": 14928,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14944,
											"end": 14962,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14944,
											"end": 14962,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 13890,
											"end": 14968,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13890,
											"end": 14968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15320,
											"end": 15515,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 15320,
											"end": 15515,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15359,
											"end": 15362,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15390,
											"end": 15456,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15383,
											"end": 15388,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15380,
											"end": 15457,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15377,
											"end": 15480,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 15377,
											"end": 15480,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15460,
											"end": 15478,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 15460,
											"end": 15478,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 15460,
											"end": 15478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15460,
											"end": 15478,
											"name": "tag",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 15460,
											"end": 15478,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15507,
											"end": 15508,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 15496,
											"end": 15509,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15496,
											"end": 15509,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15320,
											"end": 15515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15520,
											"end": 15704,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 15520,
											"end": 15704,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15572,
											"end": 15649,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15569,
											"end": 15570,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15562,
											"end": 15650,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15669,
											"end": 15673,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 15666,
											"end": 15667,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 15659,
											"end": 15674,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15693,
											"end": 15697,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 15690,
											"end": 15691,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15683,
											"end": 15698,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15709,
											"end": 15829,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 15709,
											"end": 15829,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15749,
											"end": 15750,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15775,
											"end": 15776,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15765,
											"end": 15800,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 15765,
											"end": 15800,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15780,
											"end": 15798,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 15780,
											"end": 15798,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 15780,
											"end": 15798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15780,
											"end": 15798,
											"name": "tag",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 15780,
											"end": 15798,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15814,
											"end": 15823,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 15814,
											"end": 15823,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15709,
											"end": 15829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15834,
											"end": 15962,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 15834,
											"end": 15962,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15901,
											"end": 15910,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15901,
											"end": 15910,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15901,
											"end": 15910,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15922,
											"end": 15933,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15922,
											"end": 15933,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15922,
											"end": 15933,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 15919,
											"end": 15956,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15919,
											"end": 15956,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 15919,
											"end": 15956,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15936,
											"end": 15954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 15936,
											"end": 15954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 15936,
											"end": 15954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15967,
											"end": 16079,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 15967,
											"end": 16079,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15999,
											"end": 16000,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16025,
											"end": 16026,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16015,
											"end": 16050,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 16015,
											"end": 16050,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16030,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 16030,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 16030,
											"end": 16048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16030,
											"end": 16048,
											"name": "tag",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 16030,
											"end": 16048,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16064,
											"end": 16073,
											"name": "MOD",
											"source": 15
										},
										{
											"begin": 16064,
											"end": 16073,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15967,
											"end": 16079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16084,
											"end": 16209,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 16084,
											"end": 16209,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16149,
											"end": 16158,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 16149,
											"end": 16158,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16149,
											"end": 16158,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16170,
											"end": 16180,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 16170,
											"end": 16180,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16170,
											"end": 16180,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 16167,
											"end": 16203,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16167,
											"end": 16203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 16167,
											"end": 16203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16183,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 16183,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 16183,
											"end": 16201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16573,
											"end": 17385,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 16573,
											"end": 17385,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16984,
											"end": 17009,
											"name": "PUSH",
											"source": 15,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 16979,
											"end": 16982,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16972,
											"end": 17010,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16954,
											"end": 16957,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17039,
											"end": 17045,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 17055,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 17123,
											"end": 17129,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17118,
											"end": 17120,
											"name": "PUSH",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 17113,
											"end": 17116,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17102,
											"end": 17106,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17094,
											"end": 17100,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 17090,
											"end": 17107,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17055,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 17055,
											"end": 17130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17055,
											"end": 17130,
											"name": "tag",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 17055,
											"end": 17130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17194,
											"end": 17213,
											"name": "PUSH",
											"source": 15,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 17189,
											"end": 17191,
											"name": "PUSH",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 17149,
											"end": 17165,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17149,
											"end": 17165,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17149,
											"end": 17165,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17181,
											"end": 17192,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17181,
											"end": 17192,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17181,
											"end": 17192,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17174,
											"end": 17214,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17239,
											"end": 17252,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17239,
											"end": 17252,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 17261,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "617"
										},
										{
											"begin": 17239,
											"end": 17252,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17323,
											"end": 17325,
											"name": "PUSH",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 17315,
											"end": 17326,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17315,
											"end": 17326,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17308,
											"end": 17312,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17296,
											"end": 17313,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 17296,
											"end": 17313,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17261,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 17261,
											"end": 17337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17261,
											"end": 17337,
											"name": "tag",
											"source": 15,
											"value": "617"
										},
										{
											"begin": 17261,
											"end": 17337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17357,
											"end": 17374,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17376,
											"end": 17378,
											"name": "PUSH",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 17353,
											"end": 17379,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17353,
											"end": 17379,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 16573,
											"end": 17385,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16573,
											"end": 17385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17390,
											"end": 17558,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 17390,
											"end": 17558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17463,
											"end": 17472,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17463,
											"end": 17472,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17463,
											"end": 17472,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 17494,
											"end": 17503,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17494,
											"end": 17503,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17511,
											"end": 17526,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17511,
											"end": 17526,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17511,
											"end": 17526,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 17505,
											"end": 17527,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17505,
											"end": 17527,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 17491,
											"end": 17528,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 17481,
											"end": 17552,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 17481,
											"end": 17552,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17532,
											"end": 17550,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 17532,
											"end": 17550,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 17532,
											"end": 17550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17563,
											"end": 17759,
											"name": "tag",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 17563,
											"end": 17759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17602,
											"end": 17605,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17630,
											"end": 17635,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17620,
											"end": 17659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 17620,
											"end": 17659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17639,
											"end": 17657,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 17639,
											"end": 17657,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 17639,
											"end": 17657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17639,
											"end": 17657,
											"name": "tag",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 17639,
											"end": 17657,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17686,
											"end": 17752,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17675,
											"end": 17753,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17675,
											"end": 17753,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17563,
											"end": 17759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18125,
											"end": 18309,
											"name": "tag",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 18125,
											"end": 18309,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18177,
											"end": 18254,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18174,
											"end": 18175,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18167,
											"end": 18255,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18274,
											"end": 18278,
											"name": "PUSH",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 18271,
											"end": 18272,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 18264,
											"end": 18279,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18298,
											"end": 18302,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18295,
											"end": 18296,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18288,
											"end": 18303,
											"name": "REVERT",
											"source": 15
										}
									],
									".data": {
										"4C0EF6BFA0A398FE3098D6B3C8BC2C4C45D120EC13B77201D29305B0ABB24397": "5468652077616c6c657420686173206e6f7420617474657374656420616e7920534254"
									}
								}
							},
							"sourceList": [
								"source/BinanceBABT/contracts/SBT.sol",
								"source/BinanceBABT/contracts/access/AccessControl.sol",
								"source/BinanceBABT/contracts/erc/ERC165.sol",
								"source/BinanceBABT/contracts/interfaces/IAccessControl.sol",
								"source/BinanceBABT/contracts/interfaces/IERC165.sol",
								"source/BinanceBABT/contracts/interfaces/IERC721.sol",
								"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol",
								"source/BinanceBABT/contracts/interfaces/ISBT721.sol",
								"source/BinanceBABT/contracts/utils/Address.sol",
								"source/BinanceBABT/contracts/utils/Context.sol",
								"source/BinanceBABT/contracts/utils/Counters.sol",
								"source/BinanceBABT/contracts/utils/EnumerableMap.sol",
								"source/BinanceBABT/contracts/utils/EnumerableSet.sol",
								"source/BinanceBABT/contracts/utils/Initializable.sol",
								"source/BinanceBABT/contracts/utils/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"OPERATOR_ROLE()": "f5b541a6",
							"attest(address)": "eb31403f",
							"balanceOf(address)": "70a08231",
							"batchAttest(address[])": "6c60144a",
							"batchRevoke(address[])": "011002df",
							"burn()": "44df8e70",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(string,string,address)": "077f224a",
							"isAdmin(address)": "24d7806c",
							"isOperator(address)": "6d70f7ae",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"renounceRole(bytes32,address)": "36568abe",
							"revoke(address)": "74a8f103",
							"revokeRole(bytes32,address)": "d547741f",
							"setBaseTokenURI(string)": "30176e13",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenIdOf(address)": "773c02d4",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Attest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"batchAttest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"batchRevoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setBaseTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"tokenIdOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest(address)\":{\"details\":\"Mints SBT Requirements: - `to` must be valid. - `to` must not exist. Emits a {Attest} event. Emits a {Transfer} event.\",\"returns\":{\"_0\":\"The tokenId of the minted SBT\"}},\"balanceOf(address)\":{\"details\":\"SBTs assigned to the zero address is considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of SBTs owned by `owner`, possibly zero\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(string,string,address)\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"ownerOf(uint256)\":{\"details\":\"SBTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"tokenId\":\"The identifier for an SBT\"},\"returns\":{\"_0\":\"The address of the owner bound to the SBT\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revoke(address)\":{\"details\":\"Revokes SBT Requirements: - `from` must exist. Emits a {Revoke} event. Emits a {Transfer} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setBaseTokenURI(string)\":{\"details\":\"Update _baseTokenURI\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenIdOf(address)\":{\"params\":{\"from\":\"The address of the SBT owner\"},\"returns\":{\"_0\":\"The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address\"}},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"stateVariables\":{\"name\":{\"details\":\"Returns the token collection name.\"},\"symbol\":{\"details\":\"Returns the token collection symbol.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Count all SBTs assigned to an owner\"},\"burn()\":{\"notice\":\"At any time, an SBT receiver must be able to  disassociate themselves from an SBT publicly through calling this  function. Emits a {Burn} event. Emits a {Transfer} event.\"},\"ownerOf(uint256)\":{\"notice\":\"Find the address bound to a SBT\"}},\"notice\":\"An experiment in Soul Bound Tokens (SBT's) following Vitalik's co-authored whitepaper at: https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4105763 I propose for a rename to Non-Transferable Tokens NTT's\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/SBT.sol\":\"SBT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/SBT.sol\":{\"keccak256\":\"0xc8daf29cf24ba34814ebc6df51976b3c48298aeef7adad63c02d36805be82d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4744b9031e1786da300c74292d96d35f8b79d0f11bbd32ae4d0045161fff63b3\",\"dweb:/ipfs/QmUUf7GHzb5ERBesB8VVBiMFfXauTz49YxvGXtnJcSi9R8\"]},\"source/BinanceBABT/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x2535e58470a436bfe7807c5aeb9fafb82e3b14ac2a793e11acd507bdfdfac5e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ff53d3d425ae902bcefedfc31080c49547169936558fd50b1894faeef8105c\",\"dweb:/ipfs/QmXm8rN2KxcbCqJ5soEof2krM9pPBEzy6QTr1eDZNY1Lq1\"]},\"source/BinanceBABT/contracts/erc/ERC165.sol\":{\"keccak256\":\"0xc479459e1497470e4d00d94714ca427d679f16f874ce0cb0fa0acc83723d0973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d779f928890f24f239d2559bd7afb084c8527a5ccbc825ffb69658a719c8d981\",\"dweb:/ipfs/Qmd7hJrXNF1LWKcZCTovtN1hy84KedS4vZgi4YwmSdGN3s\"]},\"source/BinanceBABT/contracts/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"source/BinanceBABT/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"source/BinanceBABT/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x40c6e1a38b9b98351b956cca757dcc693e6ed1b22afb30a7d6f8229641b450fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e95a323287da65d9cd99a043d32d044bcbf0af1b689322418512914e2ab3d52b\",\"dweb:/ipfs/QmT4dvf8g7WceSZM9Qrdiuf2cipb19LAhih3QcJwcDdvwN\"]},\"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0xd17d910ca6cb19eb8a0f0f818378c59ba23bc7e1f34ac48ce1c39cd0966571ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf89e1f49ddcfe7635ec5208f991579409e54920d86f4c520b66a51d98f9fa37\",\"dweb:/ipfs/QmfKxjojszJHZcrNZ45kAPXDspPYUyT1ZhzNsGhmLyo8Bj\"]},\"source/BinanceBABT/contracts/interfaces/ISBT721.sol\":{\"keccak256\":\"0x50ae47a39ddfa2f3679bb34960d2d3280eae2d7271bc3a6caecf97d7e2fb771d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75f2712131257c8b7f072e25cd0c38c665564db1c511fe103dacb44ac8f80c3\",\"dweb:/ipfs/QmdxKMJTgCYfvUpp3QHALnZUWtJBmh9Udw1H2HejRdJywX\"]},\"source/BinanceBABT/contracts/utils/Address.sol\":{\"keccak256\":\"0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a\",\"dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts\"]},\"source/BinanceBABT/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"source/BinanceBABT/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x1b8ac5ffdb80c20c9188267455197d9dcfeef46379aeb1b3a6cc622e879895ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e531d0792e4774e2edabb34a5bed8e96ac80a84e08ebd5ebf7a0d15185e4f37\",\"dweb:/ipfs/QmPwWjhL1phGiGfP5R8Kzp3bQuVigkornTcSy9KaQnou1E\"]},\"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"source/BinanceBABT/contracts/utils/Initializable.sol\":{\"keccak256\":\"0x1a72923481a292233164768c7e857cda2b9061f5c9ecceeae576d3ebd8858052\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58855430f25070211954c7e809dd39233094e402f01d5161ba3dcb8b5b355b48\",\"dweb:/ipfs/QmYbQQwwGZFukXSbqLAc1K5c1pw6BiXMfgMhFWR87RP5Cd\"]},\"source/BinanceBABT/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3439,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 3442,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 661,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)656_storage)"
							},
							{
								"astId": 38,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "_ownerMap",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(UintToAddressMap)2164_storage"
							},
							{
								"astId": 41,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "_tokenMap",
								"offset": 0,
								"slot": "5",
								"type": "t_struct(AddressToUintMap)2401_storage"
							},
							{
								"astId": 44,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "_tokenId",
								"offset": 0,
								"slot": "8",
								"type": "t_struct(Counter)1643_storage"
							},
							{
								"astId": 46,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "name",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							},
							{
								"astId": 48,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "symbol",
								"offset": 0,
								"slot": "10",
								"type": "t_string_storage"
							},
							{
								"astId": 50,
								"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
								"label": "_baseTokenURI",
								"offset": 0,
								"slot": "11",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)656_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)656_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressToUintMap)2401_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.AddressToUintMap",
								"members": [
									{
										"astId": 2400,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Bytes32ToBytes32Map)1727_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Bytes32Set)3038_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Bytes32Set",
								"members": [
									{
										"astId": 3037,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)2844_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Bytes32ToBytes32Map)1727_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.Bytes32ToBytes32Map",
								"members": [
									{
										"astId": 1722,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_keys",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Bytes32Set)3038_storage"
									},
									{
										"astId": 1726,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_values",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_bytes32,t_bytes32)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Counter)1643_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1642,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)656_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 653,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 655,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)2844_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 2839,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 2843,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UintToAddressMap)2164_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.UintToAddressMap",
								"members": [
									{
										"astId": 2163,
										"contract": "source/BinanceBABT/contracts/SBT.sol:SBT",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Bytes32ToBytes32Map)1727_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceOf(address)": {
								"notice": "Count all SBTs assigned to an owner"
							},
							"burn()": {
								"notice": "At any time, an SBT receiver must be able to  disassociate themselves from an SBT publicly through calling this  function. Emits a {Burn} event. Emits a {Transfer} event."
							},
							"ownerOf(uint256)": {
								"notice": "Find the address bound to a SBT"
							}
						},
						"notice": "An experiment in Soul Bound Tokens (SBT's) following Vitalik's co-authored whitepaper at: https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4105763 I propose for a rename to Non-Transferable Tokens NTT's",
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x2535e58470a436bfe7807c5aeb9fafb82e3b14ac2a793e11acd507bdfdfac5e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ff53d3d425ae902bcefedfc31080c49547169936558fd50b1894faeef8105c\",\"dweb:/ipfs/QmXm8rN2KxcbCqJ5soEof2krM9pPBEzy6QTr1eDZNY1Lq1\"]},\"source/BinanceBABT/contracts/erc/ERC165.sol\":{\"keccak256\":\"0xc479459e1497470e4d00d94714ca427d679f16f874ce0cb0fa0acc83723d0973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d779f928890f24f239d2559bd7afb084c8527a5ccbc825ffb69658a719c8d981\",\"dweb:/ipfs/Qmd7hJrXNF1LWKcZCTovtN1hy84KedS4vZgi4YwmSdGN3s\"]},\"source/BinanceBABT/contracts/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"source/BinanceBABT/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"source/BinanceBABT/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"source/BinanceBABT/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 661,
								"contract": "source/BinanceBABT/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)656_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)656_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)656_storage"
							},
							"t_struct(RoleData)656_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 653,
										"contract": "source/BinanceBABT/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 655,
										"contract": "source/BinanceBABT/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/erc/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/erc/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/erc/ERC165.sol\":{\"keccak256\":\"0xc479459e1497470e4d00d94714ca427d679f16f874ce0cb0fa0acc83723d0973\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d779f928890f24f239d2559bd7afb084c8527a5ccbc825ffb69658a719c8d981\",\"dweb:/ipfs/Qmd7hJrXNF1LWKcZCTovtN1hy84KedS4vZgi4YwmSdGN3s\"]},\"source/BinanceBABT/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/interfaces/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/interfaces/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/interfaces/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/interfaces/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"source/BinanceBABT/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x40c6e1a38b9b98351b956cca757dcc693e6ed1b22afb30a7d6f8229641b450fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e95a323287da65d9cd99a043d32d044bcbf0af1b689322418512914e2ab3d52b\",\"dweb:/ipfs/QmT4dvf8g7WceSZM9Qrdiuf2cipb19LAhih3QcJwcDdvwN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Attest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Revoke",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "attest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "revoke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "tokenIdOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"attest(address)": {
								"details": "Mints SBT Requirements: - `to` must be valid. - `to` must not exist. Emits a {Attest} event. Emits a {Transfer} event.",
								"returns": {
									"_0": "The tokenId of the minted SBT"
								}
							},
							"balanceOf(address)": {
								"details": "SBTs assigned to the zero address is considered invalid, and this function throws for queries about the zero address.",
								"params": {
									"owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of SBTs owned by `owner`, possibly zero"
								}
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "SBTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"tokenId": "The identifier for an SBT"
								},
								"returns": {
									"_0": "The address of the owner bound to the SBT"
								}
							},
							"revoke(address)": {
								"details": "Revokes SBT Requirements: - `from` must exist. Emits a {Revoke} event. Emits a {Transfer} event."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenIdOf(address)": {
								"params": {
									"from": "The address of the SBT owner"
								},
								"returns": {
									"_0": "The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address"
								}
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"attest(address)": "eb31403f",
							"balanceOf(address)": "70a08231",
							"burn()": "44df8e70",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"revoke(address)": "74a8f103",
							"symbol()": "95d89b41",
							"tokenIdOf(address)": "773c02d4",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Attest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"tokenIdOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"attest(address)\":{\"details\":\"Mints SBT Requirements: - `to` must be valid. - `to` must not exist. Emits a {Attest} event. Emits a {Transfer} event.\",\"returns\":{\"_0\":\"The tokenId of the minted SBT\"}},\"balanceOf(address)\":{\"details\":\"SBTs assigned to the zero address is considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of SBTs owned by `owner`, possibly zero\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"SBTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"tokenId\":\"The identifier for an SBT\"},\"returns\":{\"_0\":\"The address of the owner bound to the SBT\"}},\"revoke(address)\":{\"details\":\"Revokes SBT Requirements: - `from` must exist. Emits a {Revoke} event. Emits a {Transfer} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenIdOf(address)\":{\"params\":{\"from\":\"The address of the SBT owner\"},\"returns\":{\"_0\":\"The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Count all SBTs assigned to an owner\"},\"burn()\":{\"notice\":\"At any time, an SBT receiver must be able to  disassociate themselves from an SBT publicly through calling this  function. Emits a {Burn} event. Emits a {Transfer} event.\"},\"ownerOf(uint256)\":{\"notice\":\"Find the address bound to a SBT\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0xd17d910ca6cb19eb8a0f0f818378c59ba23bc7e1f34ac48ce1c39cd0966571ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf89e1f49ddcfe7635ec5208f991579409e54920d86f4c520b66a51d98f9fa37\",\"dweb:/ipfs/QmfKxjojszJHZcrNZ45kAPXDspPYUyT1ZhzNsGhmLyo8Bj\"]},\"source/BinanceBABT/contracts/interfaces/ISBT721.sol\":{\"keccak256\":\"0x50ae47a39ddfa2f3679bb34960d2d3280eae2d7271bc3a6caecf97d7e2fb771d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75f2712131257c8b7f072e25cd0c38c665564db1c511fe103dacb44ac8f80c3\",\"dweb:/ipfs/QmdxKMJTgCYfvUpp3QHALnZUWtJBmh9Udw1H2HejRdJywX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceOf(address)": {
								"notice": "Count all SBTs assigned to an owner"
							},
							"burn()": {
								"notice": "At any time, an SBT receiver must be able to  disassociate themselves from an SBT publicly through calling this  function. Emits a {Burn} event. Emits a {Transfer} event."
							},
							"ownerOf(uint256)": {
								"notice": "Find the address bound to a SBT"
							}
						},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/interfaces/ISBT721.sol": {
				"ISBT721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Attest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Revoke",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "attest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "revoke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "tokenIdOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Attest(address,uint256)": {
								"details": "This emits when a new token is created and bound to an account by any mechanism. Note: For a reliable `to` parameter, retrieve the transaction's authenticated `to` field."
							},
							"Burn(address,uint256)": {
								"details": "This emits when an existing SBT is burned by an account"
							},
							"Revoke(address,uint256)": {
								"details": "This emits when an existing SBT is revoked from an account and destroyed by any mechanism. Note: For a reliable `from` parameter, retrieve the transaction's authenticated `from` field."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"attest(address)": {
								"details": "Mints SBT Requirements: - `to` must be valid. - `to` must not exist. Emits a {Attest} event. Emits a {Transfer} event.",
								"returns": {
									"_0": "The tokenId of the minted SBT"
								}
							},
							"balanceOf(address)": {
								"details": "SBTs assigned to the zero address is considered invalid, and this function throws for queries about the zero address.",
								"params": {
									"owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of SBTs owned by `owner`, possibly zero"
								}
							},
							"ownerOf(uint256)": {
								"details": "SBTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"tokenId": "The identifier for an SBT"
								},
								"returns": {
									"_0": "The address of the owner bound to the SBT"
								}
							},
							"revoke(address)": {
								"details": "Revokes SBT Requirements: - `from` must exist. Emits a {Revoke} event. Emits a {Transfer} event."
							},
							"tokenIdOf(address)": {
								"params": {
									"from": "The address of the SBT owner"
								},
								"returns": {
									"_0": "The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address"
								}
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"attest(address)": "eb31403f",
							"balanceOf(address)": "70a08231",
							"burn()": "44df8e70",
							"ownerOf(uint256)": "6352211e",
							"revoke(address)": "74a8f103",
							"tokenIdOf(address)": "773c02d4",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Attest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"tokenIdOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Attest(address,uint256)\":{\"details\":\"This emits when a new token is created and bound to an account by any mechanism. Note: For a reliable `to` parameter, retrieve the transaction's authenticated `to` field.\"},\"Burn(address,uint256)\":{\"details\":\"This emits when an existing SBT is burned by an account\"},\"Revoke(address,uint256)\":{\"details\":\"This emits when an existing SBT is revoked from an account and destroyed by any mechanism. Note: For a reliable `from` parameter, retrieve the transaction's authenticated `from` field.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"attest(address)\":{\"details\":\"Mints SBT Requirements: - `to` must be valid. - `to` must not exist. Emits a {Attest} event. Emits a {Transfer} event.\",\"returns\":{\"_0\":\"The tokenId of the minted SBT\"}},\"balanceOf(address)\":{\"details\":\"SBTs assigned to the zero address is considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of SBTs owned by `owner`, possibly zero\"}},\"ownerOf(uint256)\":{\"details\":\"SBTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"tokenId\":\"The identifier for an SBT\"},\"returns\":{\"_0\":\"The address of the owner bound to the SBT\"}},\"revoke(address)\":{\"details\":\"Revokes SBT Requirements: - `from` must exist. Emits a {Revoke} event. Emits a {Transfer} event.\"},\"tokenIdOf(address)\":{\"params\":{\"from\":\"The address of the SBT owner\"},\"returns\":{\"_0\":\"The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Count all SBTs assigned to an owner\"},\"burn()\":{\"notice\":\"At any time, an SBT receiver must be able to  disassociate themselves from an SBT publicly through calling this  function. Emits a {Burn} event. Emits a {Transfer} event.\"},\"ownerOf(uint256)\":{\"notice\":\"Find the address bound to a SBT\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/interfaces/ISBT721.sol\":\"ISBT721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/interfaces/ISBT721.sol\":{\"keccak256\":\"0x50ae47a39ddfa2f3679bb34960d2d3280eae2d7271bc3a6caecf97d7e2fb771d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75f2712131257c8b7f072e25cd0c38c665564db1c511fe103dacb44ac8f80c3\",\"dweb:/ipfs/QmdxKMJTgCYfvUpp3QHALnZUWtJBmh9Udw1H2HejRdJywX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceOf(address)": {
								"notice": "Count all SBTs assigned to an owner"
							},
							"burn()": {
								"notice": "At any time, an SBT receiver must be able to  disassociate themselves from an SBT publicly through calling this  function. Emits a {Burn} event. Emits a {Transfer} event."
							},
							"ownerOf(uint256)": {
								"notice": "Find the address bound to a SBT"
							}
						},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/BinanceBABT/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/BinanceBABT/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200254e2ffbffff04bcdf47781611115a011e23a202221e39da0051576197301ff64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200254e2ffbffff04bcdf47781611115a011e23a202221e39da0051576197301ff64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL SLOAD 0xE2 SELFDESTRUCT 0xBF SELFDESTRUCT CREATE 0x4B 0xCD DELEGATECALL PUSH24 0x81611115A011E23A202221E39DA0051576197301FF64736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "194:8964:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200254e2ffbffff04bcdf47781611115a011e23a202221e39da0051576197301ff64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL SLOAD 0xE2 SELFDESTRUCT 0xBF SELFDESTRUCT CREATE 0x4B 0xCD DELEGATECALL PUSH24 0x81611115A011E23A202221E39DA0051576197301FF64736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "194:8964:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200254e2ffbffff04bcdf47781611115a011e23a202221e39da0051576197301ff64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"source/BinanceBABT/contracts/SBT.sol",
								"source/BinanceBABT/contracts/access/AccessControl.sol",
								"source/BinanceBABT/contracts/erc/ERC165.sol",
								"source/BinanceBABT/contracts/interfaces/IAccessControl.sol",
								"source/BinanceBABT/contracts/interfaces/IERC165.sol",
								"source/BinanceBABT/contracts/interfaces/IERC721.sol",
								"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol",
								"source/BinanceBABT/contracts/interfaces/ISBT721.sol",
								"source/BinanceBABT/contracts/utils/Address.sol",
								"source/BinanceBABT/contracts/utils/Context.sol",
								"source/BinanceBABT/contracts/utils/Counters.sol",
								"source/BinanceBABT/contracts/utils/EnumerableMap.sol",
								"source/BinanceBABT/contracts/utils/EnumerableSet.sol",
								"source/BinanceBABT/contracts/utils/Initializable.sol",
								"source/BinanceBABT/contracts/utils/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/utils/Address.sol\":{\"keccak256\":\"0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a\",\"dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/BinanceBABT/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/BinanceBABT/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a97dc297f8fe6e906c8b3ca7d993a0a0394263bea85e1b5de65748760184afaf64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a97dc297f8fe6e906c8b3ca7d993a0a0394263bea85e1b5de65748760184afaf64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 PUSH30 0xC297F8FE6E906C8B3CA7D993A0A0394263BEA85E1B5DE65748760184AFAF PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "424:971:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a97dc297f8fe6e906c8b3ca7d993a0a0394263bea85e1b5de65748760184afaf64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 PUSH30 0xC297F8FE6E906C8B3CA7D993A0A0394263BEA85E1B5DE65748760184AFAF PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "424:971:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a97dc297f8fe6e906c8b3ca7d993a0a0394263bea85e1b5de65748760184afaf64736f6c63430008110033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"source/BinanceBABT/contracts/SBT.sol",
								"source/BinanceBABT/contracts/access/AccessControl.sol",
								"source/BinanceBABT/contracts/erc/ERC165.sol",
								"source/BinanceBABT/contracts/interfaces/IAccessControl.sol",
								"source/BinanceBABT/contracts/interfaces/IERC165.sol",
								"source/BinanceBABT/contracts/interfaces/IERC721.sol",
								"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol",
								"source/BinanceBABT/contracts/interfaces/ISBT721.sol",
								"source/BinanceBABT/contracts/utils/Address.sol",
								"source/BinanceBABT/contracts/utils/Context.sol",
								"source/BinanceBABT/contracts/utils/Counters.sol",
								"source/BinanceBABT/contracts/utils/EnumerableMap.sol",
								"source/BinanceBABT/contracts/utils/EnumerableSet.sol",
								"source/BinanceBABT/contracts/utils/Initializable.sol",
								"source/BinanceBABT/contracts/utils/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/utils/EnumerableMap.sol": {
				"EnumerableMap": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` The following map types are supported: - `uint256 -> address` (`UintToAddressMap`) since v3.0.0 - `address -> uint256` (`AddressToUintMap`) since v4.6.0 - `bytes32 -> bytes32` (`Bytes32ToBytes32`) since v4.6.0 - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0 - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0 [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":1525:17376  library EnumerableMap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":1525:17376  library EnumerableMap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a092c1ba66619562e6f2770c0c7ee0f7deb9af260a057ca5af25acfeb0571a5f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a092c1ba66619562e6f2770c0c7ee0f7deb9af260a057ca5af25acfeb0571a5f64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 SWAP3 0xC1 0xBA PUSH7 0x619562E6F2770C 0xC PUSH31 0xE0F7DEB9AF260A057CA5AF25ACFEB0571A5F64736F6C634300081100330000 ",
							"sourceMap": "1525:15851:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1525:15851:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a092c1ba66619562e6f2770c0c7ee0f7deb9af260a057ca5af25acfeb0571a5f64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 SWAP3 0xC1 0xBA PUSH7 0x619562E6F2770C 0xC PUSH31 0xE0F7DEB9AF260A057CA5AF25ACFEB0571A5F64736F6C634300081100330000 ",
							"sourceMap": "1525:15851:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"at(struct EnumerableMap.AddressToUintMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.Bytes32ToUintMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"contains(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"contains(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"contains(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"get(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"get(struct EnumerableMap.AddressToUintMap storage pointer,address,string memory)": "infinite",
								"get(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"get(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory)": "infinite",
								"get(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"get(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32,string memory)": "infinite",
								"get(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"get(struct EnumerableMap.UintToAddressMap storage pointer,uint256,string memory)": "infinite",
								"get(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"get(struct EnumerableMap.UintToUintMap storage pointer,uint256,string memory)": "infinite",
								"length(struct EnumerableMap.AddressToUintMap storage pointer)": "infinite",
								"length(struct EnumerableMap.Bytes32ToBytes32Map storage pointer)": "infinite",
								"length(struct EnumerableMap.Bytes32ToUintMap storage pointer)": "infinite",
								"length(struct EnumerableMap.UintToAddressMap storage pointer)": "infinite",
								"length(struct EnumerableMap.UintToUintMap storage pointer)": "infinite",
								"remove(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"remove(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"remove(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"set(struct EnumerableMap.AddressToUintMap storage pointer,address,uint256)": "infinite",
								"set(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32)": "infinite",
								"set(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32,uint256)": "infinite",
								"set(struct EnumerableMap.UintToAddressMap storage pointer,uint256,address)": "infinite",
								"set(struct EnumerableMap.UintToUintMap storage pointer,uint256,uint256)": "infinite",
								"tryGet(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"tryGet(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"tryGet(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"tryGet(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"tryGet(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 17376,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a092c1ba66619562e6f2770c0c7ee0f7deb9af260a057ca5af25acfeb0571a5f64736f6c63430008110033",
									".code": [
										{
											"begin": 1525,
											"end": 17376,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 17376,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"source/BinanceBABT/contracts/SBT.sol",
								"source/BinanceBABT/contracts/access/AccessControl.sol",
								"source/BinanceBABT/contracts/erc/ERC165.sol",
								"source/BinanceBABT/contracts/interfaces/IAccessControl.sol",
								"source/BinanceBABT/contracts/interfaces/IERC165.sol",
								"source/BinanceBABT/contracts/interfaces/IERC721.sol",
								"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol",
								"source/BinanceBABT/contracts/interfaces/ISBT721.sol",
								"source/BinanceBABT/contracts/utils/Address.sol",
								"source/BinanceBABT/contracts/utils/Context.sol",
								"source/BinanceBABT/contracts/utils/Counters.sol",
								"source/BinanceBABT/contracts/utils/EnumerableMap.sol",
								"source/BinanceBABT/contracts/utils/EnumerableSet.sol",
								"source/BinanceBABT/contracts/utils/Initializable.sol",
								"source/BinanceBABT/contracts/utils/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` The following map types are supported: - `uint256 -> address` (`UintToAddressMap`) since v3.0.0 - `address -> uint256` (`AddressToUintMap`) since v4.6.0 - `bytes32 -> bytes32` (`Bytes32ToBytes32`) since v4.6.0 - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0 - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0 [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":\"EnumerableMap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x1b8ac5ffdb80c20c9188267455197d9dcfeef46379aeb1b3a6cc622e879895ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e531d0792e4774e2edabb34a5bed8e96ac80a84e08ebd5ebf7a0d15185e4f37\",\"dweb:/ipfs/QmPwWjhL1phGiGfP5R8Kzp3bQuVigkornTcSy9KaQnou1E\"]},\"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/utils/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":1228:12682  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":1228:12682  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a12c2286552cfb3a93fc90e5b677c13e1a021912c5ba4aeeac8e7bb6349d25de64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a12c2286552cfb3a93fc90e5b677c13e1a021912c5ba4aeeac8e7bb6349d25de64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0x2C 0x22 DUP7 SSTORE 0x2C 0xFB GASPRICE SWAP4 0xFC SWAP1 0xE5 0xB6 PUSH24 0xC13E1A021912C5BA4AEEAC8E7BB6349D25DE64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1228:11454:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1228:11454:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a12c2286552cfb3a93fc90e5b677c13e1a021912c5ba4aeeac8e7bb6349d25de64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0x2C 0x22 DUP7 SSTORE 0x2C 0xFB GASPRICE SWAP4 0xFC SWAP1 0xE5 0xB6 PUSH24 0xC13E1A021912C5BA4AEEAC8E7BB6349D25DE64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1228:11454:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a12c2286552cfb3a93fc90e5b677c13e1a021912c5ba4aeeac8e7bb6349d25de64736f6c63430008110033",
									".code": [
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"source/BinanceBABT/contracts/SBT.sol",
								"source/BinanceBABT/contracts/access/AccessControl.sol",
								"source/BinanceBABT/contracts/erc/ERC165.sol",
								"source/BinanceBABT/contracts/interfaces/IAccessControl.sol",
								"source/BinanceBABT/contracts/interfaces/IERC165.sol",
								"source/BinanceBABT/contracts/interfaces/IERC721.sol",
								"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol",
								"source/BinanceBABT/contracts/interfaces/ISBT721.sol",
								"source/BinanceBABT/contracts/utils/Address.sol",
								"source/BinanceBABT/contracts/utils/Context.sol",
								"source/BinanceBABT/contracts/utils/Counters.sol",
								"source/BinanceBABT/contracts/utils/EnumerableMap.sol",
								"source/BinanceBABT/contracts/utils/EnumerableSet.sol",
								"source/BinanceBABT/contracts/utils/Initializable.sol",
								"source/BinanceBABT/contracts/utils/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/utils/Address.sol\":{\"keccak256\":\"0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a\",\"dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts\"]},\"source/BinanceBABT/contracts/utils/Initializable.sol\":{\"keccak256\":\"0x1a72923481a292233164768c7e857cda2b9061f5c9ecceeae576d3ebd8858052\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58855430f25070211954c7e809dd39233094e402f01d5161ba3dcb8b5b355b48\",\"dweb:/ipfs/QmYbQQwwGZFukXSbqLAc1K5c1pw6BiXMfgMhFWR87RP5Cd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3439,
								"contract": "source/BinanceBABT/contracts/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 3442,
								"contract": "source/BinanceBABT/contracts/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/BinanceBABT/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/BinanceBABT/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/BinanceBABT/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122081b41c0fbe157b18e4b0ca8cdf11b333944fdb3ab09bcf54cd10af66bb1ec62f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122081b41c0fbe157b18e4b0ca8cdf11b333944fdb3ab09bcf54cd10af66bb1ec62f64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xB4 SHR 0xF 0xBE ISZERO PUSH28 0x18E4B0CA8CDF11B333944FDB3AB09BCF54CD10AF66BB1EC62F64736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "161:2235:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;161:2235:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122081b41c0fbe157b18e4b0ca8cdf11b333944fdb3ab09bcf54cd10af66bb1ec62f64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xB4 SHR 0xF 0xBE ISZERO PUSH28 0x18E4B0CA8CDF11B333944FDB3AB09BCF54CD10AF66BB1EC62F64736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "161:2235:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122081b41c0fbe157b18e4b0ca8cdf11b333944fdb3ab09bcf54cd10af66bb1ec62f64736f6c63430008110033",
									".code": [
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"source/BinanceBABT/contracts/SBT.sol",
								"source/BinanceBABT/contracts/access/AccessControl.sol",
								"source/BinanceBABT/contracts/erc/ERC165.sol",
								"source/BinanceBABT/contracts/interfaces/IAccessControl.sol",
								"source/BinanceBABT/contracts/interfaces/IERC165.sol",
								"source/BinanceBABT/contracts/interfaces/IERC721.sol",
								"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol",
								"source/BinanceBABT/contracts/interfaces/ISBT721.sol",
								"source/BinanceBABT/contracts/utils/Address.sol",
								"source/BinanceBABT/contracts/utils/Context.sol",
								"source/BinanceBABT/contracts/utils/Counters.sol",
								"source/BinanceBABT/contracts/utils/EnumerableMap.sol",
								"source/BinanceBABT/contracts/utils/EnumerableSet.sol",
								"source/BinanceBABT/contracts/utils/Initializable.sol",
								"source/BinanceBABT/contracts/utils/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/BinanceBABT/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/BinanceBABT/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"source/BinanceBABT/contracts/SBT.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/SBT.sol",
					"exportedSymbols": {
						"AccessControl": [
							952
						],
						"Address": [
							1615
						],
						"Context": [
							1637
						],
						"Counters": [
							1711
						],
						"ERC165": [
							976
						],
						"EnumerableMap": [
							2833
						],
						"EnumerableSet": [
							3432
						],
						"IAccessControl": [
							1049
						],
						"IERC165": [
							1061
						],
						"IERC721": [
							1177
						],
						"IERC721Metadata": [
							1204
						],
						"ISBT721": [
							1285
						],
						"Initializable": [
							3583
						],
						"SBT": [
							636
						],
						"Strings": [
							3809
						]
					},
					"id": 637,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/interfaces/IERC721.sol",
							"file": "./interfaces/IERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 1178,
							"src": "57:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/interfaces/ISBT721.sol",
							"file": "./interfaces/ISBT721.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 1286,
							"src": "92:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol",
							"file": "./interfaces/IERC721Metadata.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 1205,
							"src": "127:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/Context.sol",
							"file": "./utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 1638,
							"src": "170:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/Counters.sol",
							"file": "./utils/Counters.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 1712,
							"src": "200:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/EnumerableMap.sol",
							"file": "./utils/EnumerableMap.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 2834,
							"src": "231:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/Strings.sol",
							"file": "./utils/Strings.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 3810,
							"src": "267:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/Initializable.sol",
							"file": "./utils/Initializable.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 3584,
							"src": "297:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/erc/ERC165.sol",
							"file": "./erc/ERC165.sol",
							"id": 10,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 977,
							"src": "334:26:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/access/AccessControl.sol",
							"file": "./access/AccessControl.sol",
							"id": 11,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 953,
							"src": "361:36:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 13,
										"name": "Initializable",
										"nameLocations": [
											"644:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3583,
										"src": "644:13:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "644:13:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "AccessControl",
										"nameLocations": [
											"659:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 952,
										"src": "659:13:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "659:13:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "ISBT721",
										"nameLocations": [
											"674:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1285,
										"src": "674:7:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "674:7:0"
								},
								{
									"baseName": {
										"id": 19,
										"name": "IERC721Metadata",
										"nameLocations": [
											"683:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1204,
										"src": "683:15:0"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "683:15:0"
								}
							],
							"canonicalName": "SBT",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 12,
								"nodeType": "StructuredDocumentation",
								"src": "399:228:0",
								"text": " An experiment in Soul Bound Tokens (SBT's) following Vitalik's\n co-authored whitepaper at:\n https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4105763\n I propose for a rename to Non-Transferable Tokens NTT's"
							},
							"fullyImplemented": true,
							"id": 636,
							"linearizedBaseContracts": [
								636,
								1204,
								1285,
								952,
								976,
								1061,
								1049,
								1637,
								3583
							],
							"name": "SBT",
							"nameLocation": "637:3:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 23,
									"libraryName": {
										"id": 21,
										"name": "Strings",
										"nameLocations": [
											"711:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3809,
										"src": "711:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "705:26:0",
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 27,
									"libraryName": {
										"id": 24,
										"name": "Counters",
										"nameLocations": [
											"742:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1711,
										"src": "742:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "736:36:0",
									"typeName": {
										"id": 26,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 25,
											"name": "Counters.Counter",
											"nameLocations": [
												"755:8:0",
												"764:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1643,
											"src": "755:16:0"
										},
										"referencedDeclaration": 1643,
										"src": "755:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"global": false,
									"id": 31,
									"libraryName": {
										"id": 28,
										"name": "EnumerableMap",
										"nameLocations": [
											"783:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2833,
										"src": "783:13:0"
									},
									"nodeType": "UsingForDirective",
									"src": "777:55:0",
									"typeName": {
										"id": 30,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 29,
											"name": "EnumerableMap.AddressToUintMap",
											"nameLocations": [
												"801:13:0",
												"815:16:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2401,
											"src": "801:30:0"
										},
										"referencedDeclaration": 2401,
										"src": "801:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
											"typeString": "struct EnumerableMap.AddressToUintMap"
										}
									}
								},
								{
									"global": false,
									"id": 35,
									"libraryName": {
										"id": 32,
										"name": "EnumerableMap",
										"nameLocations": [
											"843:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2833,
										"src": "843:13:0"
									},
									"nodeType": "UsingForDirective",
									"src": "837:55:0",
									"typeName": {
										"id": 34,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 33,
											"name": "EnumerableMap.UintToAddressMap",
											"nameLocations": [
												"861:13:0",
												"875:16:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2164,
											"src": "861:30:0"
										},
										"referencedDeclaration": 2164,
										"src": "861:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
											"typeString": "struct EnumerableMap.UintToAddressMap"
										}
									}
								},
								{
									"constant": false,
									"id": 38,
									"mutability": "mutable",
									"name": "_ownerMap",
									"nameLocation": "983:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 636,
									"src": "944:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage",
										"typeString": "struct EnumerableMap.UintToAddressMap"
									},
									"typeName": {
										"id": 37,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 36,
											"name": "EnumerableMap.UintToAddressMap",
											"nameLocations": [
												"944:13:0",
												"958:16:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2164,
											"src": "944:30:0"
										},
										"referencedDeclaration": 2164,
										"src": "944:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
											"typeString": "struct EnumerableMap.UintToAddressMap"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 41,
									"mutability": "mutable",
									"name": "_tokenMap",
									"nameLocation": "1037:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 636,
									"src": "998:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
										"typeString": "struct EnumerableMap.AddressToUintMap"
									},
									"typeName": {
										"id": 40,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 39,
											"name": "EnumerableMap.AddressToUintMap",
											"nameLocations": [
												"998:13:0",
												"1012:16:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2401,
											"src": "998:30:0"
										},
										"referencedDeclaration": 2401,
										"src": "998:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
											"typeString": "struct EnumerableMap.AddressToUintMap"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 44,
									"mutability": "mutable",
									"name": "_tokenId",
									"nameLocation": "1094:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 636,
									"src": "1069:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1643_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 43,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 42,
											"name": "Counters.Counter",
											"nameLocations": [
												"1069:8:0",
												"1078:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1643,
											"src": "1069:16:0"
										},
										"referencedDeclaration": 1643,
										"src": "1069:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1189
									],
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 46,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "1141:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 636,
									"src": "1127:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 45,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1127:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1195
									],
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 48,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "1186:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 636,
									"src": "1172:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 47,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1172:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 50,
									"mutability": "mutable",
									"name": "_baseTokenURI",
									"nameLocation": "1231:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 636,
									"src": "1216:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 49,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1216:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "f5b541a6",
									"id": 55,
									"mutability": "constant",
									"name": "OPERATOR_ROLE",
									"nameLocation": "1291:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 636,
									"src": "1267:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 51,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1267:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4f50455241544f525f524f4c45",
												"id": 53,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1317:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
													"typeString": "literal_string \"OPERATOR_ROLE\""
												},
												"value": "OPERATOR_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
													"typeString": "literal_string \"OPERATOR_ROLE\""
												}
											],
											"id": 52,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1307:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1307:26:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "1587:203:0",
										"statements": [
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 68,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1597:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 69,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "1604:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1597:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1597:12:0"
											},
											{
												"expression": {
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1619:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 73,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "1628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1619:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1619:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "1713:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 78,
															"name": "admin_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1733:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "1702:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1702:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "1702:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "OPERATOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "1761:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 83,
															"name": "admin_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1776:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 81,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "1750:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1750:33:0"
											}
										]
									},
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1340:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"functionSelector": "077f224a",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "31",
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1584:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 64,
												"name": "reinitializer",
												"nameLocations": [
													"1570:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3536,
												"src": "1570:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1570:16:0"
										}
									],
									"name": "initialize",
									"nameLocation": "1462:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1496:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1482:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 57,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1482:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1525:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1511:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 59,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1511:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "admin_",
												"nameLocation": "1550:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1542:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:90:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1587:0:0"
									},
									"scope": 636,
									"src": "1453:337:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1244
									],
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1851:531:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 96,
																	"name": "OPERATOR_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "1890:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 97,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "1905:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1905:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 95,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "1882:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1882:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206163636f756e742077697468204f50455241544f525f524f4c452063616e206174746573742074686520534254",
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1932:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can attest the SBT\""
															},
															"value": "Only the account with OPERATOR_ROLE can attest the SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can attest the SBT\""
															}
														],
														"id": 94,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1861:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1861:137:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "1861:137:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 104,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "2016:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2030:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2022:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 105,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2022:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2022:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2016:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320697320656d707479",
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2034:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844",
																"typeString": "literal_string \"Address is empty\""
															},
															"value": "Address is empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844",
																"typeString": "literal_string \"Address is empty\""
															}
														],
														"id": 103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2008:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "2008:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2071:23:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 116,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 89,
																		"src": "2091:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 114,
																		"name": "_tokenMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "2072:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																		}
																	},
																	"id": 115,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2082:8:0",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2488,
																	"src": "2072:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2072:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53425420616c726561647920657869737473",
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2096:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e1890e5e17f8d1eac9ad6ed4b4250d8d69c12776e6f7ccfc0207787be0fef1e",
																"typeString": "literal_string \"SBT already exists\""
															},
															"value": "SBT already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e1890e5e17f8d1eac9ad6ed4b4250d8d69c12776e6f7ccfc0207787be0fef1e",
																"typeString": "literal_string \"SBT already exists\""
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2063:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2063:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "2063:54:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 122,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2128:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1643_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 124,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2137:9:0",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1669,
														"src": "2128:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1643_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1643_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "2128:20:0"
											},
											{
												"assignments": [
													128
												],
												"declarations": [
													{
														"constant": false,
														"id": 128,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "2166:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 163,
														"src": "2158:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2158:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 132,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 129,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2176:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1643_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 130,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2185:7:0",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1655,
														"src": "2176:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1643_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1643_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2158:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 136,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2219:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 137,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2223:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 133,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2205:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2215:3:0",
														"memberName": "set",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2434,
														"src": "2205:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address,uint256) returns (bool)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2205:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "2205:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2255:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 144,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2264:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 140,
															"name": "_ownerMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "2241:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage",
																"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2251:3:0",
														"memberName": "set",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2197,
														"src": "2241:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$2164_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2164_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2241:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "2241:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 148,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2290:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 149,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 147,
														"name": "Attest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "2283:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2283:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "EmitStatement",
												"src": "2278:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2334:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2326:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 153,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2326:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2326:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2338:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 158,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2342:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 152,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "2317:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "EmitStatement",
												"src": "2312:38:0"
											},
											{
												"expression": {
													"id": 161,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 128,
													"src": "2368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 93,
												"id": 162,
												"nodeType": "Return",
												"src": "2361:14:0"
											}
										]
									},
									"functionSelector": "eb31403f",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attest",
									"nameLocation": "1805:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1820:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1812:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:12:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1842:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1841:9:0"
									},
									"scope": 636,
									"src": "1796:586:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "2444:727:0",
										"statements": [
											{
												"assignments": [
													171
												],
												"declarations": [
													{
														"constant": false,
														"id": 171,
														"mutability": "mutable",
														"name": "addrLength",
														"nameLocation": "2462:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "2454:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 170,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 174,
												"initialValue": {
													"expression": {
														"id": 172,
														"name": "addrs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2475:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2481:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2475:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2454:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 177,
																	"name": "OPERATOR_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "2527:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 178,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "2542:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2542:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 176,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "2519:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2519:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206163636f756e742077697468204f50455241544f525f524f4c452063616e206174746573742074686520534254",
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2569:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can attest the SBT\""
															},
															"value": "Only the account with OPERATOR_ROLE can attest the SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3bc40fbf6a3cdb1481a48e3927475983efbfcec37a36e09b7685e47f7c2b287f",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can attest the SBT\""
															}
														],
														"id": 175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2498:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2498:137:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "2498:137:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 185,
																"name": "addrLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "2653:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2667:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "2653:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206d6178206c656e677468206f662061646472657373657320697320313030",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2672:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd4411c84af8ba2f0686b60d9927be2dc3a376a30aeab1950fb7c93ad2f83e9f",
																"typeString": "literal_string \"The max length of addresses is 100\""
															},
															"value": "The max length of addresses is 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd4411c84af8ba2f0686b60d9927be2dc3a376a30aeab1950fb7c93ad2f83e9f",
																"typeString": "literal_string \"The max length of addresses is 100\""
															}
														],
														"id": 184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2645:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2645:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2645:64:0"
											},
											{
												"body": {
													"id": 260,
													"nodeType": "Block",
													"src": "2759:406:0",
													"statements": [
														{
															"assignments": [
																202
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 202,
																	"mutability": "mutable",
																	"name": "to",
																	"nameLocation": "2781:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 260,
																	"src": "2773:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 201,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2773:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 206,
															"initialValue": {
																"baseExpression": {
																	"id": 203,
																	"name": "addrs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "2786:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 205,
																"indexExpression": {
																	"id": 204,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "2792:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2786:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2773:21:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 207,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "2813:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 210,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2827:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2819:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 208,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2819:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2819:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2813:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 215,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 202,
																			"src": "2852:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 213,
																			"name": "_tokenMap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 41,
																			"src": "2833:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																				"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																			}
																		},
																		"id": 214,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2843:8:0",
																		"memberName": "contains",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2488,
																		"src": "2833:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
																			"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2833:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2813:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 220,
															"nodeType": "IfStatement",
															"src": "2809:89:0",
															"trueBody": {
																"id": 219,
																"nodeType": "Block",
																"src": "2857:41:0",
																"statements": [
																	{
																		"id": 218,
																		"nodeType": "Continue",
																		"src": "2875:8:0"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 221,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 44,
																		"src": "2912:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$1643_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 223,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2921:9:0",
																	"memberName": "increment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1669,
																	"src": "2912:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1643_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1643_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer)"
																	}
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2912:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 225,
															"nodeType": "ExpressionStatement",
															"src": "2912:20:0"
														},
														{
															"assignments": [
																227
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 227,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "2954:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 260,
																	"src": "2946:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 226,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2946:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 231,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 228,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 44,
																		"src": "2964:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$1643_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 229,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2973:7:0",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1655,
																	"src": "2964:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1643_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1643_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2964:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2946:36:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 235,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "3011:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 236,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 227,
																		"src": "3015:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 232,
																		"name": "_tokenMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "2997:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																		}
																	},
																	"id": 234,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3007:3:0",
																	"memberName": "set",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2434,
																	"src": "2997:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address,uint256) returns (bool)"
																	}
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2997:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 238,
															"nodeType": "ExpressionStatement",
															"src": "2997:26:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 227,
																		"src": "3051:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 243,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "3060:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 239,
																		"name": "_ownerMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "3037:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage",
																			"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
																		}
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3047:3:0",
																	"memberName": "set",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2197,
																	"src": "3037:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$2164_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2164_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"
																	}
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3037:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 245,
															"nodeType": "ExpressionStatement",
															"src": "3037:26:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 247,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "3090:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 248,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 227,
																		"src": "3094:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 246,
																	"name": "Attest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "3083:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3083:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 250,
															"nodeType": "EmitStatement",
															"src": "3078:24:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3138:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3130:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 252,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3130:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3130:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 256,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "3142:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 257,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 227,
																		"src": "3146:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 251,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1236,
																	"src": "3121:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3121:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 259,
															"nodeType": "EmitStatement",
															"src": "3116:38:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 195,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2738:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 196,
														"name": "addrLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "2742:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2738:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 261,
												"initializationExpression": {
													"assignments": [
														192
													],
													"declarations": [
														{
															"constant": false,
															"id": 192,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2731:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 261,
															"src": "2725:7:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 191,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "2725:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 194,
													"initialValue": {
														"hexValue": "30",
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2735:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2725:11:0"
												},
												"loopExpression": {
													"expression": {
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2754:3:0",
														"subExpression": {
															"id": 198,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "2754:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 200,
													"nodeType": "ExpressionStatement",
													"src": "2754:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2720:445:0"
											}
										]
									},
									"functionSelector": "6c60144a",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "batchAttest",
									"nameLocation": "2397:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "addrs",
												"nameLocation": "2428:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "2409:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 165,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2409:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 166,
													"nodeType": "ArrayTypeName",
													"src": "2409:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2408:26:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2444:0:0"
									},
									"scope": 636,
									"src": "2388:783:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1250
									],
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "3216:494:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 270,
																	"name": "OPERATOR_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "3255:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 271,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "3270:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3270:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 269,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "3247:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3247:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206163636f756e742077697468204f50455241544f525f524f4c452063616e207265766f6b652074686520534254",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3297:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c1d2016a5c744a68c42f66619089ea6bcfaa0789449adc1f08ff1a38412eb69",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can revoke the SBT\""
															},
															"value": "Only the account with OPERATOR_ROLE can revoke the SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c1d2016a5c744a68c42f66619089ea6bcfaa0789449adc1f08ff1a38412eb69",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can revoke the SBT\""
															}
														],
														"id": 268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3226:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3226:137:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "3226:137:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 278,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "3381:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3397:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3389:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 279,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3389:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3389:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3381:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320697320656d707479",
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3401:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844",
																"typeString": "literal_string \"Address is empty\""
															},
															"value": "Address is empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f73274c1a68ed75d6ac033af512f53547411066d2fe8f9e20c6293692b16844",
																"typeString": "literal_string \"Address is empty\""
															}
														],
														"id": 277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3373:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "3373:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 290,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "3457:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 288,
																	"name": "_tokenMap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "3438:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																		"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																	}
																},
																"id": 289,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3448:8:0",
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2488,
																"src": "3438:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
																	"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool)"
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3438:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206163636f756e7420646f6573206e6f74206861766520616e7920534254",
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3464:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba976e6fdb37df9d22aca8365aa6504579d68ccdeedadad948053f8707d0cf04",
																"typeString": "literal_string \"The account does not have any SBT\""
															},
															"value": "The account does not have any SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba976e6fdb37df9d22aca8365aa6504579d68ccdeedadad948053f8707d0cf04",
																"typeString": "literal_string \"The account does not have any SBT\""
															}
														],
														"id": 287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3430:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "3430:70:0"
											},
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "3519:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 328,
														"src": "3511:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3511:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 301,
												"initialValue": {
													"arguments": [
														{
															"id": 299,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "3543:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 297,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "3529:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3539:3:0",
														"memberName": "get",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2613,
														"src": "3529:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (uint256)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3529:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3511:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "3576:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 302,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "3559:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3569:6:0",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2461,
														"src": "3559:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) returns (bool)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3559:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "3559:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 311,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "3608:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 308,
															"name": "_ownerMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "3591:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage",
																"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3601:6:0",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2218,
														"src": "3591:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$2164_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2164_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) returns (bool)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3591:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "3591:25:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 315,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "3639:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "3645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 314,
														"name": "Revoke",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "3632:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3632:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "EmitStatement",
												"src": "3627:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "3677:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3691:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3683:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 321,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3683:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3683:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 325,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "3695:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "3668:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3668:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "EmitStatement",
												"src": "3663:40:0"
											}
										]
									},
									"functionSelector": "74a8f103",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revoke",
									"nameLocation": "3186:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3201:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "3193:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3193:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3192:14:0"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3216:0:0"
									},
									"scope": 636,
									"src": "3177:533:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "3772:700:0",
										"statements": [
											{
												"assignments": [
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 336,
														"mutability": "mutable",
														"name": "addrLength",
														"nameLocation": "3790:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "3782:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 335,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3782:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 339,
												"initialValue": {
													"expression": {
														"id": 337,
														"name": "addrs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "3803:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3809:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3803:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3782:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 342,
																	"name": "OPERATOR_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "3855:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 343,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "3870:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3870:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 341,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "3847:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3847:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206163636f756e742077697468204f50455241544f525f524f4c452063616e207265766f6b652074686520534254",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3897:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c1d2016a5c744a68c42f66619089ea6bcfaa0789449adc1f08ff1a38412eb69",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can revoke the SBT\""
															},
															"value": "Only the account with OPERATOR_ROLE can revoke the SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c1d2016a5c744a68c42f66619089ea6bcfaa0789449adc1f08ff1a38412eb69",
																"typeString": "literal_string \"Only the account with OPERATOR_ROLE can revoke the SBT\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3826:137:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "3826:137:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 350,
																"name": "addrLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "3981:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3995:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "3981:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206d6178206c656e677468206f662061646472657373657320697320313030",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4000:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd4411c84af8ba2f0686b60d9927be2dc3a376a30aeab1950fb7c93ad2f83e9f",
																"typeString": "literal_string \"The max length of addresses is 100\""
															},
															"value": "The max length of addresses is 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd4411c84af8ba2f0686b60d9927be2dc3a376a30aeab1950fb7c93ad2f83e9f",
																"typeString": "literal_string \"The max length of addresses is 100\""
															}
														],
														"id": 349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3973:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "3973:64:0"
											},
											{
												"body": {
													"id": 420,
													"nodeType": "Block",
													"src": "4087:379:0",
													"statements": [
														{
															"assignments": [
																367
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 367,
																	"mutability": "mutable",
																	"name": "from",
																	"nameLocation": "4109:4:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 420,
																	"src": "4101:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 366,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4101:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 371,
															"initialValue": {
																"baseExpression": {
																	"id": 368,
																	"name": "addrs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "4116:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 370,
																"indexExpression": {
																	"id": 369,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "4122:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4116:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4101:23:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 372,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "4143:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4159:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4151:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 373,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4151:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4151:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "4143:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"id": 382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "4165:25:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 380,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "4185:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 378,
																				"name": "_tokenMap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 41,
																				"src": "4166:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																					"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																				}
																			},
																			"id": 379,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4176:8:0",
																			"memberName": "contains",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2488,
																			"src": "4166:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
																				"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool)"
																			}
																		},
																		"id": 381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4166:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4143:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 386,
															"nodeType": "IfStatement",
															"src": "4139:94:0",
															"trueBody": {
																"id": 385,
																"nodeType": "Block",
																"src": "4192:41:0",
																"statements": [
																	{
																		"id": 384,
																		"nodeType": "Continue",
																		"src": "4210:8:0"
																	}
																]
															}
														},
														{
															"assignments": [
																388
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 388,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "4255:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 420,
																	"src": "4247:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 387,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4247:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 393,
															"initialValue": {
																"arguments": [
																	{
																		"id": 391,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "4279:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 389,
																		"name": "_tokenMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "4265:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																		}
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4275:3:0",
																	"memberName": "get",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2613,
																	"src": "4265:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (uint256)"
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4265:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4247:37:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 397,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "4316:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 394,
																		"name": "_tokenMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "4299:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																		}
																	},
																	"id": 396,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4309:6:0",
																	"memberName": "remove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2461,
																	"src": "4299:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) returns (bool)"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4299:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 399,
															"nodeType": "ExpressionStatement",
															"src": "4299:22:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 403,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "4352:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 400,
																		"name": "_ownerMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "4335:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage",
																			"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4345:6:0",
																	"memberName": "remove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2218,
																	"src": "4335:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$2164_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2164_storage_ptr_$",
																		"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) returns (bool)"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4335:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 405,
															"nodeType": "ExpressionStatement",
															"src": "4335:25:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 407,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "4387:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 408,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "4393:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 406,
																	"name": "Revoke",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "4380:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4380:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 410,
															"nodeType": "EmitStatement",
															"src": "4375:26:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 412,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "4429:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4443:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4435:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 413,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4435:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4435:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 417,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "4447:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 411,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1236,
																	"src": "4420:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4420:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 419,
															"nodeType": "EmitStatement",
															"src": "4415:40:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 360,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "4066:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 361,
														"name": "addrLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "4070:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4066:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 421,
												"initializationExpression": {
													"assignments": [
														357
													],
													"declarations": [
														{
															"constant": false,
															"id": 357,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4059:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 421,
															"src": "4053:7:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 356,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "4053:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 359,
													"initialValue": {
														"hexValue": "30",
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4063:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4053:11:0"
												},
												"loopExpression": {
													"expression": {
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4082:3:0",
														"subExpression": {
															"id": 363,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "4082:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 365,
													"nodeType": "ExpressionStatement",
													"src": "4082:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4048:418:0"
											}
										]
									},
									"functionSelector": "011002df",
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "batchRevoke",
									"nameLocation": "3725:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "addrs",
												"nameLocation": "3756:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3737:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 330,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3737:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 331,
													"nodeType": "ArrayTypeName",
													"src": "3737:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3736:26:0"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3772:0:0"
									},
									"scope": 636,
									"src": "3716:756:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1254
									],
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "4503:372:0",
										"statements": [
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4521:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "4513:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 426,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4513:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 430,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 428,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1627,
														"src": "4530:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4530:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4513:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 434,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "4593:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 432,
																	"name": "_tokenMap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "4574:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																		"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4584:8:0",
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2488,
																"src": "4574:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
																	"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool)"
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4574:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206163636f756e7420646f6573206e6f74206861766520616e7920534254",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4614:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba976e6fdb37df9d22aca8365aa6504579d68ccdeedadad948053f8707d0cf04",
																"typeString": "literal_string \"The account does not have any SBT\""
															},
															"value": "The account does not have any SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba976e6fdb37df9d22aca8365aa6504579d68ccdeedadad948053f8707d0cf04",
																"typeString": "literal_string \"The account does not have any SBT\""
															}
														],
														"id": 431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4553:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "4553:106:0"
											},
											{
												"assignments": [
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "4678:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "4670:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 439,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4670:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"arguments": [
														{
															"id": 443,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "4702:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 441,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "4688:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4698:3:0",
														"memberName": "get",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2613,
														"src": "4688:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4688:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4670:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 449,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "4737:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 446,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "4720:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4730:6:0",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2461,
														"src": "4720:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) returns (bool)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4720:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "4720:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "4771:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 452,
															"name": "_ownerMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "4754:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage",
																"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4764:6:0",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2218,
														"src": "4754:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$2164_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$2164_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) returns (bool)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4754:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "4754:25:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 459,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "4800:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 460,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "4808:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 458,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "4795:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4795:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "EmitStatement",
												"src": "4790:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 464,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "4840:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4856:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4848:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 465,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4848:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4848:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "4860:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 463,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "4831:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4831:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "EmitStatement",
												"src": "4826:42:0"
											}
										]
									},
									"functionSelector": "44df8e70",
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "4487:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4491:2:0"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4503:0:0"
									},
									"scope": 636,
									"src": "4478:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "4983:202:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 481,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "5022:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 482,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "5042:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5042:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 480,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "5014:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5014:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206163636f756e7420776974682044454641554c545f41444d494e5f524f4c452063616e2073657420746865206261736520746f6b656e20555249",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5069:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f4eb9e3dc144b51037066c2a71acd8f8517949757f6c532ab3f6247c5cd58c9b",
																"typeString": "literal_string \"Only the account with DEFAULT_ADMIN_ROLE can set the base token URI\""
															},
															"value": "Only the account with DEFAULT_ADMIN_ROLE can set the base token URI"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f4eb9e3dc144b51037066c2a71acd8f8517949757f6c532ab3f6247c5cd58c9b",
																"typeString": "literal_string \"Only the account with DEFAULT_ADMIN_ROLE can set the base token URI\""
															}
														],
														"id": 479,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4993:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4993:155:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "4993:155:0"
											},
											{
												"expression": {
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 488,
														"name": "_baseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "5159:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 489,
														"name": "uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5175:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"src": "5159:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "5159:19:0"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "4881:44:0",
										"text": " @dev Update _baseTokenURI"
									},
									"functionSelector": "30176e13",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBaseTokenURI",
									"nameLocation": "4939:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "4971:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "4955:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4955:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4954:21:0"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4983:0:0"
									},
									"scope": 636,
									"src": "4930:255:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1262
									],
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "5257:91:0",
										"statements": [
											{
												"assignments": [
													501,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 501,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5273:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "5268:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 500,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5268:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 506,
												"initialValue": {
													"arguments": [
														{
															"id": 504,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "5303:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 502,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "5286:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5296:6:0",
														"memberName": "tryGet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2583,
														"src": "5286:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$returns$_t_bool_$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool,uint256)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5286:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5267:42:0"
											},
											{
												"expression": {
													"condition": {
														"id": 507,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "5326:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5340:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5326:15:0",
													"trueExpression": {
														"hexValue": "31",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5336:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 499,
												"id": 511,
												"nodeType": "Return",
												"src": "5319:22:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5200:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5218:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "5210:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5209:15:0"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "5248:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5247:9:0"
									},
									"scope": 636,
									"src": "5191:157:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1270
									],
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "5419:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "5450:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "5468652077616c6c657420686173206e6f7420617474657374656420616e7920534254",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5456:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c0ef6bfa0a398fe3098d6b3c8bc2c4c45d120ec13b77201d29305b0abb24397",
																"typeString": "literal_string \"The wallet has not attested any SBT\""
															},
															"value": "The wallet has not attested any SBT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_4c0ef6bfa0a398fe3098d6b3c8bc2c4c45d120ec13b77201d29305b0abb24397",
																"typeString": "literal_string \"The wallet has not attested any SBT\""
															}
														],
														"expression": {
															"id": 520,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "5436:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5446:3:0",
														"memberName": "get",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2646,
														"src": "5436:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2401_storage_ptr_$_t_address_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer,address,string memory) view returns (uint256)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5436:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 519,
												"id": 525,
												"nodeType": "Return",
												"src": "5429:65:0"
											}
										]
									},
									"functionSelector": "773c02d4",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenIdOf",
									"nameLocation": "5363:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5381:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5373:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5373:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5372:14:0"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5410:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5409:9:0"
									},
									"scope": 636,
									"src": "5354:147:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1278
									],
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "5573:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 536,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "5604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e4964",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5613:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4",
																"typeString": "literal_string \"Invalid tokenId\""
															},
															"value": "Invalid tokenId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4",
																"typeString": "literal_string \"Invalid tokenId\""
															}
														],
														"expression": {
															"id": 534,
															"name": "_ownerMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "5590:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage",
																"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5600:3:0",
														"memberName": "get",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2397,
														"src": "5590:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$2164_storage_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_address_$bound_to$_t_struct$_UintToAddressMap_$2164_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,string memory) view returns (address)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5590:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 533,
												"id": 539,
												"nodeType": "Return",
												"src": "5583:48:0"
											}
										]
									},
									"functionSelector": "6352211e",
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "5516:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5532:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5524:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5523:17:0"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5564:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5563:9:0"
									},
									"scope": 636,
									"src": "5507:131:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1284
									],
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "5699:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 546,
															"name": "_tokenMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "5716:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage",
																"typeString": "struct EnumerableMap.AddressToUintMap storage ref"
															}
														},
														"id": 547,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5726:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2503,
														"src": "5716:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressToUintMap_$2401_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$2401_storage_ptr_$",
															"typeString": "function (struct EnumerableMap.AddressToUintMap storage pointer) view returns (uint256)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5716:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 545,
												"id": 549,
												"nodeType": "Return",
												"src": "5709:25:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5653:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5664:2:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5690:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5689:9:0"
									},
									"scope": 636,
									"src": "5644:97:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "5813:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "OPERATOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "5838:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 560,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "5853:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 558,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5830:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 557,
												"id": 562,
												"nodeType": "Return",
												"src": "5823:38:0"
											}
										]
									},
									"functionSelector": "6d70f7ae",
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOperator",
									"nameLocation": "5756:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5775:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "5767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5766:17:0"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "5807:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5807:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5806:6:0"
									},
									"scope": 636,
									"src": "5747:121:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "5937:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 572,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "5962:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 573,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "5982:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 571,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5954:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 570,
												"id": 575,
												"nodeType": "Return",
												"src": "5947:43:0"
											}
										]
									},
									"functionSelector": "24d7806c",
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "5883:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5899:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "5891:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5890:17:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "5931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 568,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5930:6:0"
									},
									"scope": 636,
									"src": "5874:123:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1203
									],
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6136:166:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 587,
																		"name": "_baseTokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "6171:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	],
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6165:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 585,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6165:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6165:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage_ptr",
																	"typeString": "bytes storage pointer"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6186:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6165:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6195:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6165:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6293:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6165:130:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 596,
																		"name": "_baseTokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "6239:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 597,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 580,
																				"src": "6254:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6262:8:0",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3671,
																			"src": "6254:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6254:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 594,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "6222:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6226:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "6222:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6222:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6215:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 592,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "6215:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6215:59:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 584,
												"id": 604,
												"nodeType": "Return",
												"src": "6146:149:0"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "6003:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "6072:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6089:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6081:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6080:17:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6121:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6121:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6120:15:0"
									},
									"scope": 636,
									"src": "6063:239:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										697
									],
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "6504:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 615,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "6533:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 617,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1177,
																			"src": "6553:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1177_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1177_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 616,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "6548:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6548:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1177",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6562:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "6548:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "6533:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 621,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "6589:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 623,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1204,
																			"src": "6609:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1204_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1204_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 622,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "6604:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6604:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1204",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6626:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "6604:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "6589:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6533:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 630,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "6677:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 628,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "6653:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_SBT_$636_$",
																	"typeString": "type(contract super SBT)"
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6659:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 697,
															"src": "6653:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6533:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 614,
												"id": 633,
												"nodeType": "Return",
												"src": "6514:175:0"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "6308:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "6378:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 611,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6468:8:0"
									},
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "6403:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "6396:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 608,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6396:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6395:20:0"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "6494:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6494:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:6:0"
									},
									"scope": 636,
									"src": "6369:327:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 637,
							"src": "628:6070:0",
							"usedErrors": []
						}
					],
					"src": "32:6667:0"
				},
				"id": 0
			},
			"source/BinanceBABT/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							952
						],
						"Context": [
							1637
						],
						"ERC165": [
							976
						],
						"IAccessControl": [
							1049
						],
						"IERC165": [
							1061
						],
						"Strings": [
							3809
						]
					},
					"id": 953,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 638,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/interfaces/IAccessControl.sol",
							"file": "../interfaces/IAccessControl.sol",
							"id": 639,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 953,
							"sourceUnit": 1050,
							"src": "133:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 640,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 953,
							"sourceUnit": 1638,
							"src": "176:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 641,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 953,
							"sourceUnit": 3810,
							"src": "207:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/erc/ERC165.sol",
							"file": "../erc/ERC165.sol",
							"id": 642,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 953,
							"sourceUnit": 977,
							"src": "238:27:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 644,
										"name": "Context",
										"nameLocations": [
											"1837:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1637,
										"src": "1837:7:1"
									},
									"id": 645,
									"nodeType": "InheritanceSpecifier",
									"src": "1837:7:1"
								},
								{
									"baseName": {
										"id": 646,
										"name": "IAccessControl",
										"nameLocations": [
											"1846:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1049,
										"src": "1846:14:1"
									},
									"id": 647,
									"nodeType": "InheritanceSpecifier",
									"src": "1846:14:1"
								},
								{
									"baseName": {
										"id": 648,
										"name": "ERC165",
										"nameLocations": [
											"1862:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "1862:6:1"
									},
									"id": 649,
									"nodeType": "InheritanceSpecifier",
									"src": "1862:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 643,
								"nodeType": "StructuredDocumentation",
								"src": "267:1534:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 952,
							"linearizedBaseContracts": [
								952,
								976,
								1061,
								1049,
								1637
							],
							"name": "AccessControl",
							"nameLocation": "1820:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 656,
									"members": [
										{
											"constant": false,
											"id": 653,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1926:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 656,
											"src": "1901:32:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 652,
												"keyType": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1901:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 651,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1920:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 655,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1951:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 656,
											"src": "1943:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 654,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1943:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1882:8:1",
									"nodeType": "StructDefinition",
									"scope": 952,
									"src": "1875:92:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 661,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2010:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "1973:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$656_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 660,
										"keyType": {
											"id": 657,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1981:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1973:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$656_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 659,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 658,
												"name": "RoleData",
												"nameLocations": [
													"1992:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "1992:8:1"
											},
											"referencedDeclaration": 656,
											"src": "1992:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$656_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 664,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2047:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "2023:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 662,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2023:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 663,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2068:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2491:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "2512:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 669,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															729,
															768
														],
														"referencedDeclaration": 729,
														"src": "2501:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2501:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "2501:16:1"
											},
											{
												"id": 673,
												"nodeType": "PlaceholderStatement",
												"src": "2527:1:1"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "2079:375:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 675,
									"name": "onlyRole",
									"nameLocation": "2468:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2485:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2477:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 666,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2476:14:1"
									},
									"src": "2459:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										975
									],
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "2693:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 684,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "2710:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 686,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "2730:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1049_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1049_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 685,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2725:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2725:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1049",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2746:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2725:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2710:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 692,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "2785:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 690,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2761:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$952_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2767:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 975,
															"src": "2761:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2761:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2710:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 683,
												"id": 695,
												"nodeType": "Return",
												"src": "2703:94:1"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2541:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2611:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 680,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2669:8:1"
									},
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2636:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2629:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 677,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2629:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2628:20:1"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2687:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2687:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2686:6:1"
									},
									"scope": 952,
									"src": "2602:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1016
									],
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "2983:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 708,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "3000:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$656_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 710,
															"indexExpression": {
																"id": 709,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "3007:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3000:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$656_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3013:7:1",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 653,
														"src": "3000:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 713,
													"indexExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3021:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3000:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 707,
												"id": 714,
												"nodeType": "Return",
												"src": "2993:36:1"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "2810:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2900:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 704,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2959:8:1"
									},
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2916:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2908:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 699,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2930:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2922:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2907:31:1"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2977:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 705,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2977:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2976:6:1"
									},
									"scope": 952,
									"src": "2891:145:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "3386:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 723,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "3407:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 724,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "3413:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3413:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 722,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															729,
															768
														],
														"referencedDeclaration": 768,
														"src": "3396:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3396:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "3396:30:1"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "3042:283:1",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3339:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3358:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "3350:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 718,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3349:14:1"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3386:0:1"
									},
									"scope": 952,
									"src": "3330:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "3787:406:1",
										"statements": [
											{
												"condition": {
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3801:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 738,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "3810:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 739,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "3816:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 737,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "3802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3802:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 766,
												"nodeType": "IfStatement",
												"src": "3797:390:1",
												"trueBody": {
													"id": 765,
													"nodeType": "Block",
													"src": "3826:361:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 747,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3934:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 750,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 734,
																								"src": "4005:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 748,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3809,
																								"src": "3985:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$3809_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 749,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3993:11:1",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3808,
																							"src": "3985:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 751,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3985:28:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 752,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4039:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 757,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 732,
																										"src": "4112:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 756,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4104:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 755,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4104:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 758,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4104:13:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 759,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4119:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 753,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3809,
																								"src": "4084:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$3809_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 754,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4092:11:1",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3788,
																							"src": "4084:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 760,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4084:38:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 745,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3892:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 746,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "3896:12:1",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3892:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3892:252:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3864:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 743,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3864:6:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3864:298:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 742,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3840:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3840:336:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 764,
															"nodeType": "ExpressionStatement",
															"src": "3840:336:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "3439:270:1",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3723:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3742:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "3734:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 731,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3756:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "3748:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3748:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:31:1"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3787:0:1"
									},
									"scope": 952,
									"src": "3714:479:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1024
									],
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "4457:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 777,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "4474:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$656_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 779,
														"indexExpression": {
															"id": 778,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "4481:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4474:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$656_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4487:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 655,
													"src": "4474:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 776,
												"id": 781,
												"nodeType": "Return",
												"src": "4467:29:1"
											}
										]
									},
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "4199:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4383:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 773,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4430:8:1"
									},
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4404:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "4396:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 770,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4396:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4395:14:1"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "4448:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 774,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:9:1"
									},
									"scope": 952,
									"src": "4374:129:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1032
									],
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "4902:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 798,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "4923:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 799,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4929:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 797,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "4912:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4912:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "4912:25:1"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "4509:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 793,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "4895:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 792,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "4882:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4882:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 795,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 791,
												"name": "onlyRole",
												"nameLocations": [
													"4873:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 675,
												"src": "4873:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4873:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4808:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 790,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4864:8:1"
									},
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4826:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4818:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 785,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4818:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4840:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4832:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4832:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4817:31:1"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4902:0:1"
									},
									"scope": 952,
									"src": "4799:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1040
									],
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "5328:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 818,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "5350:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 819,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "5356:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 817,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "5338:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5338:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "5338:26:1"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "4950:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 813,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "5321:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 812,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "5308:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5308:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 815,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 811,
												"name": "onlyRole",
												"nameLocations": [
													"5299:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 675,
												"src": "5299:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5299:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5233:10:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 810,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5290:8:1"
									},
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5252:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "5244:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 805,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5266:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "5258:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5243:31:1"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5328:0:1"
									},
									"scope": 952,
									"src": "5224:147:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1048
									],
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "5985:137:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 833,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "6003:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 834,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "6014:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6003:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6028:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 832,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5995:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "5995:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 841,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "6101:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 842,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "6107:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 840,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "6089:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6089:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "6089:26:1"
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "5377:526:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5917:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 830,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5976:8:1"
									},
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5938:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "5930:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 825,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5930:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5952:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "5944:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5929:31:1"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5985:0:1"
									},
									"scope": 952,
									"src": "5908:214:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "6875:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 855,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "6896:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 856,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "6902:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 854,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "6885:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6885:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "6885:25:1"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "6128:674:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6816:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6835:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "6827:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 848,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6827:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6849:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "6841:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6841:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6826:31:1"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6875:0:1"
									},
									"scope": 952,
									"src": "6807:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "7115:174:1",
										"statements": [
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7133:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "7125:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 868,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7125:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 873,
												"initialValue": {
													"arguments": [
														{
															"id": 871,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "7166:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 870,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "7153:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7153:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7125:46:1"
											},
											{
												"expression": {
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 874,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "7181:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$656_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 876,
															"indexExpression": {
																"id": 875,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "7188:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7181:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$656_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 877,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7194:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 655,
														"src": "7181:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 878,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "7206:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7181:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "7181:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 882,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "7247:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 883,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "7253:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 884,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "7272:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 881,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "7230:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7230:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "EmitStatement",
												"src": "7225:57:1"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "6923:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7051:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7073:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "7065:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 862,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7065:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7087:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "7079:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 864,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7079:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7064:33:1"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7115:0:1"
									},
									"scope": 952,
									"src": "7042:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "7525:165:1",
										"statements": [
											{
												"condition": {
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7539:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 897,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "7548:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 898,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "7554:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 896,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "7540:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7540:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 918,
												"nodeType": "IfStatement",
												"src": "7535:149:1",
												"trueBody": {
													"id": 917,
													"nodeType": "Block",
													"src": "7564:120:1",
													"statements": [
														{
															"expression": {
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 901,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 661,
																				"src": "7578:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$656_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 903,
																			"indexExpression": {
																				"id": 902,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 891,
																				"src": "7585:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7578:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$656_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 904,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7591:7:1",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 653,
																		"src": "7578:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 906,
																	"indexExpression": {
																		"id": 905,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "7599:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7578:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7610:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7578:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 909,
															"nodeType": "ExpressionStatement",
															"src": "7578:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 911,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "7645:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 912,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "7651:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 913,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "7660:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7660:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 910,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "7633:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7633:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 916,
															"nodeType": "EmitStatement",
															"src": "7628:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "7295:157:1",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7466:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7485:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "7477:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 890,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7499:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "7491:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7491:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7476:31:1"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7525:0:1"
									},
									"scope": 952,
									"src": "7457:233:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "7930:165:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 929,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "7952:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 930,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "7958:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 928,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "7944:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7944:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 949,
												"nodeType": "IfStatement",
												"src": "7940:149:1",
												"trueBody": {
													"id": 948,
													"nodeType": "Block",
													"src": "7968:121:1",
													"statements": [
														{
															"expression": {
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 932,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 661,
																				"src": "7982:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$656_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 934,
																			"indexExpression": {
																				"id": 933,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 923,
																				"src": "7989:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7982:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$656_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 935,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7995:7:1",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 653,
																		"src": "7982:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 937,
																	"indexExpression": {
																		"id": 936,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "8003:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7982:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8014:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7982:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 940,
															"nodeType": "ExpressionStatement",
															"src": "7982:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 942,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "8050:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 943,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "8056:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 944,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "8065:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8065:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 941,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "8038:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8038:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 947,
															"nodeType": "EmitStatement",
															"src": "8033:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "7696:160:1",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7870:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7890:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "7882:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 922,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7904:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "7896:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7896:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7881:31:1"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7930:0:1"
									},
									"scope": 952,
									"src": "7861:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 953,
							"src": "1802:6295:1",
							"usedErrors": []
						}
					],
					"src": "108:7990:1"
				},
				"id": 1
			},
			"source/BinanceBABT/contracts/erc/ERC165.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/erc/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							976
						],
						"IERC165": [
							1061
						]
					},
					"id": 977,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 954,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:2"
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/interfaces/IERC165.sol",
							"file": "../interfaces/IERC165.sol",
							"id": 955,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 977,
							"sourceUnit": 1062,
							"src": "124:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 957,
										"name": "IERC165",
										"nameLocations": [
											"766:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1061,
										"src": "766:7:2"
									},
									"id": 958,
									"nodeType": "InheritanceSpecifier",
									"src": "766:7:2"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 956,
								"nodeType": "StructuredDocumentation",
								"src": "161:576:2",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 976,
							"linearizedBaseContracts": [
								976,
								1061
							],
							"name": "ERC165",
							"nameLocation": "756:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1060
									],
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "932:64:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 967,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "949:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 969,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "969:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1061_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1061_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 968,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "964:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "964:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1061",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "978:11:2",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "964:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "949:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 966,
												"id": 973,
												"nodeType": "Return",
												"src": "942:47:2"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "780:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "850:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 963,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "908:8:2"
									},
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "875:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "868:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 960,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "868:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:20:2"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "926:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 964,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "926:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:6:2"
									},
									"scope": 976,
									"src": "841:155:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 977,
							"src": "738:260:2",
							"usedErrors": []
						}
					],
					"src": "99:900:2"
				},
				"id": 2
			},
			"source/BinanceBABT/contracts/interfaces/IAccessControl.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/interfaces/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1049
						]
					},
					"id": 1050,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 978,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 979,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:3",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 1049,
							"linearizedBaseContracts": [
								1049
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:3",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 988,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "560:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 981,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "582:33:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 983,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "617:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 985,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:3"
									},
									"src": "537:110:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:3",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 997,
									"name": "RoleGranted",
									"nameLocation": "876:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "888:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 990,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "910:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "935:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:3"
									},
									"src": "870:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:3",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 1006,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "1263:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 999,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "1285:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "1310:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:3"
									},
									"src": "1245:89:3"
								},
								{
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:3",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1016,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1438:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1008,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1452:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:3"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1492:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1013,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:3"
									},
									"scope": 1049,
									"src": "1421:77:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:3",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "1715:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1018,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:3"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "1752:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1021,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:3"
									},
									"scope": 1049,
									"src": "1693:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:3",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "2030:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1026,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "2044:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:3"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:3"
									},
									"scope": 1049,
									"src": "2011:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:3",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2324:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2338:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:3"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:3"
									},
									"scope": 1049,
									"src": "2304:60:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:3",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 1048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "2877:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1042,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "2891:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:3"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:3"
									},
									"scope": 1049,
									"src": "2855:62:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1050,
							"src": "209:2710:3",
							"usedErrors": []
						}
					],
					"src": "94:2826:3"
				},
				"id": 3
			},
			"source/BinanceBABT/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1061
						]
					},
					"id": 1062,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1051,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1052,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:4",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1061,
							"linearizedBaseContracts": [
								1061
							],
							"name": "IERC165",
							"nameLocation": "415:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "801:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1054,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:4"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "844:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1057,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:4"
									},
									"scope": 1061,
									"src": "774:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1062,
							"src": "405:447:4",
							"usedErrors": []
						}
					],
					"src": "100:753:4"
				},
				"id": 4
			},
			"source/BinanceBABT/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1061
						],
						"IERC721": [
							1177
						]
					},
					"id": 1178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1063,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:5"
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1064,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1062,
							"src": "133:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1066,
										"name": "IERC165",
										"nameLocations": [
											"247:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1061,
										"src": "247:7:5"
									},
									"id": 1067,
									"nodeType": "InheritanceSpecifier",
									"src": "247:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1065,
								"nodeType": "StructuredDocumentation",
								"src": "158:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1177,
							"linearizedBaseContracts": [
								1177,
								1061
							],
							"name": "IERC721",
							"nameLocation": "236:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "261:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1076,
									"name": "Transfer",
									"nameLocation": "360:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "385:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "369:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "407:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "391:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "427:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "411:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "368:67:5"
									},
									"src": "354:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "442:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1085,
									"name": "Approval",
									"nameLocation": "547:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "572:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "556:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "595:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "579:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "621:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "605:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:74:5"
									},
									"src": "541:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "636:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1094,
									"name": "ApprovalForAll",
									"nameLocation": "764:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "795:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "779:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "802:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "833:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "828:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "828:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:64:5"
									},
									"src": "758:85:5"
								},
								{
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "849:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "939:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "957:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "949:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:15:5"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "995:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "987:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:17:5"
									},
									"scope": 1177,
									"src": "930:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "1010:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1155:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1171:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1163:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:17:5"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1211:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1203:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:15:5"
									},
									"scope": 1177,
									"src": "1146:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "1224:556:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1794:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1828:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1820:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1850:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1842:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1870:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1862:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1902:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1887:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1887:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1810:102:5"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1921:0:5"
									},
									"scope": 1177,
									"src": "1785:137:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "1928:687:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2629:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2663:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2655:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2685:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2677:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2705:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2697:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2697:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:73:5"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:0:5"
									},
									"scope": 1177,
									"src": "2620:108:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "2734:504:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3252:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3282:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "3274:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3304:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "3296:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3324:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "3316:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:73:5"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3346:0:5"
									},
									"scope": 1177,
									"src": "3243:104:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "3353:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3819:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3835:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3827:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3847:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3839:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3826:29:5"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3864:0:5"
									},
									"scope": 1177,
									"src": "3810:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "3871:309:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4194:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4220:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "4212:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4212:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4235:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "4230:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4230:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4211:34:5"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4254:0:5"
									},
									"scope": 1177,
									"src": "4185:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "4261:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4414:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4434:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "4426:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4426:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4425:17:5"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4474:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "4466:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4465:18:5"
									},
									"scope": 1177,
									"src": "4405:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "4490:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4642:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4667:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "4659:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4682:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "4674:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4658:33:5"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "4715:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4715:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4714:6:5"
									},
									"scope": 1177,
									"src": "4633:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1178,
							"src": "226:4497:5",
							"usedErrors": []
						}
					],
					"src": "108:4616:5"
				},
				"id": 5
			},
			"source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/interfaces/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721Metadata": [
							1204
						],
						"ISBT721": [
							1285
						]
					},
					"id": 1205,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/interfaces/ISBT721.sol",
							"file": "./ISBT721.sol",
							"id": 1180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1205,
							"sourceUnit": 1286,
							"src": "137:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1182,
										"name": "ISBT721",
										"nameLocations": [
											"325:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1285,
										"src": "325:7:6"
									},
									"id": 1183,
									"nodeType": "InheritanceSpecifier",
									"src": "325:7:6"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1181,
								"nodeType": "StructuredDocumentation",
								"src": "162:133:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1204,
							"linearizedBaseContracts": [
								1204,
								1285
							],
							"name": "IERC721Metadata",
							"nameLocation": "306:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "339:58:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "411:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:2:6"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "441:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1186,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "441:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "440:15:6"
									},
									"scope": 1204,
									"src": "402:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "462:60:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "536:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "542:2:6"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "568:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1192,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "568:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:15:6"
									},
									"scope": 1204,
									"src": "527:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "589:90:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "693:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "710:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "702:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:17:6"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "742:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "742:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:15:6"
									},
									"scope": 1204,
									"src": "684:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1205,
							"src": "296:463:6",
							"usedErrors": []
						}
					],
					"src": "112:648:6"
				},
				"id": 6
			},
			"source/BinanceBABT/contracts/interfaces/ISBT721.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/interfaces/ISBT721.sol",
					"exportedSymbols": {
						"ISBT721": [
							1285
						]
					},
					"id": 1286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1206,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISBT721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1285,
							"linearizedBaseContracts": [
								1285
							],
							"name": "ISBT721",
							"nameLocation": "67:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "81:215:7",
										"text": " @dev This emits when a new token is created and bound to an account by\n any mechanism.\n Note: For a reliable `to` parameter, retrieve the transaction's\n authenticated `to` field."
									},
									"eventSelector": "e9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a27",
									"id": 1213,
									"name": "Attest",
									"nameLocation": "307:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "330:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "314:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "350:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "334:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "313:45:7"
									},
									"src": "301:58:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "365:229:7",
										"text": " @dev This emits when an existing SBT is revoked from an account and\n destroyed by any mechanism.\n Note: For a reliable `from` parameter, retrieve the transaction's\n authenticated `from` field."
									},
									"eventSelector": "ec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b",
									"id": 1220,
									"name": "Revoke",
									"nameLocation": "605:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "628:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "612:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "650:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "634:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:47:7"
									},
									"src": "599:60:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "665:79:7",
										"text": " @dev This emits when an existing SBT is burned by an account"
									},
									"eventSelector": "cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5",
									"id": 1227,
									"name": "Burn",
									"nameLocation": "755:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "776:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "760:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "798:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "782:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:47:7"
									},
									"src": "749:58:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "813:88:7",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1236,
									"name": "Transfer",
									"nameLocation": "912:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "937:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "921:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "959:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "943:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "979:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "963:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "920:67:7"
									},
									"src": "906:82:7"
								},
								{
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "994:243:7",
										"text": " @dev Mints SBT\n Requirements:\n - `to` must be valid.\n - `to` must not exist.\n Emits a {Attest} event.\n Emits a {Transfer} event.\n @return The tokenId of the minted SBT"
									},
									"functionSelector": "eb31403f",
									"id": 1244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "attest",
									"nameLocation": "1251:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1266:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "1258:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:12:7"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "1288:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1288:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1287:9:7"
									},
									"scope": 1285,
									"src": "1242:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "1303:169:7",
										"text": " @dev Revokes SBT\n Requirements:\n - `from` must exist.\n Emits a {Revoke} event.\n Emits a {Transfer} event."
									},
									"functionSelector": "74a8f103",
									"id": 1250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revoke",
									"nameLocation": "1486:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1501:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "1493:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:14:7"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1515:0:7"
									},
									"scope": 1285,
									"src": "1477:39:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "1522:232:7",
										"text": " @notice At any time, an SBT receiver must be able to\n  disassociate themselves from an SBT publicly through calling this\n  function.\n Emits a {Burn} event.\n Emits a {Transfer} event."
									},
									"functionSelector": "44df8e70",
									"id": 1254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1768:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1772:2:7"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1783:0:7"
									},
									"scope": 1285,
									"src": "1759:25:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "1790:326:7",
										"text": " @notice Count all SBTs assigned to an owner\n @dev SBTs assigned to the zero address is considered invalid, and this\n function throws for queries about the zero address.\n @param owner An address for whom to query the balance\n @return The number of SBTs owned by `owner`, possibly zero"
									},
									"functionSelector": "70a08231",
									"id": 1262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2130:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2148:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "2140:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:15:7"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "2178:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2178:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2177:9:7"
									},
									"scope": 1285,
									"src": "2121:66:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "2193:173:7",
										"text": " @param from The address of the SBT owner\n @return The tokenId of the owner's SBT, and throw an error if there is no SBT belongs to the given address"
									},
									"functionSelector": "773c02d4",
									"id": 1270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenIdOf",
									"nameLocation": "2380:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2398:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2390:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2390:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2389:14:7"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2427:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2426:9:7"
									},
									"scope": 1285,
									"src": "2371:65:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "2442:270:7",
										"text": " @notice Find the address bound to a SBT\n @dev SBTs assigned to zero address are considered invalid, and queries\n  about them do throw.\n @param tokenId The identifier for an SBT\n @return The address of the owner bound to the SBT"
									},
									"functionSelector": "6352211e",
									"id": 1278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2726:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2742:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "2734:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2734:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2733:17:7"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "2774:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2773:9:7"
									},
									"scope": 1285,
									"src": "2717:66:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "2789:66:7",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2869:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2880:2:7"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "2906:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2906:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2905:9:7"
									},
									"scope": 1285,
									"src": "2860:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1286,
							"src": "57:2860:7",
							"usedErrors": []
						}
					],
					"src": "32:2886:7"
				},
				"id": 7
			},
			"source/BinanceBABT/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1615
						]
					},
					"id": 1616,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1287,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1288,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1615,
							"linearizedBaseContracts": [
								1615
							],
							"name": "Address",
							"nameLocation": "202:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "1241:254:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1296,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "1465:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1295,
												"id": 1301,
												"nodeType": "Return",
												"src": "1458:30:8"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1195:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:8"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1235:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:8"
									},
									"scope": 1615,
									"src": "1175:320:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "2483:241:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1314,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1615",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1615",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1312,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1317,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "2526:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:8"
											},
											{
												"assignments": [
													1323,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1323,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1336,
														"src": "2578:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1322,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1330,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1324,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "2596:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1326,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "2618:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1332,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "2647:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:8"
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "2431:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "2458:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:8"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:8"
									},
									"scope": 1615,
									"src": "2412:312:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "3555:96:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1348,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "3594:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1349,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "3602:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1347,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1395,
															1439
														],
														"referencedDeclaration": 1439,
														"src": "3572:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1346,
												"id": 1353,
												"nodeType": "Return",
												"src": "3565:79:8"
											}
										]
									},
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "3488:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "3504:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:8"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "3541:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:8"
									},
									"scope": 1615,
									"src": "3466:185:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "4020:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1368,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "4059:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1369,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "4067:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1371,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "4076:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1367,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1395,
															1439
														],
														"referencedDeclaration": 1439,
														"src": "4037:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1366,
												"id": 1373,
												"nodeType": "Return",
												"src": "4030:59:8"
											}
										]
									},
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3904:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3928:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3955:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:8"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "4006:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:8"
									},
									"scope": 1615,
									"src": "3873:223:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "4601:111:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1388,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "4640:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1389,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "4648:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1390,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "4654:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1387,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1395,
															1439
														],
														"referencedDeclaration": 1439,
														"src": "4618:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1386,
												"id": 1393,
												"nodeType": "Return",
												"src": "4611:94:8"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "4498:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "4522:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "4549:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:8"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "4587:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1384,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:8"
									},
									"scope": 1615,
									"src": "4458:254:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "5139:267:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1412,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1615",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1615",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1410,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1415,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "5182:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:8"
											},
											{
												"assignments": [
													1421,
													1423
												],
												"declarations": [
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1438,
														"src": "5241:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1420,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1423,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1438,
														"src": "5255:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1422,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1430,
												"initialValue": {
													"arguments": [
														{
															"id": 1428,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "5308:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1424,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "5282:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1426,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "5301:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1432,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "5357:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1433,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "5365:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1434,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "5374:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1435,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "5386:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1431,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "5330:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1408,
												"id": 1437,
												"nodeType": "Return",
												"src": "5323:76:8"
											}
										]
									},
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "5000:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "5024:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "5051:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "5074:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1403,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:8"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "5125:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:8"
									},
									"scope": 1615,
									"src": "4960:446:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "5683:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1450,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "5719:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1451,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "5727:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1449,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1456,
															1485
														],
														"referencedDeclaration": 1485,
														"src": "5700:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1448,
												"id": 1454,
												"nodeType": "Return",
												"src": "5693:80:8"
											}
										]
									},
									"documentation": {
										"id": 1440,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "5611:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "5627:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1443,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:8"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "5669:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:8"
									},
									"scope": 1615,
									"src": "5583:197:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "6122:168:8",
										"statements": [
											{
												"assignments": [
													1469,
													1471
												],
												"declarations": [
													{
														"constant": false,
														"id": 1469,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "6133:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1468,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1471,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "6147:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1470,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1476,
												"initialValue": {
													"arguments": [
														{
															"id": 1474,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "6192:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1472,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "6174:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1478,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "6241:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1479,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "6249:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1480,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "6258:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1481,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "6270:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1477,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "6214:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1467,
												"id": 1483,
												"nodeType": "Return",
												"src": "6207:76:8"
											}
										]
									},
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "6001:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "6025:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "6052:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:8"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "6108:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:8"
									},
									"scope": 1615,
									"src": "5964:326:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "6566:101:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1496,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "6604:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1497,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "6612:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1495,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1502,
															1531
														],
														"referencedDeclaration": 1531,
														"src": "6583:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1494,
												"id": 1500,
												"nodeType": "Return",
												"src": "6576:84:8"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "6499:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "6515:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:8"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "6552:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:8"
									},
									"scope": 1615,
									"src": "6469:198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "7008:170:8",
										"statements": [
											{
												"assignments": [
													1515,
													1517
												],
												"declarations": [
													{
														"constant": false,
														"id": 1515,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1530,
														"src": "7019:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1514,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1517,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1530,
														"src": "7033:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1516,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1522,
												"initialValue": {
													"arguments": [
														{
															"id": 1520,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "7080:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1518,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "7060:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1524,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "7129:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1525,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "7137:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1526,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "7146:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1527,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "7158:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1523,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "7102:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1513,
												"id": 1529,
												"nodeType": "Return",
												"src": "7095:76:8"
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "6892:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "6916:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "6943:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1508,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:8"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "6994:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:8"
									},
									"scope": 1615,
									"src": "6853:325:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "7660:434:8",
										"statements": [
											{
												"condition": {
													"id": 1545,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1536,
													"src": "7674:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1567,
													"nodeType": "Block",
													"src": "8030:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1563,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "8052:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1564,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1540,
																		"src": "8064:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1562,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1614,
																	"src": "8044:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1566,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:8"
														}
													]
												},
												"id": 1568,
												"nodeType": "IfStatement",
												"src": "7670:418:8",
												"trueBody": {
													"id": 1561,
													"nodeType": "Block",
													"src": "7683:341:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1546,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "7701:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:8",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1558,
															"nodeType": "IfStatement",
															"src": "7697:286:8",
															"trueBody": {
																"id": 1557,
																"nodeType": "Block",
																"src": "7725:258:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1552,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1534,
																							"src": "7927:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1551,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1303,
																						"src": "7916:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1553,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1554,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1550,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1556,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1559,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "8003:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1544,
															"id": 1560,
															"nodeType": "Return",
															"src": "7996:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "7511:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "7535:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1535,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "7557:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1537,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "7590:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1539,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:8"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "7646:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:8"
									},
									"scope": 1615,
									"src": "7466:628:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "8475:135:8",
										"statements": [
											{
												"condition": {
													"id": 1582,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1573,
													"src": "8489:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1591,
													"nodeType": "Block",
													"src": "8546:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1587,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1575,
																		"src": "8568:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1588,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1577,
																		"src": "8580:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1586,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1614,
																	"src": "8560:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1590,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:8"
														}
													]
												},
												"id": 1592,
												"nodeType": "IfStatement",
												"src": "8485:119:8",
												"trueBody": {
													"id": 1585,
													"nodeType": "Block",
													"src": "8498:42:8",
													"statements": [
														{
															"expression": {
																"id": 1583,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "8519:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1581,
															"id": 1584,
															"nodeType": "Return",
															"src": "8512:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:8",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "8350:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "8372:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "8405:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1576,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:8"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "8461:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:8"
									},
									"scope": 1615,
									"src": "8315:295:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "8699:457:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1601,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "8775:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1611,
													"nodeType": "Block",
													"src": "9105:45:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1608,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1598,
																		"src": "9126:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1607,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1610,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:8"
														}
													]
												},
												"id": 1612,
												"nodeType": "IfStatement",
												"src": "8771:379:8",
												"trueBody": {
													"id": 1606,
													"nodeType": "Block",
													"src": "8798:301:8",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1596,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1596,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:8",
																	"valueSize": 1
																}
															],
															"id": 1605,
															"nodeType": "InlineAssembly",
															"src": "8947:142:8"
														}
													]
												}
											}
										]
									},
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "8633:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1595,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "8658:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1597,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:8"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:8"
									},
									"scope": 1615,
									"src": "8616:540:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1616,
							"src": "194:8964:8",
							"usedErrors": []
						}
					],
					"src": "101:9058:8"
				},
				"id": 8
			},
			"source/BinanceBABT/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1637
						]
					},
					"id": 1638,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1617,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1618,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1637,
							"linearizedBaseContracts": [
								1637
							],
							"name": "Context",
							"nameLocation": "626:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "702:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1623,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1622,
												"id": 1625,
												"nodeType": "Return",
												"src": "712:17:9"
											}
										]
									},
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:9"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "693:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:9"
									},
									"scope": 1637,
									"src": "640:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "809:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1632,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1631,
												"id": 1634,
												"nodeType": "Return",
												"src": "819:15:9"
											}
										]
									},
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:9"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "793:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:9"
									},
									"scope": 1637,
									"src": "742:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1638,
							"src": "608:235:9",
							"usedErrors": []
						}
					],
					"src": "86:758:9"
				},
				"id": 9
			},
			"source/BinanceBABT/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1711
						]
					},
					"id": 1712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1639,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1640,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:10",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1711,
							"linearizedBaseContracts": [
								1711
							],
							"name": "Counters",
							"nameLocation": "432:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1643,
									"members": [
										{
											"constant": false,
											"id": 1642,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1643,
											"src": "786:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1641,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:10",
									"nodeType": "StructDefinition",
									"scope": 1711,
									"src": "447:374:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "901:38:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1651,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "918:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:10",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1642,
													"src": "918:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1650,
												"id": 1653,
												"nodeType": "Return",
												"src": "911:21:10"
											}
										]
									},
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "844:23:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1645,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1644,
														"name": "Counter",
														"nameLocations": [
															"844:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1643,
														"src": "844:7:10"
													},
													"referencedDeclaration": 1643,
													"src": "844:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:10"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "892:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:10"
									},
									"scope": 1711,
									"src": "827:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "998:70:10",
										"statements": [
											{
												"id": 1667,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:10",
												"statements": [
													{
														"expression": {
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1661,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "1032:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:10",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1642,
																"src": "1032:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1666,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:10"
													}
												]
											}
										]
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "964:23:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1656,
														"name": "Counter",
														"nameLocations": [
															"964:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1643,
														"src": "964:7:10"
													},
													"referencedDeclaration": 1643,
													"src": "964:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:10"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:10"
									},
									"scope": 1711,
									"src": "945:123:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "1127:176:10",
										"statements": [
											{
												"assignments": [
													1676
												],
												"declarations": [
													{
														"constant": false,
														"id": 1676,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "1137:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1675,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1679,
												"initialValue": {
													"expression": {
														"id": 1677,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "1153:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:10",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1642,
													"src": "1153:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1681,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "1185:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1680,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:10"
											},
											{
												"id": 1695,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:10",
												"statements": [
													{
														"expression": {
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1687,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1672,
																	"src": "1260:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:10",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1642,
																"src": "1260:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1690,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "1277:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1694,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:10"
													}
												]
											}
										]
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "1093:23:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1670,
														"name": "Counter",
														"nameLocations": [
															"1093:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1643,
														"src": "1093:7:10"
													},
													"referencedDeclaration": 1643,
													"src": "1093:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:10"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:10"
									},
									"scope": 1711,
									"src": "1074:229:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "1358:35:10",
										"statements": [
											{
												"expression": {
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1703,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "1368:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:10",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1642,
														"src": "1368:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:10"
											}
										]
									},
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1324:23:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1698,
														"name": "Counter",
														"nameLocations": [
															"1324:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1643,
														"src": "1324:7:10"
													},
													"referencedDeclaration": 1643,
													"src": "1324:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1643_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:10"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:10"
									},
									"scope": 1711,
									"src": "1309:84:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1712,
							"src": "424:971:10",
							"usedErrors": []
						}
					],
					"src": "87:1309:10"
				},
				"id": 10
			},
			"source/BinanceBABT/contracts/utils/EnumerableMap.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/utils/EnumerableMap.sol",
					"exportedSymbols": {
						"EnumerableMap": [
							2833
						],
						"EnumerableSet": [
							3432
						]
					},
					"id": 2834,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:11"
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/EnumerableSet.sol",
							"file": "./EnumerableSet.sol",
							"id": 1714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2834,
							"sourceUnit": 3433,
							"src": "140:29:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableMap",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1715,
								"nodeType": "StructuredDocumentation",
								"src": "171:1353:11",
								"text": " @dev Library for managing an enumerable variant of Solidity's\n https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n type.\n Maps have the following properties:\n - Entries are added, removed, and checked for existence in constant time\n (O(1)).\n - Entries are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableMap for EnumerableMap.UintToAddressMap;\n     // Declare a set state variable\n     EnumerableMap.UintToAddressMap private myMap;\n }\n ```\n The following map types are supported:\n - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n - `bytes32 -> bytes32` (`Bytes32ToBytes32`) since v4.6.0\n - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap.\n ===="
							},
							"fullyImplemented": true,
							"id": 2833,
							"linearizedBaseContracts": [
								2833
							],
							"name": "EnumerableMap",
							"nameLocation": "1533:13:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1719,
									"libraryName": {
										"id": 1716,
										"name": "EnumerableSet",
										"nameLocations": [
											"1559:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3432,
										"src": "1559:13:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1553:49:11",
									"typeName": {
										"id": 1718,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1717,
											"name": "EnumerableSet.Bytes32Set",
											"nameLocations": [
												"1577:13:11",
												"1591:10:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3038,
											"src": "1577:24:11"
										},
										"referencedDeclaration": 3038,
										"src": "1577:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
											"typeString": "struct EnumerableSet.Bytes32Set"
										}
									}
								},
								{
									"canonicalName": "EnumerableMap.Bytes32ToBytes32Map",
									"id": 1727,
									"members": [
										{
											"constant": false,
											"id": 1722,
											"mutability": "mutable",
											"name": "_keys",
											"nameLocation": "2155:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1727,
											"src": "2130:30:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
												"typeString": "struct EnumerableSet.Bytes32Set"
											},
											"typeName": {
												"id": 1721,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1720,
													"name": "EnumerableSet.Bytes32Set",
													"nameLocations": [
														"2130:13:11",
														"2144:10:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3038,
													"src": "2130:24:11"
												},
												"referencedDeclaration": 3038,
												"src": "2130:24:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1726,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "2198:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 1727,
											"src": "2170:35:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
												"typeString": "mapping(bytes32 => bytes32)"
											},
											"typeName": {
												"id": 1725,
												"keyType": {
													"id": 1723,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2178:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2170:27:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
													"typeString": "mapping(bytes32 => bytes32)"
												},
												"valueType": {
													"id": 1724,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32ToBytes32Map",
									"nameLocation": "2073:19:11",
									"nodeType": "StructDefinition",
									"scope": 2833,
									"src": "2066:146:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "2567:76:11",
										"statements": [
											{
												"expression": {
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1740,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "2577:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2581:7:11",
															"memberName": "_values",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1726,
															"src": "2577:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																"typeString": "mapping(bytes32 => bytes32)"
															}
														},
														"id": 1744,
														"indexExpression": {
															"id": 1742,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "2589:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2577:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1745,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "2596:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2577:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1747,
												"nodeType": "ExpressionStatement",
												"src": "2577:24:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1751,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "2632:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 1748,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "2618:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2622:5:11",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1722,
															"src": "2618:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2628:3:11",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3056,
														"src": "2618:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$3038_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$3038_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2618:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1739,
												"id": 1753,
												"nodeType": "Return",
												"src": "2611:25:11"
											}
										]
									},
									"documentation": {
										"id": 1728,
										"nodeType": "StructuredDocumentation",
										"src": "2218:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 1755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "2448:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "2489:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2461:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1730,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1729,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"2461:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1727,
														"src": "2461:19:11"
													},
													"referencedDeclaration": 1727,
													"src": "2461:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2510:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2502:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1732,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2531:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2523:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1734,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2523:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2451:91:11"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2561:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1737,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2561:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2560:6:11"
									},
									"scope": 2833,
									"src": "2439:204:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "2897:78:11",
										"statements": [
											{
												"expression": {
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2907:23:11",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 1766,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "2914:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2918:7:11",
															"memberName": "_values",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1726,
															"src": "2914:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																"typeString": "mapping(bytes32 => bytes32)"
															}
														},
														"id": 1769,
														"indexExpression": {
															"id": 1768,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "2926:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2914:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "2907:23:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1775,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "2964:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 1772,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "2947:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2951:5:11",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1722,
															"src": "2947:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2957:6:11",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3074,
														"src": "2947:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$3038_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$3038_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2947:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1765,
												"id": 1777,
												"nodeType": "Return",
												"src": "2940:28:11"
											}
										]
									},
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "2649:157:11",
										"text": " @dev Removes a key-value pair from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "2820:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "2855:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2827:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1758,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1757,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"2827:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1727,
														"src": "2827:19:11"
													},
													"referencedDeclaration": 1727,
													"src": "2827:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2868:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2860:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1760,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2826:46:11"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2891:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2891:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2890:6:11"
									},
									"scope": 2833,
									"src": "2811:164:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1796,
										"nodeType": "Block",
										"src": "3147:47:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1793,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "3183:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 1790,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1783,
																"src": "3164:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3168:5:11",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1722,
															"src": "3164:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1792,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3174:8:11",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3092,
														"src": "3164:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$3038_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$3038_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3164:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1789,
												"id": 1795,
												"nodeType": "Return",
												"src": "3157:30:11"
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "2981:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 1797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "3063:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3100:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3072:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1782,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1781,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3072:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1727,
														"src": "3072:19:11"
													},
													"referencedDeclaration": 1727,
													"src": "3072:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3113:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3105:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1784,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3071:46:11"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "3141:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3141:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:6:11"
									},
									"scope": 2833,
									"src": "3054:140:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "3365:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 1806,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "3382:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3386:5:11",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1722,
															"src": "3382:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1808,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3392:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3107,
														"src": "3382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$3038_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Bytes32Set_$3038_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3382:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1805,
												"id": 1810,
												"nodeType": "Return",
												"src": "3375:25:11"
											}
										]
									},
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "3200:79:11",
										"text": " @dev Returns the number of key-value pairs in the map. O(1)."
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "3293:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3328:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "3300:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1800,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1799,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3300:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1727,
														"src": "3300:19:11"
													},
													"referencedDeclaration": 1727,
													"src": "3300:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3299:33:11"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "3356:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3355:9:11"
									},
									"scope": 2833,
									"src": "3284:123:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1840,
										"nodeType": "Block",
										"src": "3861:90:11",
										"statements": [
											{
												"assignments": [
													1826
												],
												"declarations": [
													{
														"constant": false,
														"id": 1826,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "3879:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1840,
														"src": "3871:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1825,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3871:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1832,
												"initialValue": {
													"arguments": [
														{
															"id": 1830,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1818,
															"src": "3898:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1827,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "3885:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3889:5:11",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1722,
															"src": "3885:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1829,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3895:2:11",
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3125,
														"src": "3885:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$3038_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Set_$3038_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3885:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3871:33:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1833,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "3922:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"baseExpression": {
																"expression": {
																	"id": 1834,
																	"name": "map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "3927:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																	}
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3931:7:11",
																"memberName": "_values",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1726,
																"src": "3927:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																	"typeString": "mapping(bytes32 => bytes32)"
																}
															},
															"id": 1837,
															"indexExpression": {
																"id": 1836,
																"name": "key",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1826,
																"src": "3939:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3927:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1838,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3921:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"functionReturnParameters": 1824,
												"id": 1839,
												"nodeType": "Return",
												"src": "3914:30:11"
											}
										]
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "3413:342:11",
										"text": " @dev Returns the key-value pair stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of entries inside the\n array, and it may change when more entries are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "3769:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3800:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "3772:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1815,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1814,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3772:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1727,
														"src": "3772:19:11"
													},
													"referencedDeclaration": 1727,
													"src": "3772:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3813:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "3805:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3771:48:11"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "3843:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1820,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3843:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "3852:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1822,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3852:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3842:18:11"
									},
									"scope": 2833,
									"src": "3760:191:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1884,
										"nodeType": "Block",
										"src": "4193:198:11",
										"statements": [
											{
												"assignments": [
													1855
												],
												"declarations": [
													{
														"constant": false,
														"id": 1855,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "4211:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1884,
														"src": "4203:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1854,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4203:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1860,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1856,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "4219:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
															}
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4223:7:11",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1726,
														"src": "4219:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 1859,
													"indexExpression": {
														"id": 1858,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "4231:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4219:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4203:32:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1861,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "4249:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4266:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4258:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 1862,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4258:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4258:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4249:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1882,
													"nodeType": "Block",
													"src": "4340:45:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4362:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"id": 1879,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1855,
																		"src": "4368:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1880,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4361:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
																	"typeString": "tuple(bool,bytes32)"
																}
															},
															"functionReturnParameters": 1853,
															"id": 1881,
															"nodeType": "Return",
															"src": "4354:20:11"
														}
													]
												},
												"id": 1883,
												"nodeType": "IfStatement",
												"src": "4245:140:11",
												"trueBody": {
													"id": 1877,
													"nodeType": "Block",
													"src": "4270:64:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"id": 1868,
																				"name": "map",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1845,
																				"src": "4301:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																					"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																				}
																			},
																			{
																				"id": 1869,
																				"name": "key",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1847,
																				"src": "4306:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																					"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1867,
																			"name": "contains",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1797,
																				2026,
																				2239,
																				2488,
																				2710
																			],
																			"referencedDeclaration": 1797,
																			"src": "4292:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																				"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
																			}
																		},
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4292:18:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4320:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4312:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1871,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "4312:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4312:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1875,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4291:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
																	"typeString": "tuple(bool,bytes32)"
																}
															},
															"functionReturnParameters": 1853,
															"id": 1876,
															"nodeType": "Return",
															"src": "4284:39:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "3957:131:11",
										"text": " @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 1885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "4102:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "4137:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "4109:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1844,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1843,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"4109:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1727,
														"src": "4109:19:11"
													},
													"referencedDeclaration": 1727,
													"src": "4109:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4150:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "4142:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1846,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4142:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4108:46:11"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "4178:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1849,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4178:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "4184:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1851,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4177:15:11"
									},
									"scope": 2833,
									"src": "4093:298:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "4634:156:11",
										"statements": [
											{
												"assignments": [
													1897
												],
												"declarations": [
													{
														"constant": false,
														"id": 1897,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "4652:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1917,
														"src": "4644:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1896,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4644:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1902,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1898,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "4660:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
															}
														},
														"id": 1899,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4664:7:11",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1726,
														"src": "4660:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 1901,
													"indexExpression": {
														"id": 1900,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "4672:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4660:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4644:32:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1904,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1897,
																	"src": "4694:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4703:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4694:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1908,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "4717:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																		}
																	},
																	{
																		"id": 1909,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "4722:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1907,
																	"name": "contains",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1797,
																		2026,
																		2239,
																		2488,
																		2710
																	],
																	"referencedDeclaration": 1797,
																	"src": "4708:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																		"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
																	}
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4708:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4694:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579",
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4728:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072",
																"typeString": "literal_string \"EnumerableMap: nonexistent key\""
															},
															"value": "EnumerableMap: nonexistent key"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072",
																"typeString": "literal_string \"EnumerableMap: nonexistent key\""
															}
														],
														"id": 1903,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4686:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4686:75:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "4686:75:11"
											},
											{
												"expression": {
													"id": 1915,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1897,
													"src": "4778:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1895,
												"id": 1916,
												"nodeType": "Return",
												"src": "4771:12:11"
											}
										]
									},
									"documentation": {
										"id": 1886,
										"nodeType": "StructuredDocumentation",
										"src": "4397:141:11",
										"text": " @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "4552:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "4584:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "4556:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1887,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"4556:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1727,
														"src": "4556:19:11"
													},
													"referencedDeclaration": 1727,
													"src": "4556:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4597:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "4589:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1890,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4589:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4555:46:11"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "4625:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1893,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4625:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4624:9:11"
									},
									"scope": 2833,
									"src": "4543:247:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1952,
										"nodeType": "Block",
										"src": "5221:136:11",
										"statements": [
											{
												"assignments": [
													1932
												],
												"declarations": [
													{
														"constant": false,
														"id": 1932,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "5239:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1952,
														"src": "5231:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1931,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5231:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1937,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1933,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "5247:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
															}
														},
														"id": 1934,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5251:7:11",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1726,
														"src": "5247:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 1936,
													"indexExpression": {
														"id": 1935,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1924,
														"src": "5259:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5247:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5231:32:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1939,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "5281:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5290:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5281:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1943,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1922,
																		"src": "5304:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																		}
																	},
																	{
																		"id": 1944,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1924,
																		"src": "5309:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1942,
																	"name": "contains",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1797,
																		2026,
																		2239,
																		2488,
																		2710
																	],
																	"referencedDeclaration": 1797,
																	"src": "5295:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																		"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
																	}
																},
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5295:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5281:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1947,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "5315:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1938,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5273:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5273:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "5273:55:11"
											},
											{
												"expression": {
													"id": 1950,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1932,
													"src": "5345:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1930,
												"id": 1951,
												"nodeType": "Return",
												"src": "5338:12:11"
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "4796:271:11",
										"text": " @dev Same as {_get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {_tryGet}."
									},
									"id": 1953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "5081:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "5122:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "5094:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 1921,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1920,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"5094:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1727,
														"src": "5094:19:11"
													},
													"referencedDeclaration": 1727,
													"src": "5094:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5143:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "5135:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1923,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5135:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5170:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "5156:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1925,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5156:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5084:104:11"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "5212:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1928,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5212:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5211:9:11"
									},
									"scope": 2833,
									"src": "5072:285:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.UintToUintMap",
									"id": 1957,
									"members": [
										{
											"constant": false,
											"id": 1956,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5436:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1957,
											"src": "5416:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 1955,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1954,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"5416:19:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1727,
													"src": "5416:19:11"
												},
												"referencedDeclaration": 1727,
												"src": "5416:19:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintToUintMap",
									"nameLocation": "5392:13:11",
									"nodeType": "StructDefinition",
									"scope": 2833,
									"src": "5385:64:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "5798:69:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1971,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1961,
																"src": "5819:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5823:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1956,
															"src": "5819:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1975,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "5839:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5831:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1973,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5831:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5831:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 1979,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1965,
																	"src": "5853:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5845:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1977,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5845:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5845:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1970,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1755,
															1984,
															2197,
															2434,
															2674
														],
														"referencedDeclaration": 1755,
														"src": "5815:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5815:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1982,
												"nodeType": "Return",
												"src": "5808:52:11"
											}
										]
									},
									"documentation": {
										"id": 1958,
										"nodeType": "StructuredDocumentation",
										"src": "5455:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "5685:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "5720:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "5698:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 1960,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1959,
														"name": "UintToUintMap",
														"nameLocations": [
															"5698:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1957,
														"src": "5698:13:11"
													},
													"referencedDeclaration": 1957,
													"src": "5698:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5741:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "5733:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5733:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5762:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "5754:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5754:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5688:85:11"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "5792:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5792:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5791:6:11"
									},
									"scope": 2833,
									"src": "5676:191:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "6106:56:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1996,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "6130:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6134:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1956,
															"src": "6130:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2000,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1990,
																	"src": "6150:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6142:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1998,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6142:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6142:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1995,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1779,
															2005,
															2218,
															2461,
															2692
														],
														"referencedDeclaration": 1779,
														"src": "6123:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6123:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1994,
												"id": 2003,
												"nodeType": "Return",
												"src": "6116:39:11"
											}
										]
									},
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "5873:148:11",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6035:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6064:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "6042:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 1987,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1986,
														"name": "UintToUintMap",
														"nameLocations": [
															"6042:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1957,
														"src": "6042:13:11"
													},
													"referencedDeclaration": 1957,
													"src": "6042:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6077:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "6069:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6069:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6041:40:11"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "6100:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1992,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6100:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6099:6:11"
									},
									"scope": 2833,
									"src": "6026:136:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2025,
										"nodeType": "Block",
										"src": "6328:58:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2017,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2009,
																"src": "6354:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6358:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1956,
															"src": "6354:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2021,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2011,
																	"src": "6374:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6366:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2019,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6366:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6366:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2016,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1797,
															2026,
															2239,
															2488,
															2710
														],
														"referencedDeclaration": 1797,
														"src": "6345:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6345:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2015,
												"id": 2024,
												"nodeType": "Return",
												"src": "6338:41:11"
											}
										]
									},
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "6168:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6250:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6281:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "6259:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2008,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2007,
														"name": "UintToUintMap",
														"nameLocations": [
															"6259:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1957,
														"src": "6259:13:11"
													},
													"referencedDeclaration": 1957,
													"src": "6259:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6294:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "6286:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6286:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6258:40:11"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "6322:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2013,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6322:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6321:6:11"
									},
									"scope": 2833,
									"src": "6241:145:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2040,
										"nodeType": "Block",
										"src": "6544:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2036,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "6568:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6572:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1956,
															"src": "6568:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2035,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1812,
															2041,
															2254,
															2503,
															2725
														],
														"referencedDeclaration": 1812,
														"src": "6561:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6561:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2034,
												"id": 2039,
												"nodeType": "Return",
												"src": "6554:25:11"
											}
										]
									},
									"documentation": {
										"id": 2027,
										"nodeType": "StructuredDocumentation",
										"src": "6392:72:11",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6478:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6507:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "6485:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2029,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2028,
														"name": "UintToUintMap",
														"nameLocations": [
															"6485:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1957,
														"src": "6485:13:11"
													},
													"referencedDeclaration": 1957,
													"src": "6485:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6484:27:11"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "6535:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6535:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6534:9:11"
									},
									"scope": 2833,
									"src": "6469:117:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2074,
										"nodeType": "Block",
										"src": "7018:116:11",
										"statements": [
											{
												"assignments": [
													2055,
													2057
												],
												"declarations": [
													{
														"constant": false,
														"id": 2055,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "7037:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 2074,
														"src": "7029:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2054,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7029:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2057,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "7050:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2074,
														"src": "7042:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2056,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7042:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2063,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2059,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "7062:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2060,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7066:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1956,
															"src": "7062:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2061,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "7074:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2058,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1841,
															2075,
															2294,
															2543,
															2756
														],
														"referencedDeclaration": 1841,
														"src": "7059:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7059:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7028:52:11"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 2066,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2055,
																	"src": "7106:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7098:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2064,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7098:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7098:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2070,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2057,
																	"src": "7120:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7112:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2068,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7112:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7112:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2072,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7097:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2053,
												"id": 2073,
												"nodeType": "Return",
												"src": "7090:37:11"
											}
										]
									},
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "6592:326:11",
										"text": " @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "6932:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6957:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "6935:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2044,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2043,
														"name": "UintToUintMap",
														"nameLocations": [
															"6935:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1957,
														"src": "6935:13:11"
													},
													"referencedDeclaration": 1957,
													"src": "6935:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6970:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "6962:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6962:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6934:42:11"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "7000:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7000:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "7009:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7009:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6999:18:11"
									},
									"scope": 2833,
									"src": "6923:211:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "7370:123:11",
										"statements": [
											{
												"assignments": [
													2089,
													2091
												],
												"declarations": [
													{
														"constant": false,
														"id": 2089,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7386:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2108,
														"src": "7381:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2088,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7381:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2091,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "7403:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2108,
														"src": "7395:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2090,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7395:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2100,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2093,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2079,
																"src": "7419:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 2094,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7423:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1956,
															"src": "7419:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2097,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2081,
																	"src": "7439:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7431:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2095,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7431:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7431:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2092,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1885,
															2109,
															2334,
															2583,
															2787
														],
														"referencedDeclaration": 1885,
														"src": "7412:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7412:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7380:64:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2101,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "7462:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 2104,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2091,
																	"src": "7479:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7471:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2102,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7471:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7471:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2106,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7461:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2087,
												"id": 2107,
												"nodeType": "Return",
												"src": "7454:32:11"
											}
										]
									},
									"documentation": {
										"id": 2076,
										"nodeType": "StructuredDocumentation",
										"src": "7140:131:11",
										"text": " @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "7285:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "7314:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "7292:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2078,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2077,
														"name": "UintToUintMap",
														"nameLocations": [
															"7292:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1957,
														"src": "7292:13:11"
													},
													"referencedDeclaration": 1957,
													"src": "7292:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "7327:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "7319:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7319:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7291:40:11"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "7355:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2083,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7355:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "7361:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7361:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7354:15:11"
									},
									"scope": 2833,
									"src": "7276:217:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "7730:62:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2123,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2113,
																		"src": "7759:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
																			"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																		}
																	},
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7763:6:11",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1956,
																	"src": "7759:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2127,
																			"name": "key",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "7779:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7771:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 2125,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "7771:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7771:12:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2122,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1918,
																	1953,
																	2133,
																	2160,
																	2364,
																	2397,
																	2613,
																	2646,
																	2808,
																	2832
																],
																"referencedDeclaration": 1918,
																"src": "7755:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7755:29:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7747:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7747:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7747:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2119,
												"id": 2131,
												"nodeType": "Return",
												"src": "7740:45:11"
											}
										]
									},
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "7499:141:11",
										"text": " @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "7654:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "7680:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "7658:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2112,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2111,
														"name": "UintToUintMap",
														"nameLocations": [
															"7658:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1957,
														"src": "7658:13:11"
													},
													"referencedDeclaration": 1957,
													"src": "7658:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "7693:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "7685:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7685:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7657:40:11"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "7721:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7721:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7720:9:11"
									},
									"scope": 2833,
									"src": "7645:147:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "8215:76:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2149,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "8244:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
																			"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																		}
																	},
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8248:6:11",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1956,
																	"src": "8244:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2153,
																			"name": "key",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2139,
																			"src": "8264:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8256:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 2151,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "8256:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8256:12:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2155,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2141,
																	"src": "8270:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2148,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1918,
																	1953,
																	2133,
																	2160,
																	2364,
																	2397,
																	2613,
																	2646,
																	2808,
																	2832
																],
																"referencedDeclaration": 1953,
																"src": "8240:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"
																}
															},
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8240:43:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8232:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8232:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8232:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2145,
												"id": 2158,
												"nodeType": "Return",
												"src": "8225:59:11"
											}
										]
									},
									"documentation": {
										"id": 2134,
										"nodeType": "StructuredDocumentation",
										"src": "7798:269:11",
										"text": " @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."
									},
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "8081:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "8116:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "8094:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 2136,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2135,
														"name": "UintToUintMap",
														"nameLocations": [
															"8094:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1957,
														"src": "8094:13:11"
													},
													"referencedDeclaration": 1957,
													"src": "8094:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$1957_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "8137:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "8129:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8129:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8164:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "8150:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2140,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8150:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8084:98:11"
									},
									"returnParameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "8206:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8206:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8205:9:11"
									},
									"scope": 2833,
									"src": "8072:219:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.UintToAddressMap",
									"id": 2164,
									"members": [
										{
											"constant": false,
											"id": 2163,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8376:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 2164,
											"src": "8356:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 2162,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2161,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"8356:19:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1727,
													"src": "8356:19:11"
												},
												"referencedDeclaration": 1727,
												"src": "8356:19:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintToAddressMap",
									"nameLocation": "8329:16:11",
									"nodeType": "StructDefinition",
									"scope": 2833,
									"src": "8322:67:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2196,
										"nodeType": "Block",
										"src": "8741:87:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2178,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "8762:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8766:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2163,
															"src": "8762:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2182,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "8782:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8774:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2180,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8774:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8774:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2190,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2172,
																					"src": "8812:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8804:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2188,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8804:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8804:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8796:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2186,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8796:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8796:23:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8788:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2184,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8788:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8788:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2177,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1755,
															1984,
															2197,
															2434,
															2674
														],
														"referencedDeclaration": 1755,
														"src": "8758:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8758:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2176,
												"id": 2195,
												"nodeType": "Return",
												"src": "8751:70:11"
											}
										]
									},
									"documentation": {
										"id": 2165,
										"nodeType": "StructuredDocumentation",
										"src": "8395:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "8625:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "8663:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "8638:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2167,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2166,
														"name": "UintToAddressMap",
														"nameLocations": [
															"8638:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2164,
														"src": "8638:16:11"
													},
													"referencedDeclaration": 2164,
													"src": "8638:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "8684:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "8676:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8676:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8705:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "8697:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8697:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8628:88:11"
									},
									"returnParameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "8735:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8735:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8734:6:11"
									},
									"scope": 2833,
									"src": "8616:212:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2217,
										"nodeType": "Block",
										"src": "9070:56:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2209,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2201,
																"src": "9094:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2210,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9098:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2163,
															"src": "9094:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2213,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "9114:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9106:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2211,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9106:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9106:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2208,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1779,
															2005,
															2218,
															2461,
															2692
														],
														"referencedDeclaration": 1779,
														"src": "9087:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9087:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2207,
												"id": 2216,
												"nodeType": "Return",
												"src": "9080:39:11"
											}
										]
									},
									"documentation": {
										"id": 2198,
										"nodeType": "StructuredDocumentation",
										"src": "8834:148:11",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8996:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9028:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "9003:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2200,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2199,
														"name": "UintToAddressMap",
														"nameLocations": [
															"9003:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2164,
														"src": "9003:16:11"
													},
													"referencedDeclaration": 2164,
													"src": "9003:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9041:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "9033:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9033:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9002:43:11"
									},
									"returnParameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "9064:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9064:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9063:6:11"
									},
									"scope": 2833,
									"src": "8987:139:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2238,
										"nodeType": "Block",
										"src": "9295:58:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2230,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2222,
																"src": "9321:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2231,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9325:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2163,
															"src": "9321:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2234,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2224,
																	"src": "9341:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9333:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2232,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9333:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9333:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2229,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1797,
															2026,
															2239,
															2488,
															2710
														],
														"referencedDeclaration": 1797,
														"src": "9312:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9312:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2228,
												"id": 2237,
												"nodeType": "Return",
												"src": "9305:41:11"
											}
										]
									},
									"documentation": {
										"id": 2219,
										"nodeType": "StructuredDocumentation",
										"src": "9132:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "9214:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9248:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "9223:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2220,
														"name": "UintToAddressMap",
														"nameLocations": [
															"9223:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2164,
														"src": "9223:16:11"
													},
													"referencedDeclaration": 2164,
													"src": "9223:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9261:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "9253:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9253:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9222:43:11"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "9289:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9289:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9288:6:11"
									},
									"scope": 2833,
									"src": "9205:148:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2253,
										"nodeType": "Block",
										"src": "9514:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2249,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "9538:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9542:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2163,
															"src": "9538:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2248,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1812,
															2041,
															2254,
															2503,
															2725
														],
														"referencedDeclaration": 1812,
														"src": "9531:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9531:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2247,
												"id": 2252,
												"nodeType": "Return",
												"src": "9524:25:11"
											}
										]
									},
									"documentation": {
										"id": 2240,
										"nodeType": "StructuredDocumentation",
										"src": "9359:72:11",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9445:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9477:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "9452:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2241,
														"name": "UintToAddressMap",
														"nameLocations": [
															"9452:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2164,
														"src": "9452:16:11"
													},
													"referencedDeclaration": 2164,
													"src": "9452:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9451:30:11"
									},
									"returnParameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "9505:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9505:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9504:9:11"
									},
									"scope": 2833,
									"src": "9436:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2293,
										"nodeType": "Block",
										"src": "9991:134:11",
										"statements": [
											{
												"assignments": [
													2268,
													2270
												],
												"declarations": [
													{
														"constant": false,
														"id": 2268,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "10010:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 2293,
														"src": "10002:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2267,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10002:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2270,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "10023:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2293,
														"src": "10015:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2269,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10015:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2276,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2272,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2258,
																"src": "10035:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2273,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10039:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2163,
															"src": "10035:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2274,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2260,
															"src": "10047:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2271,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1841,
															2075,
															2294,
															2543,
															2756
														],
														"referencedDeclaration": 1841,
														"src": "10032:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10032:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10001:52:11"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 2279,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2268,
																	"src": "10079:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10071:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10071:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10071:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2287,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2270,
																					"src": "10109:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10101:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2285,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10101:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10101:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10093:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2283,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "10093:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10093:23:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10085:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2281,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10085:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10085:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 2291,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10070:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"functionReturnParameters": 2266,
												"id": 2292,
												"nodeType": "Return",
												"src": "10063:55:11"
											}
										]
									},
									"documentation": {
										"id": 2255,
										"nodeType": "StructuredDocumentation",
										"src": "9562:326:11",
										"text": " @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9902:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9930:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "9905:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2257,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2256,
														"name": "UintToAddressMap",
														"nameLocations": [
															"9905:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2164,
														"src": "9905:16:11"
													},
													"referencedDeclaration": 2164,
													"src": "9905:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9943:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "9935:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9935:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9904:45:11"
									},
									"returnParameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "9973:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9973:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "9982:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9972:18:11"
									},
									"scope": 2833,
									"src": "9893:232:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2333,
										"nodeType": "Block",
										"src": "10402:141:11",
										"statements": [
											{
												"assignments": [
													2308,
													2310
												],
												"declarations": [
													{
														"constant": false,
														"id": 2308,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10418:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2333,
														"src": "10413:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2307,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10413:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2310,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "10435:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2333,
														"src": "10427:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2309,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10427:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2319,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2312,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "10451:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10455:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2163,
															"src": "10451:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2316,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "10471:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10463:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2314,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10463:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10463:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2311,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1885,
															2109,
															2334,
															2583,
															2787
														],
														"referencedDeclaration": 1885,
														"src": "10444:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10444:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10412:64:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2320,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2308,
															"src": "10494:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2327,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2310,
																					"src": "10527:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10519:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2325,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10519:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10519:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10511:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2323,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "10511:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10511:23:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10503:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2321,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10503:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 2331,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10493:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_address_$",
														"typeString": "tuple(bool,address)"
													}
												},
												"functionReturnParameters": 2306,
												"id": 2332,
												"nodeType": "Return",
												"src": "10486:50:11"
											}
										]
									},
									"documentation": {
										"id": 2295,
										"nodeType": "StructuredDocumentation",
										"src": "10131:169:11",
										"text": " @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map.\n _Available since v3.4._"
									},
									"id": 2334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "10314:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "10346:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "10321:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2296,
														"name": "UintToAddressMap",
														"nameLocations": [
															"10321:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2164,
														"src": "10321:16:11"
													},
													"referencedDeclaration": 2164,
													"src": "10321:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "10359:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "10351:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10351:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10320:43:11"
									},
									"returnParameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "10387:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10387:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "10393:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10393:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10386:15:11"
									},
									"scope": 2833,
									"src": "10305:238:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2363,
										"nodeType": "Block",
										"src": "10783:80:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2352,
																						"name": "map",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2338,
																						"src": "10828:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
																							"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																						}
																					},
																					"id": 2353,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10832:6:11",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2163,
																					"src": "10828:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 2356,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2340,
																							"src": "10848:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2355,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "10840:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes32_$",
																							"typeString": "type(bytes32)"
																						},
																						"typeName": {
																							"id": 2354,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "10840:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2357,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10840:12:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2351,
																				"name": "get",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					1918,
																					1953,
																					2133,
																					2160,
																					2364,
																					2397,
																					2613,
																					2646,
																					2808,
																					2832
																				],
																				"referencedDeclaration": 1918,
																				"src": "10824:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																				}
																			},
																			"id": 2358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10824:29:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10816:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2349,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10816:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10816:38:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10808:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2347,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "10808:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10808:47:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10800:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2345,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10800:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10800:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2344,
												"id": 2362,
												"nodeType": "Return",
												"src": "10793:63:11"
											}
										]
									},
									"documentation": {
										"id": 2335,
										"nodeType": "StructuredDocumentation",
										"src": "10549:141:11",
										"text": " @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "10704:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "10733:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "10708:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2337,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2336,
														"name": "UintToAddressMap",
														"nameLocations": [
															"10708:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2164,
														"src": "10708:16:11"
													},
													"referencedDeclaration": 2164,
													"src": "10708:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "10746:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "10738:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10738:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10707:43:11"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "10774:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10774:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10773:9:11"
									},
									"scope": 2833,
									"src": "10695:168:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2396,
										"nodeType": "Block",
										"src": "11289:94:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2384,
																						"name": "map",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2368,
																						"src": "11334:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
																							"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																						}
																					},
																					"id": 2385,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11338:6:11",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2163,
																					"src": "11334:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 2388,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2370,
																							"src": "11354:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2387,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11346:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes32_$",
																							"typeString": "type(bytes32)"
																						},
																						"typeName": {
																							"id": 2386,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "11346:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2389,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11346:12:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 2390,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2372,
																					"src": "11360:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2383,
																				"name": "get",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					1918,
																					1953,
																					2133,
																					2160,
																					2364,
																					2397,
																					2613,
																					2646,
																					2808,
																					2832
																				],
																				"referencedDeclaration": 1953,
																				"src": "11330:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"
																				}
																			},
																			"id": 2391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11330:43:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11322:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2381,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11322:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11322:52:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11314:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2379,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11314:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11314:61:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11306:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2377,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11306:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11306:70:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2376,
												"id": 2395,
												"nodeType": "Return",
												"src": "11299:77:11"
											}
										]
									},
									"documentation": {
										"id": 2365,
										"nodeType": "StructuredDocumentation",
										"src": "10869:269:11",
										"text": " @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."
									},
									"id": 2397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "11152:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "11190:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "11165:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 2367,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2366,
														"name": "UintToAddressMap",
														"nameLocations": [
															"11165:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2164,
														"src": "11165:16:11"
													},
													"referencedDeclaration": 2164,
													"src": "11165:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$2164_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "11211:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "11203:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11203:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11238:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "11224:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11224:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11155:101:11"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "11280:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11280:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11279:9:11"
									},
									"scope": 2833,
									"src": "11143:240:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.AddressToUintMap",
									"id": 2401,
									"members": [
										{
											"constant": false,
											"id": 2400,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "11468:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 2401,
											"src": "11448:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 2399,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2398,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"11448:19:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1727,
													"src": "11448:19:11"
												},
												"referencedDeclaration": 1727,
												"src": "11448:19:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressToUintMap",
									"nameLocation": "11421:16:11",
									"nodeType": "StructDefinition",
									"scope": 2833,
									"src": "11414:67:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "11833:87:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2415,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2405,
																"src": "11854:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11858:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2400,
															"src": "11854:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2423,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2407,
																					"src": "11890:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11882:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2421,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "11882:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11882:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11874:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2419,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11874:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11874:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11866:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2417,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11866:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11866:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2429,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2409,
																	"src": "11906:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11898:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2427,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11898:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11898:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2414,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1755,
															1984,
															2197,
															2434,
															2674
														],
														"referencedDeclaration": 1755,
														"src": "11850:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11850:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2413,
												"id": 2432,
												"nodeType": "Return",
												"src": "11843:70:11"
											}
										]
									},
									"documentation": {
										"id": 2402,
										"nodeType": "StructuredDocumentation",
										"src": "11487:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "11717:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "11755:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "11730:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2403,
														"name": "AddressToUintMap",
														"nameLocations": [
															"11730:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2401,
														"src": "11730:16:11"
													},
													"referencedDeclaration": 2401,
													"src": "11730:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "11776:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "11768:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11768:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11797:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "11789:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11789:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11720:88:11"
									},
									"returnParameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "11827:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11827:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11826:6:11"
									},
									"scope": 2833,
									"src": "11708:212:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "12162:74:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2446,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "12186:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12190:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2400,
															"src": "12186:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2454,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2440,
																					"src": "12222:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12214:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2452,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "12214:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12214:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12206:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2450,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12206:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12206:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12198:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2448,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12198:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12198:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2445,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1779,
															2005,
															2218,
															2461,
															2692
														],
														"referencedDeclaration": 1779,
														"src": "12179:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12179:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2444,
												"id": 2459,
												"nodeType": "Return",
												"src": "12172:57:11"
											}
										]
									},
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "11926:148:11",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "12088:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12120:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "12095:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2436,
														"name": "AddressToUintMap",
														"nameLocations": [
															"12095:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2401,
														"src": "12095:16:11"
													},
													"referencedDeclaration": 2401,
													"src": "12095:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "12133:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "12125:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12125:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12094:43:11"
									},
									"returnParameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "12156:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2442,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12156:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12155:6:11"
									},
									"scope": 2833,
									"src": "12079:157:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2487,
										"nodeType": "Block",
										"src": "12405:76:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2473,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2465,
																"src": "12431:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12435:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2400,
															"src": "12431:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2481,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2467,
																					"src": "12467:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12459:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2479,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "12459:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12459:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12451:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2477,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12451:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12451:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12443:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2475,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12443:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12443:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2472,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1797,
															2026,
															2239,
															2488,
															2710
														],
														"referencedDeclaration": 1797,
														"src": "12422:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12422:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2471,
												"id": 2486,
												"nodeType": "Return",
												"src": "12415:59:11"
											}
										]
									},
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "12242:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "12324:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12358:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "12333:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2464,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2463,
														"name": "AddressToUintMap",
														"nameLocations": [
															"12333:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2401,
														"src": "12333:16:11"
													},
													"referencedDeclaration": 2401,
													"src": "12333:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "12371:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "12363:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12363:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12332:43:11"
									},
									"returnParameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "12399:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12399:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12398:6:11"
									},
									"scope": 2833,
									"src": "12315:166:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2502,
										"nodeType": "Block",
										"src": "12642:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2498,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "12666:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12670:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2400,
															"src": "12666:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2497,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1812,
															2041,
															2254,
															2503,
															2725
														],
														"referencedDeclaration": 1812,
														"src": "12659:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12659:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2496,
												"id": 2501,
												"nodeType": "Return",
												"src": "12652:25:11"
											}
										]
									},
									"documentation": {
										"id": 2489,
										"nodeType": "StructuredDocumentation",
										"src": "12487:72:11",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "12573:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12605:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "12580:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2491,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2490,
														"name": "AddressToUintMap",
														"nameLocations": [
															"12580:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2401,
														"src": "12580:16:11"
													},
													"referencedDeclaration": 2401,
													"src": "12580:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12579:30:11"
									},
									"returnParameters": {
										"id": 2496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "12633:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12633:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12632:9:11"
									},
									"scope": 2833,
									"src": "12564:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2542,
										"nodeType": "Block",
										"src": "13119:134:11",
										"statements": [
											{
												"assignments": [
													2517,
													2519
												],
												"declarations": [
													{
														"constant": false,
														"id": 2517,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "13138:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 2542,
														"src": "13130:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2516,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13130:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2519,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "13151:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2542,
														"src": "13143:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2518,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13143:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2525,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2521,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "13163:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2522,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13167:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2400,
															"src": "13163:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2523,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2509,
															"src": "13175:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2520,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1841,
															2075,
															2294,
															2543,
															2756
														],
														"referencedDeclaration": 1841,
														"src": "13160:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13160:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13129:52:11"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2532,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "13223:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13215:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2530,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13215:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13215:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13207:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2528,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "13207:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13207:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13199:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2526,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13199:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13199:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2538,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "13239:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13231:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2536,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13231:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13231:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2540,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13198:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 2515,
												"id": 2541,
												"nodeType": "Return",
												"src": "13191:55:11"
											}
										]
									},
									"documentation": {
										"id": 2504,
										"nodeType": "StructuredDocumentation",
										"src": "12690:326:11",
										"text": " @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "13030:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13058:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "13033:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2506,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2505,
														"name": "AddressToUintMap",
														"nameLocations": [
															"13033:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2401,
														"src": "13033:16:11"
													},
													"referencedDeclaration": 2401,
													"src": "13033:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13071:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "13063:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13063:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13032:45:11"
									},
									"returnParameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "13101:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13101:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "13110:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13110:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13100:18:11"
									},
									"scope": 2833,
									"src": "13021:232:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2582,
										"nodeType": "Block",
										"src": "13492:141:11",
										"statements": [
											{
												"assignments": [
													2557,
													2559
												],
												"declarations": [
													{
														"constant": false,
														"id": 2557,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13508:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "13503:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2556,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13503:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2559,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "13525:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "13517:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2558,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13517:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2574,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2561,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2547,
																"src": "13541:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 2562,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13545:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2400,
															"src": "13541:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2569,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2549,
																					"src": "13577:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13569:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2567,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "13569:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13569:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13561:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2565,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "13561:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13561:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13553:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2563,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "13553:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13553:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2560,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1885,
															2109,
															2334,
															2583,
															2787
														],
														"referencedDeclaration": 1885,
														"src": "13534:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13534:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13502:82:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2575,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2557,
															"src": "13602:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 2578,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2559,
																	"src": "13619:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13611:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2576,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13611:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13611:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2580,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13601:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2555,
												"id": 2581,
												"nodeType": "Return",
												"src": "13594:32:11"
											}
										]
									},
									"documentation": {
										"id": 2544,
										"nodeType": "StructuredDocumentation",
										"src": "13259:131:11",
										"text": " @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "13404:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13436:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "13411:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2546,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2545,
														"name": "AddressToUintMap",
														"nameLocations": [
															"13411:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2401,
														"src": "13411:16:11"
													},
													"referencedDeclaration": 2401,
													"src": "13411:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "13449:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "13441:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13441:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13410:43:11"
									},
									"returnParameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "13477:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2551,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13477:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "13483:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13483:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13476:15:11"
									},
									"scope": 2833,
									"src": "13395:238:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2612,
										"nodeType": "Block",
										"src": "13873:80:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2597,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2587,
																		"src": "13902:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																		}
																	},
																	"id": 2598,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13906:6:11",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2400,
																	"src": "13902:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2605,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2589,
																							"src": "13938:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2604,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "13930:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 2603,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "13930:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13930:12:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 2602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13922:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2601,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13922:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13922:21:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13914:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 2599,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "13914:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13914:30:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2596,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1918,
																	1953,
																	2133,
																	2160,
																	2364,
																	2397,
																	2613,
																	2646,
																	2808,
																	2832
																],
																"referencedDeclaration": 1918,
																"src": "13898:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13898:47:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13890:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2594,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13890:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13890:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2593,
												"id": 2611,
												"nodeType": "Return",
												"src": "13883:63:11"
											}
										]
									},
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "13639:141:11",
										"text": " @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "13794:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13823:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "13798:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2586,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2585,
														"name": "AddressToUintMap",
														"nameLocations": [
															"13798:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2401,
														"src": "13798:16:11"
													},
													"referencedDeclaration": 2401,
													"src": "13798:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "13836:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "13828:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13828:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13797:43:11"
									},
									"returnParameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "13864:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13864:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13863:9:11"
									},
									"scope": 2833,
									"src": "13785:168:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2645,
										"nodeType": "Block",
										"src": "14379:94:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2629,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2617,
																		"src": "14408:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																		}
																	},
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14412:6:11",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2400,
																	"src": "14408:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2637,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2619,
																							"src": "14444:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2636,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14436:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 2635,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "14436:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2638,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14436:12:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 2634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14428:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2633,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "14428:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14428:21:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14420:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 2631,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "14420:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14420:30:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2641,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2621,
																	"src": "14452:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2628,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1918,
																	1953,
																	2133,
																	2160,
																	2364,
																	2397,
																	2613,
																	2646,
																	2808,
																	2832
																],
																"referencedDeclaration": 1953,
																"src": "14404:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"
																}
															},
															"id": 2642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14404:61:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14396:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14396:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14396:70:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2625,
												"id": 2644,
												"nodeType": "Return",
												"src": "14389:77:11"
											}
										]
									},
									"documentation": {
										"id": 2614,
										"nodeType": "StructuredDocumentation",
										"src": "13959:269:11",
										"text": " @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."
									},
									"id": 2646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "14242:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "14280:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "14255:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 2616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2615,
														"name": "AddressToUintMap",
														"nameLocations": [
															"14255:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2401,
														"src": "14255:16:11"
													},
													"referencedDeclaration": 2401,
													"src": "14255:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$2401_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "14301:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "14293:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14293:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14328:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "14314:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2620,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14314:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14245:101:11"
									},
									"returnParameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "14370:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14370:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14369:9:11"
									},
									"scope": 2833,
									"src": "14233:240:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.Bytes32ToUintMap",
									"id": 2650,
									"members": [
										{
											"constant": false,
											"id": 2649,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "14558:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 2650,
											"src": "14538:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 2648,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2647,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"14538:19:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1727,
													"src": "14538:19:11"
												},
												"referencedDeclaration": 1727,
												"src": "14538:19:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32ToUintMap",
									"nameLocation": "14511:16:11",
									"nodeType": "StructDefinition",
									"scope": 2833,
									"src": "14504:67:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2673,
										"nodeType": "Block",
										"src": "14923:60:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2664,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2654,
																"src": "14944:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2665,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14948:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2649,
															"src": "14944:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2666,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2656,
															"src": "14956:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2658,
																	"src": "14969:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14961:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2667,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "14961:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14961:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2663,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1755,
															1984,
															2197,
															2434,
															2674
														],
														"referencedDeclaration": 1755,
														"src": "14940:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14940:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2662,
												"id": 2672,
												"nodeType": "Return",
												"src": "14933:43:11"
											}
										]
									},
									"documentation": {
										"id": 2651,
										"nodeType": "StructuredDocumentation",
										"src": "14577:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "14807:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "14845:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "14820:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2653,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2652,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"14820:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2650,
														"src": "14820:16:11"
													},
													"referencedDeclaration": 2650,
													"src": "14820:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "14866:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "14858:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2655,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14858:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14887:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "14879:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14879:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14810:88:11"
									},
									"returnParameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "14917:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14917:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14916:6:11"
									},
									"scope": 2833,
									"src": "14798:185:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2691,
										"nodeType": "Block",
										"src": "15225:47:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2686,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2678,
																"src": "15249:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2687,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15253:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2649,
															"src": "15249:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2688,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2680,
															"src": "15261:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2685,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1779,
															2005,
															2218,
															2461,
															2692
														],
														"referencedDeclaration": 1779,
														"src": "15242:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15242:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2684,
												"id": 2690,
												"nodeType": "Return",
												"src": "15235:30:11"
											}
										]
									},
									"documentation": {
										"id": 2675,
										"nodeType": "StructuredDocumentation",
										"src": "14989:148:11",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "15151:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2678,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "15183:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "15158:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2676,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"15158:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2650,
														"src": "15158:16:11"
													},
													"referencedDeclaration": 2650,
													"src": "15158:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "15196:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "15188:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2679,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15188:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15157:43:11"
									},
									"returnParameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "15219:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2682,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15219:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15218:6:11"
									},
									"scope": 2833,
									"src": "15142:130:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2709,
										"nodeType": "Block",
										"src": "15441:49:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2704,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2696,
																"src": "15467:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2705,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15471:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2649,
															"src": "15467:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2706,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2698,
															"src": "15479:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2703,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1797,
															2026,
															2239,
															2488,
															2710
														],
														"referencedDeclaration": 1797,
														"src": "15458:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15458:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2702,
												"id": 2708,
												"nodeType": "Return",
												"src": "15451:32:11"
											}
										]
									},
									"documentation": {
										"id": 2693,
										"nodeType": "StructuredDocumentation",
										"src": "15278:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "15360:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "15394:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "15369:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2695,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2694,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"15369:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2650,
														"src": "15369:16:11"
													},
													"referencedDeclaration": 2650,
													"src": "15369:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "15407:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "15399:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2697,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15399:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15368:43:11"
									},
									"returnParameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "15435:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15435:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15434:6:11"
									},
									"scope": 2833,
									"src": "15351:139:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2724,
										"nodeType": "Block",
										"src": "15651:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2720,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2714,
																"src": "15675:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2721,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15679:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2649,
															"src": "15675:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 2719,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1812,
															2041,
															2254,
															2503,
															2725
														],
														"referencedDeclaration": 1812,
														"src": "15668:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 2722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15668:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2718,
												"id": 2723,
												"nodeType": "Return",
												"src": "15661:25:11"
											}
										]
									},
									"documentation": {
										"id": 2711,
										"nodeType": "StructuredDocumentation",
										"src": "15496:72:11",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 2725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "15582:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2714,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "15614:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "15589:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2713,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2712,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"15589:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2650,
														"src": "15589:16:11"
													},
													"referencedDeclaration": 2650,
													"src": "15589:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15588:30:11"
									},
									"returnParameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "15642:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15642:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15641:9:11"
									},
									"scope": 2833,
									"src": "15573:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2755,
										"nodeType": "Block",
										"src": "16128:107:11",
										"statements": [
											{
												"assignments": [
													2739,
													2741
												],
												"declarations": [
													{
														"constant": false,
														"id": 2739,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "16147:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 2755,
														"src": "16139:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2738,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "16139:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2741,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "16160:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2755,
														"src": "16152:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2740,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "16152:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2747,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2743,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2729,
																"src": "16172:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2744,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16176:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2649,
															"src": "16172:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2745,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2731,
															"src": "16184:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2742,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1841,
															2075,
															2294,
															2543,
															2756
														],
														"referencedDeclaration": 1841,
														"src": "16169:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 2746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16169:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16138:52:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2748,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2739,
															"src": "16208:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2751,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2741,
																	"src": "16221:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2750,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16213:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2749,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16213:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16213:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2753,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "16207:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
														"typeString": "tuple(bytes32,uint256)"
													}
												},
												"functionReturnParameters": 2737,
												"id": 2754,
												"nodeType": "Return",
												"src": "16200:28:11"
											}
										]
									},
									"documentation": {
										"id": 2726,
										"nodeType": "StructuredDocumentation",
										"src": "15699:326:11",
										"text": " @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "16039:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16067:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "16042:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2728,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2727,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"16042:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2650,
														"src": "16042:16:11"
													},
													"referencedDeclaration": 2650,
													"src": "16042:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "16080:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "16072:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16072:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16041:45:11"
									},
									"returnParameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "16110:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2733,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16110:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "16119:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16119:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16109:18:11"
									},
									"scope": 2833,
									"src": "16030:205:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2786,
										"nodeType": "Block",
										"src": "16474:114:11",
										"statements": [
											{
												"assignments": [
													2770,
													2772
												],
												"declarations": [
													{
														"constant": false,
														"id": 2770,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16490:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2786,
														"src": "16485:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2769,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16485:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2772,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "16507:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2786,
														"src": "16499:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2771,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "16499:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2778,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2774,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2760,
																"src": "16523:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 2775,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16527:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2649,
															"src": "16523:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 2776,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2762,
															"src": "16535:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2773,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1885,
															2109,
															2334,
															2583,
															2787
														],
														"referencedDeclaration": 1885,
														"src": "16516:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16516:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16484:55:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2779,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2770,
															"src": "16557:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 2782,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2772,
																	"src": "16574:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16566:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2780,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16566:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16566:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2784,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "16556:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 2768,
												"id": 2785,
												"nodeType": "Return",
												"src": "16549:32:11"
											}
										]
									},
									"documentation": {
										"id": 2757,
										"nodeType": "StructuredDocumentation",
										"src": "16241:131:11",
										"text": " @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "16386:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16418:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "16393:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2759,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2758,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"16393:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2650,
														"src": "16393:16:11"
													},
													"referencedDeclaration": 2650,
													"src": "16393:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "16431:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "16423:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2761,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16423:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16392:43:11"
									},
									"returnParameters": {
										"id": 2768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "16459:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16459:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "16465:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16465:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16458:15:11"
									},
									"scope": 2833,
									"src": "16377:211:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2807,
										"nodeType": "Block",
										"src": "16828:53:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2801,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2791,
																		"src": "16857:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																		}
																	},
																	"id": 2802,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16861:6:11",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2649,
																	"src": "16857:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"id": 2803,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2793,
																	"src": "16869:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2800,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1918,
																	1953,
																	2133,
																	2160,
																	2364,
																	2397,
																	2613,
																	2646,
																	2808,
																	2832
																],
																"referencedDeclaration": 1918,
																"src": "16853:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16853:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16845:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2798,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16845:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16845:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2797,
												"id": 2806,
												"nodeType": "Return",
												"src": "16838:36:11"
											}
										]
									},
									"documentation": {
										"id": 2788,
										"nodeType": "StructuredDocumentation",
										"src": "16594:141:11",
										"text": " @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 2808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "16749:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16778:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2808,
												"src": "16753:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2790,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2789,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"16753:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2650,
														"src": "16753:16:11"
													},
													"referencedDeclaration": 2650,
													"src": "16753:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "16791:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2808,
												"src": "16783:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2792,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16783:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16752:43:11"
									},
									"returnParameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2808,
												"src": "16819:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16819:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16818:9:11"
									},
									"scope": 2833,
									"src": "16740:141:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2831,
										"nodeType": "Block",
										"src": "17307:67:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2824,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2812,
																		"src": "17336:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																		}
																	},
																	"id": 2825,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17340:6:11",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2649,
																	"src": "17336:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"id": 2826,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2814,
																	"src": "17348:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2827,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2816,
																	"src": "17353:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$1727_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2823,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1918,
																	1953,
																	2133,
																	2160,
																	2364,
																	2397,
																	2613,
																	2646,
																	2808,
																	2832
																],
																"referencedDeclaration": 1953,
																"src": "17332:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$1727_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"
																}
															},
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17332:34:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17324:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2821,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17324:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17324:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2820,
												"id": 2830,
												"nodeType": "Return",
												"src": "17317:50:11"
											}
										]
									},
									"documentation": {
										"id": 2809,
										"nodeType": "StructuredDocumentation",
										"src": "16887:269:11",
										"text": " @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."
									},
									"id": 2832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "17170:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "17208:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "17183:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 2811,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2810,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"17183:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2650,
														"src": "17183:16:11"
													},
													"referencedDeclaration": 2650,
													"src": "17183:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$2650_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2814,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "17229:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "17221:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2813,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17221:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2816,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17256:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "17242:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2815,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17242:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17173:101:11"
									},
									"returnParameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "17298:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17298:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17297:9:11"
									},
									"scope": 2833,
									"src": "17161:213:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2834,
							"src": "1525:15851:11",
							"usedErrors": []
						}
					],
					"src": "115:17262:11"
				},
				"id": 11
			},
			"source/BinanceBABT/contracts/utils/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/utils/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							3432
						]
					},
					"id": 3433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2835,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2836,
								"nodeType": "StructuredDocumentation",
								"src": "140:1087:12",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 3432,
							"linearizedBaseContracts": [
								3432
							],
							"name": "EnumerableSet",
							"nameLocation": "1236:13:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 2844,
									"members": [
										{
											"constant": false,
											"id": 2839,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1760:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2844,
											"src": "1750:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 2837,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2838,
												"nodeType": "ArrayTypeName",
												"src": "1750:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2843,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "1928:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 2844,
											"src": "1900:36:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 2842,
												"keyType": {
													"id": 2840,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1900:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 2841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1919:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1703:3:12",
									"nodeType": "StructDefinition",
									"scope": 3432,
									"src": "1696:247:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2885,
										"nodeType": "Block",
										"src": "2182:335:12",
										"statements": [
											{
												"condition": {
													"id": 2859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2196:22:12",
													"subExpression": {
														"arguments": [
															{
																"id": 2856,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2848,
																"src": "2207:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 2857,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2850,
																"src": "2212:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2855,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2989,
															"src": "2197:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2844_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 2858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2197:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2883,
													"nodeType": "Block",
													"src": "2474:37:12",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2854,
															"id": 2882,
															"nodeType": "Return",
															"src": "2488:12:12"
														}
													]
												},
												"id": 2884,
												"nodeType": "IfStatement",
												"src": "2192:319:12",
												"trueBody": {
													"id": 2880,
													"nodeType": "Block",
													"src": "2220:248:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2865,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2850,
																		"src": "2251:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2860,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2848,
																			"src": "2234:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2863,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2238:7:12",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2839,
																		"src": "2234:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2246:4:12",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2234:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 2866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2234:23:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2867,
															"nodeType": "ExpressionStatement",
															"src": "2234:23:12"
														},
														{
															"expression": {
																"id": 2876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 2868,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2848,
																			"src": "2392:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2871,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2396:8:12",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2843,
																		"src": "2392:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 2872,
																	"indexExpression": {
																		"id": 2870,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2850,
																		"src": "2405:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2392:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 2873,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2848,
																			"src": "2414:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2874,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2418:7:12",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2839,
																		"src": "2414:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2426:6:12",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2414:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2392:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2877,
															"nodeType": "ExpressionStatement",
															"src": "2392:40:12"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2453:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2854,
															"id": 2879,
															"nodeType": "Return",
															"src": "2446:11:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2845,
										"nodeType": "StructuredDocumentation",
										"src": "1949:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2122:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2139:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "2127:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2847,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2846,
														"name": "Set",
														"nameLocations": [
															"2127:3:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2844,
														"src": "2127:3:12"
													},
													"referencedDeclaration": 2844,
													"src": "2127:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2152:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "2144:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2849,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:32:12"
									},
									"returnParameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "2176:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2852,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2176:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2175:6:12"
									},
									"scope": 3432,
									"src": "2113:404:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2969,
										"nodeType": "Block",
										"src": "2757:1316:12",
										"statements": [
											{
												"assignments": [
													2898
												],
												"declarations": [
													{
														"constant": false,
														"id": 2898,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2875:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2969,
														"src": "2867:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2897,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2867:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2903,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 2899,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2890,
															"src": "2888:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2900,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2892:8:12",
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2843,
														"src": "2888:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 2902,
													"indexExpression": {
														"id": 2901,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2892,
														"src": "2901:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2888:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2867:40:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2904,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2898,
														"src": "2922:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2936:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2922:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2967,
													"nodeType": "Block",
													"src": "4030:37:12",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4051:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2896,
															"id": 2966,
															"nodeType": "Return",
															"src": "4044:12:12"
														}
													]
												},
												"id": 2968,
												"nodeType": "IfStatement",
												"src": "2918:1149:12",
												"trueBody": {
													"id": 2964,
													"nodeType": "Block",
													"src": "2939:1085:12",
													"statements": [
														{
															"assignments": [
																2908
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2908,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3299:13:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2964,
																	"src": "3291:21:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2907,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3291:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2912,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2909,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "3315:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3328:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3315:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3291:38:12"
														},
														{
															"assignments": [
																2914
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2914,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3351:9:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2964,
																	"src": "3343:17:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2913,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3343:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2920,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 2915,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2890,
																			"src": "3363:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2916,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3367:7:12",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2839,
																		"src": "3363:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3375:6:12",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3363:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3384:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3363:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3343:42:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2921,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2914,
																	"src": "3404:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2922,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2908,
																	"src": "3417:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3404:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2948,
															"nodeType": "IfStatement",
															"src": "3400:398:12",
															"trueBody": {
																"id": 2947,
																"nodeType": "Block",
																"src": "3432:366:12",
																"statements": [
																	{
																		"assignments": [
																			2925
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2925,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3458:9:12",
																				"nodeType": "VariableDeclaration",
																				"scope": 2947,
																				"src": "3450:17:12",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 2924,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3450:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2930,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 2926,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2890,
																					"src": "3470:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 2927,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3474:7:12",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2839,
																				"src": "3470:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 2929,
																			"indexExpression": {
																				"id": 2928,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2914,
																				"src": "3482:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3470:22:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3450:42:12"
																	},
																	{
																		"expression": {
																			"id": 2937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 2931,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2890,
																						"src": "3592:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 2934,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3596:7:12",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2839,
																					"src": "3592:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 2935,
																				"indexExpression": {
																					"id": 2933,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2908,
																					"src": "3604:13:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3592:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2936,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2925,
																				"src": "3621:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3592:38:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 2938,
																		"nodeType": "ExpressionStatement",
																		"src": "3592:38:12"
																	},
																	{
																		"expression": {
																			"id": 2945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 2939,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2890,
																						"src": "3704:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 2942,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3708:8:12",
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2843,
																					"src": "3704:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 2943,
																				"indexExpression": {
																					"id": 2941,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2925,
																					"src": "3717:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3704:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2944,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2898,
																				"src": "3730:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3704:36:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2946,
																		"nodeType": "ExpressionStatement",
																		"src": "3704:36:12"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 2949,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2890,
																			"src": "3876:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2952,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3880:7:12",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2839,
																		"src": "3876:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3888:3:12",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3876:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 2954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3876:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2955,
															"nodeType": "ExpressionStatement",
															"src": "3876:17:12"
														},
														{
															"expression": {
																"id": 2960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3961:26:12",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 2956,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2890,
																			"src": "3968:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2957,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3972:8:12",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2843,
																		"src": "3968:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 2959,
																	"indexExpression": {
																		"id": 2958,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2892,
																		"src": "3981:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3968:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2961,
															"nodeType": "ExpressionStatement",
															"src": "3961:26:12"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4009:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2896,
															"id": 2963,
															"nodeType": "Return",
															"src": "4002:11:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2887,
										"nodeType": "StructuredDocumentation",
										"src": "2523:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2694:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2714:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "2702:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2889,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2888,
														"name": "Set",
														"nameLocations": [
															"2702:3:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2844,
														"src": "2702:3:12"
													},
													"referencedDeclaration": 2844,
													"src": "2702:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2727:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "2719:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2891,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:32:12"
									},
									"returnParameters": {
										"id": 2896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "2751:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2751:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2750:6:12"
									},
									"scope": 3432,
									"src": "2685:1388:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2988,
										"nodeType": "Block",
										"src": "4233:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 2981,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2974,
																"src": "4250:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 2982,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4254:8:12",
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2843,
															"src": "4250:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 2984,
														"indexExpression": {
															"id": 2983,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2976,
															"src": "4263:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4250:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4273:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4250:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2980,
												"id": 2987,
												"nodeType": "Return",
												"src": "4243:31:12"
											}
										]
									},
									"documentation": {
										"id": 2971,
										"nodeType": "StructuredDocumentation",
										"src": "4079:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4163:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4185:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2989,
												"src": "4173:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2973,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2972,
														"name": "Set",
														"nameLocations": [
															"4173:3:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2844,
														"src": "4173:3:12"
													},
													"referencedDeclaration": 2844,
													"src": "4173:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2989,
												"src": "4190:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2975,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4172:32:12"
									},
									"returnParameters": {
										"id": 2980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2989,
												"src": "4227:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2978,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4227:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:6:12"
									},
									"scope": 3432,
									"src": "4154:127:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3002,
										"nodeType": "Block",
										"src": "4427:42:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 2998,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2993,
															"src": "4444:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2999,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4448:7:12",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2839,
														"src": "4444:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 3000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4456:6:12",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4444:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2997,
												"id": 3001,
												"nodeType": "Return",
												"src": "4437:25:12"
											}
										]
									},
									"documentation": {
										"id": 2990,
										"nodeType": "StructuredDocumentation",
										"src": "4287:70:12",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 3003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4371:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4391:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3003,
												"src": "4379:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2992,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2991,
														"name": "Set",
														"nameLocations": [
															"4379:3:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2844,
														"src": "4379:3:12"
													},
													"referencedDeclaration": 2844,
													"src": "4379:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4378:17:12"
									},
									"returnParameters": {
										"id": 2997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3003,
												"src": "4418:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:9:12"
									},
									"scope": 3432,
									"src": "4362:107:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3019,
										"nodeType": "Block",
										"src": "4887:42:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 3014,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3007,
															"src": "4904:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 3015,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4908:7:12",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2839,
														"src": "4904:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 3017,
													"indexExpression": {
														"id": 3016,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3009,
														"src": "4916:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4904:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3013,
												"id": 3018,
												"nodeType": "Return",
												"src": "4897:25:12"
											}
										]
									},
									"documentation": {
										"id": 3004,
										"nodeType": "StructuredDocumentation",
										"src": "4475:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4820:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3007,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4836:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "4824:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 3006,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3005,
														"name": "Set",
														"nameLocations": [
															"4824:3:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2844,
														"src": "4824:3:12"
													},
													"referencedDeclaration": 2844,
													"src": "4824:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3009,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4849:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "4841:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:32:12"
									},
									"returnParameters": {
										"id": 3013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "4878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3011,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:9:12"
									},
									"scope": 3432,
									"src": "4811:118:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3033,
										"nodeType": "Block",
										"src": "5543:35:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3030,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3024,
														"src": "5560:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 3031,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5564:7:12",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2839,
													"src": "5560:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 3029,
												"id": 3032,
												"nodeType": "Return",
												"src": "5553:18:12"
											}
										]
									},
									"documentation": {
										"id": 3021,
										"nodeType": "StructuredDocumentation",
										"src": "4935:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5478:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3024,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5498:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "5486:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 3023,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3022,
														"name": "Set",
														"nameLocations": [
															"5486:3:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2844,
														"src": "5486:3:12"
													},
													"referencedDeclaration": 2844,
													"src": "5486:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5485:17:12"
									},
									"returnParameters": {
										"id": 3029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "5525:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3026,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5525:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3027,
													"nodeType": "ArrayTypeName",
													"src": "5525:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5524:18:12"
									},
									"scope": 3432,
									"src": "5469:109:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 3038,
									"members": [
										{
											"constant": false,
											"id": 3037,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5635:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 3038,
											"src": "5631:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 3036,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3035,
													"name": "Set",
													"nameLocations": [
														"5631:3:12"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2844,
													"src": "5631:3:12"
												},
												"referencedDeclaration": 2844,
												"src": "5631:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5610:10:12",
									"nodeType": "StructDefinition",
									"scope": 3432,
									"src": "5603:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3055,
										"nodeType": "Block",
										"src": "5894:47:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3050,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3042,
																"src": "5916:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3051,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5920:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3037,
															"src": "5916:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 3052,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3044,
															"src": "5928:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3049,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2886,
														"src": "5911:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2844_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5911:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3048,
												"id": 3054,
												"nodeType": "Return",
												"src": "5904:30:12"
											}
										]
									},
									"documentation": {
										"id": 3039,
										"nodeType": "StructuredDocumentation",
										"src": "5654:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 3056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5827:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3042,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5850:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "5831:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3041,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3040,
														"name": "Bytes32Set",
														"nameLocations": [
															"5831:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3038,
														"src": "5831:10:12"
													},
													"referencedDeclaration": 3038,
													"src": "5831:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5863:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "5855:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3043,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5855:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5830:39:12"
									},
									"returnParameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "5888:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5888:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5887:6:12"
									},
									"scope": 3432,
									"src": "5818:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3073,
										"nodeType": "Block",
										"src": "6188:50:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3068,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3060,
																"src": "6213:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3069,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6217:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3037,
															"src": "6213:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 3070,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3062,
															"src": "6225:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3067,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2970,
														"src": "6205:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2844_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6205:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3066,
												"id": 3072,
												"nodeType": "Return",
												"src": "6198:33:12"
											}
										]
									},
									"documentation": {
										"id": 3057,
										"nodeType": "StructuredDocumentation",
										"src": "5947:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 3074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6118:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3060,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6144:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3074,
												"src": "6125:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3059,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3058,
														"name": "Bytes32Set",
														"nameLocations": [
															"6125:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3038,
														"src": "6125:10:12"
													},
													"referencedDeclaration": 3038,
													"src": "6125:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3062,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6157:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3074,
												"src": "6149:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3061,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6124:39:12"
									},
									"returnParameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3074,
												"src": "6182:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3064,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6182:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6181:6:12"
									},
									"scope": 3432,
									"src": "6109:129:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3091,
										"nodeType": "Block",
										"src": "6405:52:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3086,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3078,
																"src": "6432:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3087,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6436:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3037,
															"src": "6432:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 3088,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3080,
															"src": "6444:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3085,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2989,
														"src": "6422:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2844_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6422:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3084,
												"id": 3090,
												"nodeType": "Return",
												"src": "6415:35:12"
											}
										]
									},
									"documentation": {
										"id": 3075,
										"nodeType": "StructuredDocumentation",
										"src": "6244:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 3092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6328:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6356:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "6337:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3077,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3076,
														"name": "Bytes32Set",
														"nameLocations": [
															"6337:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3038,
														"src": "6337:10:12"
													},
													"referencedDeclaration": 3038,
													"src": "6337:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6369:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "6361:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3079,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6361:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6336:39:12"
									},
									"returnParameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "6399:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3082,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6399:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:6:12"
									},
									"scope": 3432,
									"src": "6319:138:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3106,
										"nodeType": "Block",
										"src": "6610:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3102,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3096,
																"src": "6635:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3103,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6639:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3037,
															"src": "6635:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3101,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3003,
														"src": "6627:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2844_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 3104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6627:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3100,
												"id": 3105,
												"nodeType": "Return",
												"src": "6620:26:12"
											}
										]
									},
									"documentation": {
										"id": 3093,
										"nodeType": "StructuredDocumentation",
										"src": "6463:70:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 3107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6547:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3096,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6573:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3107,
												"src": "6554:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3095,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3094,
														"name": "Bytes32Set",
														"nameLocations": [
															"6554:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3038,
														"src": "6554:10:12"
													},
													"referencedDeclaration": 3038,
													"src": "6554:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6553:24:12"
									},
									"returnParameters": {
										"id": 3100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3107,
												"src": "6601:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6600:9:12"
									},
									"scope": 3432,
									"src": "6538:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3124,
										"nodeType": "Block",
										"src": "7078:46:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3119,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3111,
																"src": "7099:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3120,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7103:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3037,
															"src": "7099:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 3121,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3113,
															"src": "7111:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3118,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3020,
														"src": "7095:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2844_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 3122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7095:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3117,
												"id": 3123,
												"nodeType": "Return",
												"src": "7088:29:12"
											}
										]
									},
									"documentation": {
										"id": 3108,
										"nodeType": "StructuredDocumentation",
										"src": "6659:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7004:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7026:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3125,
												"src": "7007:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3110,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3109,
														"name": "Bytes32Set",
														"nameLocations": [
															"7007:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3038,
														"src": "7007:10:12"
													},
													"referencedDeclaration": 3038,
													"src": "7007:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7039:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3125,
												"src": "7031:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7031:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7006:39:12"
									},
									"returnParameters": {
										"id": 3117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3125,
												"src": "7069:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3115,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7068:9:12"
									},
									"scope": 3432,
									"src": "6995:129:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3140,
										"nodeType": "Block",
										"src": "7745:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3136,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3129,
																"src": "7770:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 3137,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7774:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3037,
															"src": "7770:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3135,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3034,
														"src": "7762:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2844_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7762:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 3134,
												"id": 3139,
												"nodeType": "Return",
												"src": "7755:26:12"
											}
										]
									},
									"documentation": {
										"id": 3126,
										"nodeType": "StructuredDocumentation",
										"src": "7130:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7673:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7699:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3141,
												"src": "7680:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 3128,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3127,
														"name": "Bytes32Set",
														"nameLocations": [
															"7680:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3038,
														"src": "7680:10:12"
													},
													"referencedDeclaration": 3038,
													"src": "7680:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$3038_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7679:24:12"
									},
									"returnParameters": {
										"id": 3134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3141,
												"src": "7727:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3131,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7727:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3132,
													"nodeType": "ArrayTypeName",
													"src": "7727:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7726:18:12"
									},
									"scope": 3432,
									"src": "7664:124:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 3145,
									"members": [
										{
											"constant": false,
											"id": 3144,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "7845:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 3145,
											"src": "7841:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 3143,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3142,
													"name": "Set",
													"nameLocations": [
														"7841:3:12"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2844,
													"src": "7841:3:12"
												},
												"referencedDeclaration": 2844,
												"src": "7841:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "7820:10:12",
									"nodeType": "StructDefinition",
									"scope": 3432,
									"src": "7813:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3171,
										"nodeType": "Block",
										"src": "8104:74:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3157,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3149,
																"src": "8126:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3158,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8130:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3144,
															"src": "8126:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3165,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3151,
																					"src": "8162:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8154:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3163,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8154:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8154:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8146:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3161,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8146:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8146:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8138:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3159,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8138:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8138:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3156,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2886,
														"src": "8121:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2844_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8121:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3155,
												"id": 3170,
												"nodeType": "Return",
												"src": "8114:57:12"
											}
										]
									},
									"documentation": {
										"id": 3146,
										"nodeType": "StructuredDocumentation",
										"src": "7864:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 3172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8037:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8060:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3172,
												"src": "8041:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3148,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3147,
														"name": "AddressSet",
														"nameLocations": [
															"8041:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3145,
														"src": "8041:10:12"
													},
													"referencedDeclaration": 3145,
													"src": "8041:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8073:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3172,
												"src": "8065:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8065:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8040:39:12"
									},
									"returnParameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3172,
												"src": "8098:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8098:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8097:6:12"
									},
									"scope": 3432,
									"src": "8028:150:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3198,
										"nodeType": "Block",
										"src": "8425:77:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3184,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3176,
																"src": "8450:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3185,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8454:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3144,
															"src": "8450:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3192,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3178,
																					"src": "8486:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8478:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3190,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8478:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8478:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8470:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3188,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8470:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8470:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8462:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3186,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8462:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8462:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3183,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2970,
														"src": "8442:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2844_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8442:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3182,
												"id": 3197,
												"nodeType": "Return",
												"src": "8435:60:12"
											}
										]
									},
									"documentation": {
										"id": 3173,
										"nodeType": "StructuredDocumentation",
										"src": "8184:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 3199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8355:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8381:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "8362:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3175,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3174,
														"name": "AddressSet",
														"nameLocations": [
															"8362:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3145,
														"src": "8362:10:12"
													},
													"referencedDeclaration": 3145,
													"src": "8362:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3178,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8394:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "8386:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8386:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8361:39:12"
									},
									"returnParameters": {
										"id": 3182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "8419:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8419:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8418:6:12"
									},
									"scope": 3432,
									"src": "8346:156:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3225,
										"nodeType": "Block",
										"src": "8669:79:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3211,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3203,
																"src": "8696:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3212,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8700:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3144,
															"src": "8696:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3219,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3205,
																					"src": "8732:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3218,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8724:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3217,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8724:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8724:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8716:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3215,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8716:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8716:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8708:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3213,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8708:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8708:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3210,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2989,
														"src": "8686:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2844_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8686:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3209,
												"id": 3224,
												"nodeType": "Return",
												"src": "8679:62:12"
											}
										]
									},
									"documentation": {
										"id": 3200,
										"nodeType": "StructuredDocumentation",
										"src": "8508:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 3226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8592:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3203,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8620:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3226,
												"src": "8601:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3202,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3201,
														"name": "AddressSet",
														"nameLocations": [
															"8601:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3145,
														"src": "8601:10:12"
													},
													"referencedDeclaration": 3145,
													"src": "8601:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3205,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8633:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3226,
												"src": "8625:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8625:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:39:12"
									},
									"returnParameters": {
										"id": 3209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3226,
												"src": "8663:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8663:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8662:6:12"
									},
									"scope": 3432,
									"src": "8583:165:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3240,
										"nodeType": "Block",
										"src": "8901:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3236,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3230,
																"src": "8926:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3237,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8930:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3144,
															"src": "8926:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3235,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3003,
														"src": "8918:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2844_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 3238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8918:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3234,
												"id": 3239,
												"nodeType": "Return",
												"src": "8911:26:12"
											}
										]
									},
									"documentation": {
										"id": 3227,
										"nodeType": "StructuredDocumentation",
										"src": "8754:70:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 3241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "8838:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3230,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8864:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3241,
												"src": "8845:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3229,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3228,
														"name": "AddressSet",
														"nameLocations": [
															"8845:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3145,
														"src": "8845:10:12"
													},
													"referencedDeclaration": 3145,
													"src": "8845:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8844:24:12"
									},
									"returnParameters": {
										"id": 3234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3241,
												"src": "8892:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8892:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8891:9:12"
									},
									"scope": 3432,
									"src": "8829:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3267,
										"nodeType": "Block",
										"src": "9369:73:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 3259,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3245,
																						"src": "9414:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 3260,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9418:6:12",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3144,
																					"src": "9414:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$2844_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 3261,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3247,
																					"src": "9426:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$2844_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3258,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3020,
																				"src": "9410:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2844_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 3262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9410:22:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 3257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9402:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3256,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9402:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9402:31:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9394:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 3254,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9394:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9394:40:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 3253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9386:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 3252,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9386:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9386:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3251,
												"id": 3266,
												"nodeType": "Return",
												"src": "9379:56:12"
											}
										]
									},
									"documentation": {
										"id": 3242,
										"nodeType": "StructuredDocumentation",
										"src": "8950:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9295:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3245,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9317:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "9298:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3244,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3243,
														"name": "AddressSet",
														"nameLocations": [
															"9298:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3145,
														"src": "9298:10:12"
													},
													"referencedDeclaration": 3145,
													"src": "9298:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3247,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9330:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "9322:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9322:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9297:39:12"
									},
									"returnParameters": {
										"id": 3251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "9360:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9360:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9359:9:12"
									},
									"scope": 3432,
									"src": "9286:156:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3297,
										"nodeType": "Block",
										"src": "10063:219:12",
										"statements": [
											{
												"assignments": [
													3282
												],
												"declarations": [
													{
														"constant": false,
														"id": 3282,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10090:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 3297,
														"src": "10073:22:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3280,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10073:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3281,
															"nodeType": "ArrayTypeName",
															"src": "10073:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3287,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3284,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3272,
																"src": "10106:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 3285,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10110:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3144,
															"src": "10106:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3283,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3034,
														"src": "10098:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2844_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10098:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10073:44:12"
											},
											{
												"assignments": [
													3292
												],
												"declarations": [
													{
														"constant": false,
														"id": 3292,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10144:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3297,
														"src": "10127:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 3290,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10127:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3291,
															"nodeType": "ArrayTypeName",
															"src": "10127:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3293,
												"nodeType": "VariableDeclarationStatement",
												"src": "10127:23:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10213:39:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10227:15:12",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10237:5:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10227:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3292,
														"isOffset": false,
														"isSlot": false,
														"src": "10227:6:12",
														"valueSize": 1
													},
													{
														"declaration": 3282,
														"isOffset": false,
														"isSlot": false,
														"src": "10237:5:12",
														"valueSize": 1
													}
												],
												"id": 3294,
												"nodeType": "InlineAssembly",
												"src": "10204:48:12"
											},
											{
												"expression": {
													"id": 3295,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3292,
													"src": "10269:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 3277,
												"id": 3296,
												"nodeType": "Return",
												"src": "10262:13:12"
											}
										]
									},
									"documentation": {
										"id": 3269,
										"nodeType": "StructuredDocumentation",
										"src": "9448:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "9991:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3272,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10017:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3298,
												"src": "9998:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 3271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3270,
														"name": "AddressSet",
														"nameLocations": [
															"9998:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3145,
														"src": "9998:10:12"
													},
													"referencedDeclaration": 3145,
													"src": "9998:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$3145_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9997:24:12"
									},
									"returnParameters": {
										"id": 3277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3298,
												"src": "10045:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3274,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10045:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3275,
													"nodeType": "ArrayTypeName",
													"src": "10045:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10044:18:12"
									},
									"scope": 3432,
									"src": "9982:300:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 3302,
									"members": [
										{
											"constant": false,
											"id": 3301,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10333:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 3302,
											"src": "10329:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 3300,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3299,
													"name": "Set",
													"nameLocations": [
														"10329:3:12"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2844,
													"src": "10329:3:12"
												},
												"referencedDeclaration": 2844,
												"src": "10329:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2844_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10311:7:12",
									"nodeType": "StructDefinition",
									"scope": 3432,
									"src": "10304:42:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3322,
										"nodeType": "Block",
										"src": "10589:56:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3314,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3306,
																"src": "10611:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3315,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10615:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3301,
															"src": "10611:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3318,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3308,
																	"src": "10631:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10623:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3316,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10623:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10623:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3313,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2886,
														"src": "10606:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2844_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10606:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3312,
												"id": 3321,
												"nodeType": "Return",
												"src": "10599:39:12"
											}
										]
									},
									"documentation": {
										"id": 3303,
										"nodeType": "StructuredDocumentation",
										"src": "10352:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 3323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10525:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3306,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10545:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3323,
												"src": "10529:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3305,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3304,
														"name": "UintSet",
														"nameLocations": [
															"10529:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3302,
														"src": "10529:7:12"
													},
													"referencedDeclaration": 3302,
													"src": "10529:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10558:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3323,
												"src": "10550:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10550:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10528:36:12"
									},
									"returnParameters": {
										"id": 3312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3323,
												"src": "10583:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10583:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10582:6:12"
									},
									"scope": 3432,
									"src": "10516:129:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3343,
										"nodeType": "Block",
										"src": "10889:59:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3335,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3327,
																"src": "10914:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3336,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10918:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3301,
															"src": "10914:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3339,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3329,
																	"src": "10934:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10926:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3337,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10926:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10926:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3334,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2970,
														"src": "10906:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2844_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10906:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3333,
												"id": 3342,
												"nodeType": "Return",
												"src": "10899:42:12"
											}
										]
									},
									"documentation": {
										"id": 3324,
										"nodeType": "StructuredDocumentation",
										"src": "10651:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 3344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "10822:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3327,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10845:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3344,
												"src": "10829:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3326,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3325,
														"name": "UintSet",
														"nameLocations": [
															"10829:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3302,
														"src": "10829:7:12"
													},
													"referencedDeclaration": 3302,
													"src": "10829:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3329,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10858:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3344,
												"src": "10850:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10850:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10828:36:12"
									},
									"returnParameters": {
										"id": 3333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3344,
												"src": "10883:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10883:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10882:6:12"
									},
									"scope": 3432,
									"src": "10813:135:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3364,
										"nodeType": "Block",
										"src": "11112:61:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3356,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3348,
																"src": "11139:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3357,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11143:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3301,
															"src": "11139:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3360,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3350,
																	"src": "11159:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11151:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3358,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11151:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11151:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3355,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2989,
														"src": "11129:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2844_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11129:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3354,
												"id": 3363,
												"nodeType": "Return",
												"src": "11122:44:12"
											}
										]
									},
									"documentation": {
										"id": 3345,
										"nodeType": "StructuredDocumentation",
										"src": "10954:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 3365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11038:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3348,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11063:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3365,
												"src": "11047:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3347,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3346,
														"name": "UintSet",
														"nameLocations": [
															"11047:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3302,
														"src": "11047:7:12"
													},
													"referencedDeclaration": 3302,
													"src": "11047:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3350,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11076:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3365,
												"src": "11068:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11068:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11046:36:12"
									},
									"returnParameters": {
										"id": 3354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3365,
												"src": "11106:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11106:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11105:6:12"
									},
									"scope": 3432,
									"src": "11029:144:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3379,
										"nodeType": "Block",
										"src": "11323:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3375,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3369,
																"src": "11348:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3376,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11352:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3301,
															"src": "11348:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3374,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3003,
														"src": "11340:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2844_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 3377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11340:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3373,
												"id": 3378,
												"nodeType": "Return",
												"src": "11333:26:12"
											}
										]
									},
									"documentation": {
										"id": 3366,
										"nodeType": "StructuredDocumentation",
										"src": "11179:70:12",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 3380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11263:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3369,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11286:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3380,
												"src": "11270:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3368,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3367,
														"name": "UintSet",
														"nameLocations": [
															"11270:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3302,
														"src": "11270:7:12"
													},
													"referencedDeclaration": 3302,
													"src": "11270:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11269:21:12"
									},
									"returnParameters": {
										"id": 3373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3380,
												"src": "11314:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:9:12"
									},
									"scope": 3432,
									"src": "11254:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3400,
										"nodeType": "Block",
										"src": "11788:55:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3394,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3384,
																		"src": "11817:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 3395,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11821:6:12",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3301,
																	"src": "11817:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$2844_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 3396,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3386,
																	"src": "11829:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$2844_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3393,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3020,
																"src": "11813:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2844_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 3397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11813:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11805:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3391,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11805:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11805:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3390,
												"id": 3399,
												"nodeType": "Return",
												"src": "11798:38:12"
											}
										]
									},
									"documentation": {
										"id": 3381,
										"nodeType": "StructuredDocumentation",
										"src": "11372:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "11717:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3384,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11736:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3401,
												"src": "11720:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3383,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3382,
														"name": "UintSet",
														"nameLocations": [
															"11720:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3302,
														"src": "11720:7:12"
													},
													"referencedDeclaration": 3302,
													"src": "11720:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3386,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "11749:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3401,
												"src": "11741:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11741:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11719:36:12"
									},
									"returnParameters": {
										"id": 3390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3401,
												"src": "11779:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11779:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11778:9:12"
									},
									"scope": 3432,
									"src": "11708:135:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3430,
										"nodeType": "Block",
										"src": "12461:219:12",
										"statements": [
											{
												"assignments": [
													3415
												],
												"declarations": [
													{
														"constant": false,
														"id": 3415,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12488:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 3430,
														"src": "12471:22:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3413,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12471:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3414,
															"nodeType": "ArrayTypeName",
															"src": "12471:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3420,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3417,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3405,
																"src": "12504:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 3418,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12508:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3301,
															"src": "12504:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2844_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 3416,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3034,
														"src": "12496:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2844_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12496:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12471:44:12"
											},
											{
												"assignments": [
													3425
												],
												"declarations": [
													{
														"constant": false,
														"id": 3425,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12542:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3430,
														"src": "12525:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3423,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12525:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3424,
															"nodeType": "ArrayTypeName",
															"src": "12525:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3426,
												"nodeType": "VariableDeclarationStatement",
												"src": "12525:23:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12611:39:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12625:15:12",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12635:5:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12625:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3425,
														"isOffset": false,
														"isSlot": false,
														"src": "12625:6:12",
														"valueSize": 1
													},
													{
														"declaration": 3415,
														"isOffset": false,
														"isSlot": false,
														"src": "12635:5:12",
														"valueSize": 1
													}
												],
												"id": 3427,
												"nodeType": "InlineAssembly",
												"src": "12602:48:12"
											},
											{
												"expression": {
													"id": 3428,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3425,
													"src": "12667:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 3410,
												"id": 3429,
												"nodeType": "Return",
												"src": "12660:13:12"
											}
										]
									},
									"documentation": {
										"id": 3402,
										"nodeType": "StructuredDocumentation",
										"src": "11849:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12392:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3405,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12415:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "12399:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 3404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3403,
														"name": "UintSet",
														"nameLocations": [
															"12399:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3302,
														"src": "12399:7:12"
													},
													"referencedDeclaration": 3302,
													"src": "12399:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$3302_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12398:21:12"
									},
									"returnParameters": {
										"id": 3410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "12443:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3407,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12443:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3408,
													"nodeType": "ArrayTypeName",
													"src": "12443:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12442:18:12"
									},
									"scope": 3432,
									"src": "12383:297:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3433,
							"src": "1228:11454:12",
							"usedErrors": []
						}
					],
					"src": "115:12568:12"
				},
				"id": 12
			},
			"source/BinanceBABT/contracts/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/utils/Initializable.sol",
					"exportedSymbols": {
						"Address": [
							1615
						],
						"Initializable": [
							3583
						]
					},
					"id": 3584,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:13"
						},
						{
							"absolutePath": "source/BinanceBABT/contracts/utils/Address.sol",
							"file": "./Address.sol",
							"id": 3435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3584,
							"sourceUnit": 1616,
							"src": "138:23:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3436,
								"nodeType": "StructuredDocumentation",
								"src": "163:2198:13",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 3583,
							"linearizedBaseContracts": [
								3583
							],
							"name": "Initializable",
							"nameLocation": "2380:13:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 3437,
										"nodeType": "StructuredDocumentation",
										"src": "2400:109:13",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 3439,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2528:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 3583,
									"src": "2514:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3438,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2514:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3440,
										"nodeType": "StructuredDocumentation",
										"src": "2547:91:13",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 3442,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2656:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 3583,
									"src": "2643:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 3441,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2643:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3443,
										"nodeType": "StructuredDocumentation",
										"src": "2676:90:13",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 3447,
									"name": "Initialized",
									"nameLocation": "2777:11:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3445,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2795:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "2789:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3444,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2789:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2788:15:13"
									},
									"src": "2771:33:13"
								},
								{
									"body": {
										"id": 3502,
										"nodeType": "Block",
										"src": "3080:472:13",
										"statements": [
											{
												"assignments": [
													3451
												],
												"declarations": [
													{
														"constant": false,
														"id": 3451,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3095:14:13",
														"nodeType": "VariableDeclaration",
														"scope": 3502,
														"src": "3090:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3450,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3090:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3454,
												"initialValue": {
													"id": 3453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3112:14:13",
													"subExpression": {
														"id": 3452,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3442,
														"src": "3113:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3090:36:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3456,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3451,
																			"src": "3158:14:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 3459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3457,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3439,
																				"src": "3176:12:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3191:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3176:16:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3158:34:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3461,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3157:36:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3198:34:13",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 3466,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3226:4:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$3583",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$3583",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 3465,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3218:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 3464,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3218:7:13",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 3467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3218:13:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 3462,
																						"name": "Address",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1615,
																						"src": "3199:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_Address_$1615_$",
																							"typeString": "type(library Address)"
																						}
																					},
																					"id": 3463,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3207:10:13",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1303,
																					"src": "3199:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 3468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3199:33:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 3472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3470,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3439,
																				"src": "3236:12:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3252:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3236:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3198:55:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3474,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3197:57:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3157:97:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 3476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3268:48:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 3455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3136:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3136:190:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3478,
												"nodeType": "ExpressionStatement",
												"src": "3136:190:13"
											},
											{
												"expression": {
													"id": 3481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3479,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3439,
														"src": "3336:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 3480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3351:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3336:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 3482,
												"nodeType": "ExpressionStatement",
												"src": "3336:16:13"
											},
											{
												"condition": {
													"id": 3483,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3451,
													"src": "3366:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3489,
												"nodeType": "IfStatement",
												"src": "3362:65:13",
												"trueBody": {
													"id": 3488,
													"nodeType": "Block",
													"src": "3382:45:13",
													"statements": [
														{
															"expression": {
																"id": 3486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3484,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3442,
																	"src": "3396:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 3485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3412:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3396:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3487,
															"nodeType": "ExpressionStatement",
															"src": "3396:20:13"
														}
													]
												}
											},
											{
												"id": 3490,
												"nodeType": "PlaceholderStatement",
												"src": "3436:1:13"
											},
											{
												"condition": {
													"id": 3491,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3451,
													"src": "3451:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3501,
												"nodeType": "IfStatement",
												"src": "3447:99:13",
												"trueBody": {
													"id": 3500,
													"nodeType": "Block",
													"src": "3467:79:13",
													"statements": [
														{
															"expression": {
																"id": 3494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3492,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3442,
																	"src": "3481:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 3493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3497:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3481:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3495,
															"nodeType": "ExpressionStatement",
															"src": "3481:21:13"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 3497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3533:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 3496,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3447,
																	"src": "3521:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 3498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3521:14:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3499,
															"nodeType": "EmitStatement",
															"src": "3516:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3448,
										"nodeType": "StructuredDocumentation",
										"src": "2810:242:13",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 3503,
									"name": "initializer",
									"nameLocation": "3066:11:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3077:2:13"
									},
									"src": "3057:495:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3535,
										"nodeType": "Block",
										"src": "4367:255:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4385:14:13",
																"subExpression": {
																	"id": 3509,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3442,
																	"src": "4386:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 3513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3511,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3439,
																	"src": "4403:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3512,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3506,
																	"src": "4418:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4403:22:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4385:40:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 3515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4427:48:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 3508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4377:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4377:99:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3517,
												"nodeType": "ExpressionStatement",
												"src": "4377:99:13"
											},
											{
												"expression": {
													"id": 3520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3518,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3439,
														"src": "4486:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3519,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3506,
														"src": "4501:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4486:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 3521,
												"nodeType": "ExpressionStatement",
												"src": "4486:22:13"
											},
											{
												"expression": {
													"id": 3524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3522,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3442,
														"src": "4518:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4534:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4518:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3525,
												"nodeType": "ExpressionStatement",
												"src": "4518:20:13"
											},
											{
												"id": 3526,
												"nodeType": "PlaceholderStatement",
												"src": "4548:1:13"
											},
											{
												"expression": {
													"id": 3529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3527,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3442,
														"src": "4559:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4575:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4559:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3530,
												"nodeType": "ExpressionStatement",
												"src": "4559:21:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3532,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3506,
															"src": "4607:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 3531,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3447,
														"src": "4595:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 3533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3534,
												"nodeType": "EmitStatement",
												"src": "4590:25:13"
											}
										]
									},
									"documentation": {
										"id": 3504,
										"nodeType": "StructuredDocumentation",
										"src": "3558:766:13",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 3536,
									"name": "reinitializer",
									"nameLocation": "4338:13:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3506,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4358:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3536,
												"src": "4352:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3505,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4352:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:15:13"
									},
									"src": "4329:293:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3545,
										"nodeType": "Block",
										"src": "4860:97:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3540,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3442,
															"src": "4878:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 3541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4893:45:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 3539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4870:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:69:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3543,
												"nodeType": "ExpressionStatement",
												"src": "4870:69:13"
											},
											{
												"id": 3544,
												"nodeType": "PlaceholderStatement",
												"src": "4949:1:13"
											}
										]
									},
									"documentation": {
										"id": 3537,
										"nodeType": "StructuredDocumentation",
										"src": "4628:199:13",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 3546,
									"name": "onlyInitializing",
									"nameLocation": "4841:16:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4857:2:13"
									},
									"src": "4832:125:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3581,
										"nodeType": "Block",
										"src": "5405:230:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5423:14:13",
															"subExpression": {
																"id": 3551,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3442,
																"src": "5424:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 3553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5439:41:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 3550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5415:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5415:66:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3555,
												"nodeType": "ExpressionStatement",
												"src": "5415:66:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3556,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3439,
														"src": "5495:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5515:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3558,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5515:5:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 3557,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5510:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5510:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 3561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5522:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5510:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5495:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3580,
												"nodeType": "IfStatement",
												"src": "5491:138:13",
												"trueBody": {
													"id": 3579,
													"nodeType": "Block",
													"src": "5527:102:13",
													"statements": [
														{
															"expression": {
																"id": 3569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3563,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3439,
																	"src": "5541:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 3566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5561:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 3565,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "5561:5:13",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 3564,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5556:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 3567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5556:11:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 3568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5568:3:13",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5556:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5541:30:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 3570,
															"nodeType": "ExpressionStatement",
															"src": "5541:30:13"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 3574,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5607:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 3573,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "5607:5:13",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 3572,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "5602:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5602:11:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 3576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "5614:3:13",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "5602:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 3571,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3447,
																	"src": "5590:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 3577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5590:28:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3578,
															"nodeType": "EmitStatement",
															"src": "5585:33:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3547,
										"nodeType": "StructuredDocumentation",
										"src": "4963:388:13",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 3582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5365:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5385:2:13"
									},
									"returnParameters": {
										"id": 3549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5405:0:13"
									},
									"scope": 3583,
									"src": "5356:279:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3584,
							"src": "2362:3275:13",
							"usedErrors": []
						}
					],
					"src": "113:5525:13"
				},
				"id": 13
			},
			"source/BinanceBABT/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "source/BinanceBABT/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							3809
						]
					},
					"id": 3810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3585,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3586,
								"nodeType": "StructuredDocumentation",
								"src": "126:34:14",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 3809,
							"linearizedBaseContracts": [
								3809
							],
							"name": "Strings",
							"nameLocation": "169:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3589,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "208:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 3809,
									"src": "183:58:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 3587,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 3588,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:18:14",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 3592,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "270:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 3809,
									"src": "247:43:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3590,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "247:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 3591,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:2:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3670,
										"nodeType": "Block",
										"src": "463:632:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3600,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3595,
														"src": "665:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3606,
												"nodeType": "IfStatement",
												"src": "661:51:14",
												"trueBody": {
													"id": 3605,
													"nodeType": "Block",
													"src": "677:35:14",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 3603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 3599,
															"id": 3604,
															"nodeType": "Return",
															"src": "691:10:14"
														}
													]
												}
											},
											{
												"assignments": [
													3608
												],
												"declarations": [
													{
														"constant": false,
														"id": 3608,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "729:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 3670,
														"src": "721:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3607,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3610,
												"initialValue": {
													"id": 3609,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3595,
													"src": "736:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:14"
											},
											{
												"assignments": [
													3612
												],
												"declarations": [
													{
														"constant": false,
														"id": 3612,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "759:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3670,
														"src": "751:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3611,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "751:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3613,
												"nodeType": "VariableDeclarationStatement",
												"src": "751:14:14"
											},
											{
												"body": {
													"id": 3624,
													"nodeType": "Block",
													"src": "793:57:14",
													"statements": [
														{
															"expression": {
																"id": 3618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "807:8:14",
																"subExpression": {
																	"id": 3617,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3612,
																	"src": "807:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3619,
															"nodeType": "ExpressionStatement",
															"src": "807:8:14"
														},
														{
															"expression": {
																"id": 3622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3620,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3608,
																	"src": "829:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 3621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "837:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "829:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3623,
															"nodeType": "ExpressionStatement",
															"src": "829:10:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3614,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3608,
														"src": "782:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "782:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3625,
												"nodeType": "WhileStatement",
												"src": "775:75:14"
											},
											{
												"assignments": [
													3627
												],
												"declarations": [
													{
														"constant": false,
														"id": 3627,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "872:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3670,
														"src": "859:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3626,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "859:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3632,
												"initialValue": {
													"arguments": [
														{
															"id": 3630,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3612,
															"src": "891:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "881:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 3628,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "885:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 3631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:17:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:39:14"
											},
											{
												"body": {
													"id": 3663,
													"nodeType": "Block",
													"src": "927:131:14",
													"statements": [
														{
															"expression": {
																"id": 3638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3636,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3612,
																	"src": "941:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 3637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "951:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "941:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3639,
															"nodeType": "ExpressionStatement",
															"src": "941:11:14"
														},
														{
															"expression": {
																"id": 3657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3640,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3627,
																		"src": "966:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3642,
																	"indexExpression": {
																		"id": 3641,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3612,
																		"src": "973:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "966:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3654,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 3647,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "996:2:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3652,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3650,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3595,
																									"src": "1009:5:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 3651,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1017:2:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1009:10:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 3649,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1001:7:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 3648,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1001:7:14",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 3653,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1001:19:14",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "996:24:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "990:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 3645,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "990:5:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "990:31:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 3644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "983:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 3643,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "983:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:39:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "966:56:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 3658,
															"nodeType": "ExpressionStatement",
															"src": "966:56:14"
														},
														{
															"expression": {
																"id": 3661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3659,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3595,
																	"src": "1036:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 3660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1036:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3662,
															"nodeType": "ExpressionStatement",
															"src": "1036:11:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3633,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3595,
														"src": "915:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "915:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3664,
												"nodeType": "WhileStatement",
												"src": "908:150:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3667,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3627,
															"src": "1081:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1074:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 3665,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1074:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 3668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3599,
												"id": 3669,
												"nodeType": "Return",
												"src": "1067:21:14"
											}
										]
									},
									"documentation": {
										"id": 3593,
										"nodeType": "StructuredDocumentation",
										"src": "297:90:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 3671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3595,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3671,
												"src": "410:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:14"
									},
									"returnParameters": {
										"id": 3599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3671,
												"src": "448:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3597,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:14"
									},
									"scope": 3809,
									"src": "392:703:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3711,
										"nodeType": "Block",
										"src": "1274:255:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3679,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3674,
														"src": "1288:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1288:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3685,
												"nodeType": "IfStatement",
												"src": "1284:54:14",
												"trueBody": {
													"id": 3684,
													"nodeType": "Block",
													"src": "1300:38:14",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 3682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 3678,
															"id": 3683,
															"nodeType": "Return",
															"src": "1314:13:14"
														}
													]
												}
											},
											{
												"assignments": [
													3687
												],
												"declarations": [
													{
														"constant": false,
														"id": 3687,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1355:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 3711,
														"src": "1347:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3686,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3689,
												"initialValue": {
													"id": 3688,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3674,
													"src": "1362:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1347:20:14"
											},
											{
												"assignments": [
													3691
												],
												"declarations": [
													{
														"constant": false,
														"id": 3691,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1385:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3711,
														"src": "1377:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1377:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3693,
												"initialValue": {
													"hexValue": "30",
													"id": 3692,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:18:14"
											},
											{
												"body": {
													"id": 3704,
													"nodeType": "Block",
													"src": "1423:57:14",
													"statements": [
														{
															"expression": {
																"id": 3698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1437:8:14",
																"subExpression": {
																	"id": 3697,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3691,
																	"src": "1437:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3699,
															"nodeType": "ExpressionStatement",
															"src": "1437:8:14"
														},
														{
															"expression": {
																"id": 3702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3700,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3687,
																	"src": "1459:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 3701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1459:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3703,
															"nodeType": "ExpressionStatement",
															"src": "1459:10:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3694,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3687,
														"src": "1412:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1420:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1412:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3705,
												"nodeType": "WhileStatement",
												"src": "1405:75:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3674,
															"src": "1508:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3708,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3691,
															"src": "1515:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3706,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3712,
															3788,
															3808
														],
														"referencedDeclaration": 3788,
														"src": "1496:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 3709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:26:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3678,
												"id": 3710,
												"nodeType": "Return",
												"src": "1489:33:14"
											}
										]
									},
									"documentation": {
										"id": 3672,
										"nodeType": "StructuredDocumentation",
										"src": "1101:94:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 3712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1209:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3674,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1229:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3712,
												"src": "1221:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:15:14"
									},
									"returnParameters": {
										"id": 3678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3712,
												"src": "1259:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3676,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1259:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:15:14"
									},
									"scope": 3809,
									"src": "1200:329:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3787,
										"nodeType": "Block",
										"src": "1742:351:14",
										"statements": [
											{
												"assignments": [
													3723
												],
												"declarations": [
													{
														"constant": false,
														"id": 3723,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1765:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3787,
														"src": "1752:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3722,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1752:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3732,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1784:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3727,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3717,
																	"src": "1788:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 3729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1784:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1774:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 3724,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1778:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 3731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1752:47:14"
											},
											{
												"expression": {
													"id": 3737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3733,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3723,
															"src": "1809:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3735,
														"indexExpression": {
															"hexValue": "30",
															"id": 3734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1809:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3738,
												"nodeType": "ExpressionStatement",
												"src": "1809:15:14"
											},
											{
												"expression": {
													"id": 3743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3739,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3723,
															"src": "1834:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3741,
														"indexExpression": {
															"hexValue": "31",
															"id": 3740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 3742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1846:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1834:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3744,
												"nodeType": "ExpressionStatement",
												"src": "1834:15:14"
											},
											{
												"body": {
													"id": 3773,
													"nodeType": "Block",
													"src": "1904:87:14",
													"statements": [
														{
															"expression": {
																"id": 3767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3759,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3723,
																		"src": "1918:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3761,
																	"indexExpression": {
																		"id": 3760,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3746,
																		"src": "1925:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1918:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3762,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3589,
																		"src": "1930:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 3766,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3763,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3715,
																			"src": "1943:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 3764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1951:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1943:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1930:25:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1918:37:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 3768,
															"nodeType": "ExpressionStatement",
															"src": "1918:37:14"
														},
														{
															"expression": {
																"id": 3771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3769,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3715,
																	"src": "1969:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 3770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1979:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1969:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3772,
															"nodeType": "ExpressionStatement",
															"src": "1969:11:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3753,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3746,
														"src": "1892:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 3754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1892:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3774,
												"initializationExpression": {
													"assignments": [
														3746
													],
													"declarations": [
														{
															"constant": false,
															"id": 3746,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1872:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 3774,
															"src": "1864:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3745,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1864:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3752,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 3747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 3748,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3717,
																"src": "1880:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1876:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 3750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1889:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1876:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1864:26:14"
												},
												"loopExpression": {
													"expression": {
														"id": 3757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1899:3:14",
														"subExpression": {
															"id": 3756,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3746,
															"src": "1901:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3758,
													"nodeType": "ExpressionStatement",
													"src": "1899:3:14"
												},
												"nodeType": "ForStatement",
												"src": "1859:132:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3776,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3715,
																"src": "2008:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 3777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2008:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 3779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 3775,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3781,
												"nodeType": "ExpressionStatement",
												"src": "2000:55:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3784,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3723,
															"src": "2079:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2072:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 3782,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2072:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 3785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3721,
												"id": 3786,
												"nodeType": "Return",
												"src": "2065:21:14"
											}
										]
									},
									"documentation": {
										"id": 3713,
										"nodeType": "StructuredDocumentation",
										"src": "1535:112:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 3788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1661:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3715,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1681:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3788,
												"src": "1673:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3717,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1696:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3788,
												"src": "1688:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:31:14"
									},
									"returnParameters": {
										"id": 3721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3788,
												"src": "1727:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3719,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:14"
									},
									"scope": 3809,
									"src": "1652:441:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3807,
										"nodeType": "Block",
										"src": "2318:76:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 3801,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3791,
																			"src": "2363:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 3799,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 3798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3797,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:22:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3804,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3592,
															"src": "2371:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 3796,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3712,
															3788,
															3808
														],
														"referencedDeclaration": 3788,
														"src": "2335:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 3805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3795,
												"id": 3806,
												"nodeType": "Return",
												"src": "2328:59:14"
											}
										]
									},
									"documentation": {
										"id": 3789,
										"nodeType": "StructuredDocumentation",
										"src": "2099:141:14",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 3808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2254:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3791,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2274:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3808,
												"src": "2266:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:14:14"
									},
									"returnParameters": {
										"id": 3795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3808,
												"src": "2303:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3793,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:15:14"
									},
									"scope": 3809,
									"src": "2245:149:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3810,
							"src": "161:2235:14",
							"usedErrors": []
						}
					],
					"src": "101:2296:14"
				},
				"id": 14
			}
		}
	}
}